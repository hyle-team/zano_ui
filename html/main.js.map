{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/api/models/wallet.model.ts","./src/app/api/services/api.service.ts","./src/app/api/services/backend.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/layouts/full-layout/full-layout.component.ts","./src/app/layouts/full-layout/full-layout.module.ts","./src/app/layouts/sidebar/sidebar.component.ts","./src/app/layouts/sidebar/sidebar.module.ts","./src/app/layouts/with-sidebar-layout/with-sidebar-layout.component.ts","./src/app/layouts/with-sidebar-layout/with-sidebar-layout.component.html","./src/app/layouts/with-sidebar-layout/with-sidebar-layout.module.ts","./src/app/pages/add-wallet/add-wallet.component.ts","./src/app/pages/add-wallet/add-wallet.component.html","./src/app/pages/assign-alias/assign-alias.component.ts","./src/app/pages/assign-alias/assign-alias.component.html","./src/app/pages/auth/auth-routing.module.ts","./src/app/pages/auth/auth.module.ts","./src/app/pages/auth/login/login.component.ts","./src/app/pages/auth/login/login.component.html","./src/app/pages/auth/no-wallet/no-wallet.component.ts","./src/app/pages/auth/no-wallet/no-wallet.component.html","./src/app/pages/create-wallet/create-wallet.component.ts","./src/app/pages/deeplink/deeplink.component.ts","./src/app/pages/deeplink/deeplink.module.ts","./src/app/pages/deeplink/modals/deeplink-modal/deeplink-modal.component.ts","./src/app/pages/deeplink/modals/deeplink-modal/deeplink-modal.module.ts","./src/app/pages/deeplink/modals/sync-modal/sync-modal.component.ts","./src/app/pages/deeplink/modals/sync-modal/sync-modal.module.ts","./src/app/pages/edit-alias/edit-alias.component.ts","./src/app/pages/export-import/export-import.component.ts","./src/app/pages/open-wallet/open-wallet.component.ts","./src/app/pages/pages-routing.module.ts","./src/app/pages/pages.module.ts","./src/app/pages/paths.ts","./src/app/pages/restore-wallet/restore-wallet.component.ts","./src/app/pages/restore-wallet/restore-wallet.component.html","./src/app/pages/seed-phrase/seed-phrase.component.ts","./src/app/pages/settings/settings.component.ts","./src/app/pages/settings/settings.component.html","./src/app/pages/transfer-alias/transfer-alias.component.ts","./src/app/pages/wallet-details/wallet-details.component.ts","./src/app/pages/wallet/tabs/assets/assets.component.ts","./src/app/pages/wallet/tabs/assets/assets.component.html","./src/app/pages/wallet/tabs/custom-assets/modals/burn-custom-asset/burn-custom-asset.component.ts","./src/app/pages/wallet/tabs/custom-assets/modals/burn-custom-asset/burn-custom-asset.component.html","./src/app/pages/wallet/tabs/custom-assets/modals/confirm-create-custom-asset/confirm-create-custom-asset.component.ts","./src/app/pages/wallet/tabs/custom-assets/modals/confirm-create-custom-asset/confirm-create-custom-asset.component.html","./src/app/pages/wallet/tabs/custom-assets/modals/emit-custom-asset/emit-custom-asset.component.ts","./src/app/pages/wallet/tabs/custom-assets/modals/emit-custom-asset/emit-custom-asset.component.html","./src/app/pages/wallet/tabs/custom-assets/modals/transaction-details-for-custom-assets/transaction-details-for-custom-assets.component.ts","./src/app/pages/wallet/tabs/custom-assets/modals/transaction-details-for-custom-assets/transaction-details-for-custom-assets.component.html","./src/app/pages/wallet/tabs/custom-assets/modals/update-custom-asset/update-custom-asset.component.ts","./src/app/pages/wallet/tabs/custom-assets/modals/update-custom-asset/update-custom-asset.component.html","./src/app/pages/wallet/tabs/custom-assets/pages/create-new-asset/create-new-asset.component.ts","./src/app/pages/wallet/tabs/custom-assets/pages/create-new-asset/create-new-asset.component.html","./src/app/pages/wallet/tabs/custom-assets/pages/custom-assets/custom-assets.component.ts","./src/app/pages/wallet/tabs/custom-assets/pages/custom-assets/custom-assets.component.html","./src/app/pages/wallet/tabs/history/history.component.ts","./src/app/pages/wallet/tabs/history/history.component.html","./src/app/pages/wallet/tabs/receive/receive.component.ts","./src/app/pages/wallet/tabs/send/components/add-another-destination-button/add-another-destination-button.component.ts","./src/app/pages/wallet/tabs/send/components/add-another-destination-button/add-another-destination-button.component.html","./src/app/pages/wallet/tabs/send/components/address-field/address-field.component.ts","./src/app/pages/wallet/tabs/send/components/address-field/address-field.component.html","./src/app/pages/wallet/tabs/send/components/amount-field/amount-field.component.ts","./src/app/pages/wallet/tabs/send/components/amount-field/amount-field.component.html","./src/app/pages/wallet/tabs/send/components/asset-field/asset-field.component.ts","./src/app/pages/wallet/tabs/send/components/asset-field/asset-field.component.html","./src/app/pages/wallet/tabs/send/components/comment-field/comment-field.component.ts","./src/app/pages/wallet/tabs/send/components/comment-field/comment-field.component.html","./src/app/pages/wallet/tabs/send/components/fee-field/fee-field.component.ts","./src/app/pages/wallet/tabs/send/components/fee-field/fee-field.component.html","./src/app/pages/wallet/tabs/send/components/mixin-field/mixin-field.component.ts","./src/app/pages/wallet/tabs/send/components/mixin-field/mixin-field.component.html","./src/app/pages/wallet/tabs/send/components/wrap-information/wrap-information.component.ts","./src/app/pages/wallet/tabs/send/components/wrap-information/wrap-information.component.html","./src/app/pages/wallet/tabs/send/modals/send-details-modal/send-details-modal.component.ts","./src/app/pages/wallet/tabs/send/modals/send-details-modal/send-details-modal.component.html","./src/app/pages/wallet/tabs/send/modals/send-modal/send-modal.component.ts","./src/app/pages/wallet/tabs/send/modals/send-modal/send-modal.component.html","./src/app/pages/wallet/tabs/send/modals/wallet-modals.module.ts","./src/app/pages/wallet/tabs/send/send.component.ts","./src/app/pages/wallet/tabs/send/send.component.html","./src/app/pages/wallet/tabs/staking/staking.component.ts","./src/app/pages/wallet/tabs/staking/staking.component.html","./src/app/pages/wallet/tabs/swap/modals/swap-confirm-master-password/swap-confirm-master-password.component.ts","./src/app/pages/wallet/tabs/swap/modals/swap-confirm-master-password/swap-confirm-master-password.component.html","./src/app/pages/wallet/tabs/swap/modals/swap-details/swap-details.component.ts","./src/app/pages/wallet/tabs/swap/modals/swap-details/swap-details.component.html","./src/app/pages/wallet/tabs/swap/pages/confirm-swap/confirm-swap.component.ts","./src/app/pages/wallet/tabs/swap/pages/confirm-swap/confirm-swap.component.html","./src/app/pages/wallet/tabs/swap/pages/create-swap/create-swap.component.ts","./src/app/pages/wallet/tabs/swap/pages/create-swap/create-swap.component.html","./src/app/pages/wallet/tabs/swap/pages/swap-proposal-hex/swap-proposal-hex.component.ts","./src/app/pages/wallet/tabs/swap/pages/swap-proposal-hex/swap-proposal-hex.component.html","./src/app/pages/wallet/tabs/swap/pages/swap/swap.component.ts","./src/app/pages/wallet/tabs/swap/pages/swap/swap.component.html","./src/app/pages/wallet/tabs/swap/parts/guards/swap-proposal-hex.guard.ts","./src/app/pages/wallet/wallet-routing.module.ts","./src/app/pages/wallet/wallet.module.ts","./src/app/pages/wallet/wallet/dialogs/add-custom-token/add-custom-token.component.ts","./src/app/pages/wallet/wallet/dialogs/add-custom-token/add-custom-token.component.html","./src/app/pages/wallet/wallet/dialogs/export-history-modal/export-history-modal.component.ts","./src/app/pages/wallet/wallet/dialogs/export-history-modal/export-history-modal.component.html","./src/app/pages/wallet/wallet/dialogs/export-history-modal/export-history-modal.module.ts","./src/app/pages/wallet/wallet/dialogs/migrate-wallet-to-zarcanum/migrate-wallet-to-zarcanum.component.ts","./src/app/pages/wallet/wallet/dialogs/migrate-wallet-to-zarcanum/migrate-wallet-to-zarcanum.component.html","./src/app/pages/wallet/wallet/dialogs/my-aliases-dialog/my-aliases-dialog.component.ts","./src/app/pages/wallet/wallet/dialogs/my-aliases-dialog/my-aliases-dialog.component.html","./src/app/pages/wallet/wallet/dialogs/success-sweep-bare-outs/success-sweep-bare-outs.component.ts","./src/app/pages/wallet/wallet/dialogs/success-sweep-bare-outs/success-sweep-bare-outs.component.html","./src/app/pages/wallet/wallet/wallet.component.ts","./src/app/pages/wallet/wallet/wallet.component.html","./src/app/parts/components/alias-controls/alias-controls.component.ts","./src/app/parts/components/alias-controls/alias-controls.component.html","./src/app/parts/components/back-button/back-button.component.ts","./src/app/parts/components/back-button/back-button.component.html","./src/app/parts/components/breadcrumbs/breadcrumbs.component.ts","./src/app/parts/components/breadcrumbs/breadcrumbs.component.html","./src/app/parts/components/checkbox.component.ts","./src/app/parts/components/copy-button.component.ts","./src/app/parts/components/loader.component.ts","./src/app/parts/components/migrate-alert/migrate-alert.component.ts","./src/app/parts/components/migrate-alert/migrate-alert.component.html","./src/app/parts/components/register-context-templates.component.ts","./src/app/parts/components/shield-testnet/shield-testnet.component.ts","./src/app/parts/components/shield-testnet/shield-testnet.component.html","./src/app/parts/components/staking-switch.component.ts","./src/app/parts/components/switch.component.ts","./src/app/parts/components/synchronization-status.component.ts","./src/app/parts/components/transaction-details.component.ts","./src/app/parts/components/transaction-status/transaction-status.component.ts","./src/app/parts/components/transaction-status/transaction-status.component.html","./src/app/parts/components/visibility-balance-button/visibility-balance-button.component.ts","./src/app/parts/components/visibility-balance-button/visibility-balance-button.component.html","./src/app/parts/components/wallet-card/wallet-card.component.ts","./src/app/parts/components/wallet-card/wallet-card.component.html","./src/app/parts/components/zano-logo/zano-logo.component.ts","./src/app/parts/components/zano-logo/zano-logo.component.html","./src/app/parts/data/assets.ts","./src/app/parts/data/constants.ts","./src/app/parts/data/scale-items.ts","./src/app/parts/directives/autofocus.directive.ts","./src/app/parts/directives/back-button/back-button.directive.ts","./src/app/parts/directives/back-button/back-button.module.ts","./src/app/parts/directives/default-img/default-img.directive.ts","./src/app/parts/directives/default-img/default-img.module.ts","./src/app/parts/directives/default-img/index.ts","./src/app/parts/directives/disable-price-fetch/disable-price-fetch.directive.ts","./src/app/parts/directives/disable-price-fetch/disable-price-fetch.module.ts","./src/app/parts/directives/disable-price-fetch/index.ts","./src/app/parts/directives/index.ts","./src/app/parts/directives/input-disable-selection/index.ts","./src/app/parts/directives/input-disable-selection/input-disable-selection.directive.ts","./src/app/parts/directives/input-disable-selection/input-disable-selection.module.ts","./src/app/parts/directives/input-validate/index.ts","./src/app/parts/directives/input-validate/input-validate.directive.ts","./src/app/parts/directives/input-validate/input-validate.module.ts","./src/app/parts/directives/lower-case.directive.ts","./src/app/parts/directives/tooltip/index.ts","./src/app/parts/directives/tooltip/tooltip.directive.ts","./src/app/parts/directives/tooltip/tooltip.module.ts","./src/app/parts/directives/visibility-balance.directive.ts","./src/app/parts/functions/get-amount-items.ts","./src/app/parts/functions/get-logo-template-by-asset-info.ts","./src/app/parts/functions/has-own-property.ts","./src/app/parts/functions/identify-transaction.ts","./src/app/parts/functions/int-to-money.ts","./src/app/parts/functions/money-to-int.ts","./src/app/parts/modals/asset-details/asset-details.component.ts","./src/app/parts/modals/asset-details/asset-details.component.html","./src/app/parts/modals/confirm-modal/confirm-modal.component.ts","./src/app/parts/modals/confirm-modal/confirm-modal.component.html","./src/app/parts/modals/confirm-modal/confirm-modal.module.ts","./src/app/parts/modals/modal-container/modal-container.component.ts","./src/app/parts/modals/modal-container/modal-container.component.html","./src/app/parts/modals/open-wallet-modal/open-wallet-modal.component.ts","./src/app/parts/modals/open-wallet-modal/open-wallet-modal.component.html","./src/app/parts/pipes/contract-status-messages-pipe/contract-status-messages-pipe.module.ts","./src/app/parts/pipes/contract-status-messages-pipe/contract-status-messages.pipe.ts","./src/app/parts/pipes/contract-status-messages-pipe/index.ts","./src/app/parts/pipes/contract-time-left-pipe/contract-time-left-pipe.module.ts","./src/app/parts/pipes/contract-time-left-pipe/contract-time-left.pipe.ts","./src/app/parts/pipes/contract-time-left-pipe/index.ts","./src/app/parts/pipes/get-amount-items.pipe.ts","./src/app/parts/pipes/get-asset-info.pipe.ts","./src/app/parts/pipes/get-logo-by-asset-info.pipe.ts","./src/app/parts/pipes/history-type-messages-pipe/history-type-messages-pipe.module.ts","./src/app/parts/pipes/history-type-messages-pipe/history-type-messages.pipe.ts","./src/app/parts/pipes/history-type-messages-pipe/index.ts","./src/app/parts/pipes/index.ts","./src/app/parts/pipes/int-to-money-pipe/index.ts","./src/app/parts/pipes/int-to-money-pipe/int-to-money-pipe.module.ts","./src/app/parts/pipes/int-to-money-pipe/int-to-money.pipe.ts","./src/app/parts/pipes/is-available-alias-name-pipe/index.ts","./src/app/parts/pipes/is-available-alias-name-pipe/is-available-alias-name-pipe.module.ts","./src/app/parts/pipes/is-available-alias-name-pipe/is-available-alias-name.pipe.ts","./src/app/parts/pipes/is-visible-control-error.pipe.ts","./src/app/parts/pipes/is-visible-fee.pipe.ts","./src/app/parts/pipes/money-to-int-pipe/index.ts","./src/app/parts/pipes/money-to-int-pipe/money-to-int-pipe.module.ts","./src/app/parts/pipes/money-to-int-pipe/money-to-int.pipe.ts","./src/app/parts/pipes/safe-html-pipe/index.ts","./src/app/parts/pipes/safe-html-pipe/safe-html-pipe.module.ts","./src/app/parts/pipes/safe-html-pipe/safe-html.pipe.ts","./src/app/parts/pipes/short-string.pipe.ts","./src/app/parts/services/back.service.ts","./src/app/parts/services/modal.service.ts","./src/app/parts/services/variables.service.ts","./src/app/parts/services/wallets.service.ts","./src/app/parts/services/zano-loaders.service.ts","./src/app/parts/utils/MIME-types.ts","./src/app/parts/utils/generate-random-string.ts","./src/app/parts/utils/zano-errors.ts","./src/app/parts/utils/zano-validators.ts","./src/app/store/pagination/pagination.service.ts","./src/app/store/pagination/pagination.store.ts","./src/app/store/store.ts","./src/assets/material-zano-icons/index.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Contracts } from './contract.model';\nimport { Transaction, Transactions } from './transaction.model';\nimport { BigNumber } from 'bignumber.js';\nimport {\n    AssetBalance,\n    AssetBalances,\n    AssetInfo,\n    AssetsInfoWhitelist,\n    LocalBlacklistVerifiedAssets,\n    VerifiedAssetInfoWhitelist,\n} from './assets.model';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { AliasInfo, AliasInfoList } from '@api/models/alias.model';\nimport { TransferFormValue } from '@api/models/transfer.model';\nimport { DEFAULT_ASSET_LOGO_SRC, ZANO_ASSET_INFO } from '@parts/data/assets';\nimport { map } from 'rxjs/operators';\n\nexport const defaultAssetsInfoWhitelist = { global_whitelist: [], local_whitelist: [], own_assets: [] };\n\nconst sortBalances = (value: AssetBalances | null | undefined): AssetBalances => {\n    const sortedBalances: AssetBalances = [];\n    if (value) {\n        const assets = [...value];\n        const indexZano = assets.findIndex(({ asset_info: { ticker } }) => ticker === 'ZANO');\n        if (indexZano >= 0) {\n            const assetZano = assets.splice(indexZano, 1)[0];\n            sortedBalances.push(assetZano);\n        }\n        const sortedAssetsByBalance = assets.sort((a, b) => new BigNumber(b.total).minus(new BigNumber(a.total)).toNumber());\n        sortedBalances.push(...sortedAssetsByBalance);\n    }\n    return sortedBalances;\n};\n\nconst prepareBalances = (\n    value: [AssetBalances, AssetsInfoWhitelist, VerifiedAssetInfoWhitelist, LocalBlacklistVerifiedAssets]\n): AssetBalances => {\n    const [assetBalances, assetInfoWhitelist, verifiedAssetInfoWhitelist, localBlacklistVerifiedAssets] = value;\n\n    let items: AssetBalances = [...assetBalances];\n\n    const ensureLogoAndPriceUrl = (asset_info: AssetInfo): AssetInfo => ({\n        ...asset_info,\n        logo: asset_info.logo || (asset_info.asset_id === ZANO_ASSET_INFO.asset_id ? ZANO_ASSET_INFO.logo : DEFAULT_ASSET_LOGO_SRC),\n        price_url: asset_info.price_url || (asset_info.asset_id === ZANO_ASSET_INFO.asset_id ? ZANO_ASSET_INFO.price_url : ''),\n    });\n\n    for (const asset_info of verifiedAssetInfoWhitelist) {\n        const assetBalance = items.find((i) => i.asset_info.asset_id === asset_info.asset_id);\n\n        if (assetBalance) {\n            assetBalance.asset_info = { ...assetBalance.asset_info, ...ensureLogoAndPriceUrl(asset_info) };\n        } else {\n            items.push({\n                asset_info: ensureLogoAndPriceUrl(asset_info),\n                awaiting_in: 0,\n                awaiting_out: 0,\n                total: 0,\n                unlocked: 0,\n            });\n        }\n    }\n\n    const { global_whitelist, local_whitelist, own_assets } = assetInfoWhitelist;\n    const allWhitelistedAssets = [...global_whitelist, ...local_whitelist, ...own_assets];\n\n    for (const asset_info of allWhitelistedAssets) {\n        const assetBalance = items.find((i) => i.asset_info.asset_id === asset_info.asset_id);\n\n        if (assetBalance) {\n            assetBalance.asset_info = { ...ensureLogoAndPriceUrl(asset_info), ...assetBalance.asset_info };\n        }\n    }\n\n    for (const assetBalance of items) {\n        assetBalance.asset_info = ensureLogoAndPriceUrl(assetBalance.asset_info);\n    }\n\n    if (localBlacklistVerifiedAssets.length) {\n        items = items.filter(({ asset_info: { asset_id } }: AssetBalance): boolean => !localBlacklistVerifiedAssets.includes(asset_id));\n    }\n\n    return items;\n};\n\nexport class Wallet {\n    open_from_exist: boolean;\n\n    updated = false;\n\n    wallet_id: number;\n\n    name: string;\n\n    pass: string;\n\n    path: string;\n\n    address: string;\n\n    assetsInfoWhitelist: AssetsInfoWhitelist = defaultAssetsInfoWhitelist;\n\n    get allAssetsInfoWhitelist(): AssetInfo[] {\n        const { global_whitelist = [], local_whitelist = [], own_assets = [] } = this.assetsInfoWhitelist;\n        return [...global_whitelist, ...local_whitelist, ...own_assets];\n    }\n\n    get allAssetsInfo(): AssetInfo[] {\n        return [ZANO_ASSET_INFO, ...this.allAssetsInfoWhitelist];\n    }\n\n    originalBalances$: BehaviorSubject<AssetBalances> = new BehaviorSubject<AssetBalances>([]);\n\n    assetsInfoWhitelist$: BehaviorSubject<AssetsInfoWhitelist> = new BehaviorSubject(defaultAssetsInfoWhitelist);\n\n    verificationAssetsInfoWhitelist$: BehaviorSubject<VerifiedAssetInfoWhitelist> = new BehaviorSubject<VerifiedAssetInfoWhitelist>([]);\n\n    localBlacklistVerifiedAssets$: BehaviorSubject<LocalBlacklistVerifiedAssets> = new BehaviorSubject<LocalBlacklistVerifiedAssets>([]);\n\n    balances$: BehaviorSubject<AssetBalances> = new BehaviorSubject([]);\n\n    get balances(): AssetBalances {\n        return this.balances$.value;\n    }\n\n    set balances(value: AssetBalances | null | undefined) {\n        this.originalBalances$.next(value ?? []);\n    }\n\n    mined_total: number;\n\n    tracking_hey: string;\n\n    is_auditable: boolean;\n\n    is_watch_only: boolean;\n\n    exclude_mining_txs: boolean;\n\n    alias_available: boolean;\n\n    has_bare_unspent_outputs = false;\n\n    get alias_info(): null | AliasInfo {\n        return this.alias_info_list[this.alias_info_list.length - 1] ?? null;\n    }\n\n    alias_info_list: AliasInfoList = [];\n\n    staking?: boolean;\n\n    new_messages?: number;\n\n    new_contracts?: number;\n\n    history: Transactions = [];\n\n    total_history_item?: number;\n\n    pages = [];\n\n    totalPages: number;\n\n    currentPage: number;\n\n    excluded_history: Transactions = [];\n\n    contracts: Contracts = [];\n\n    progress?: number;\n\n    loaded?: boolean;\n\n    restore?: boolean;\n\n    transfer_form_value: TransferFormValue | null = null;\n\n    constructor(id, name, pass, path, address, balances, unlocked_balance, mined = 0, tracking = '') {\n        this.wallet_id = id;\n        this.name = name;\n        this.pass = pass;\n        this.path = path;\n        this.address = address;\n        this.balances = balances;\n        this.mined_total = mined;\n        this.tracking_hey = tracking;\n        this.staking = false;\n        this.new_messages = 0;\n        this.new_contracts = 0;\n\n        this.history = [];\n        this.excluded_history = [];\n\n        this.progress = 0;\n        this.loaded = false;\n\n        combineLatest([\n            this.originalBalances$.pipe(map(sortBalances)),\n            this.assetsInfoWhitelist$,\n            this.verificationAssetsInfoWhitelist$,\n            this.localBlacklistVerifiedAssets$,\n        ])\n            .pipe(map(prepareBalances))\n            .subscribe({\n                next: (value) => {\n                    this.balances$.next(value);\n                },\n            });\n    }\n\n    getBalanceByAssetId(value: string): AssetBalance | undefined {\n        return this.balances.find(({ asset_info: { asset_id } }) => asset_id === value);\n    }\n\n    getAssetInfoByAssetId(value: string): AssetInfo | undefined {\n        return this.allAssetsInfo.find(({ asset_id }) => asset_id === value);\n    }\n\n    getBalanceByTicker(searchTicker: string): AssetBalance | undefined {\n        return this.balances.find(({ asset_info: { ticker } }) => ticker === searchTicker);\n    }\n\n    getMoneyEquivalentForZano(equivalent): string {\n        const balanceZano = this.getBalanceByTicker('ZANO')?.total || 0;\n        return new BigNumber(balanceZano).multipliedBy(equivalent).toFixed(0);\n    }\n\n    prepareHistory(items: Transaction[]): void {\n        for (let i = 0; i < items.length; i++) {\n            if (\n                (items[i].tx_type === 7 && items[i].subtransfers?.find(({ is_income }) => is_income)) ||\n                (items[i].tx_type === 11 && items[i].subtransfers?.find(({ is_income }) => is_income))\n            ) {\n                let exists = false;\n                for (let j = 0; j < this.excluded_history.length; j++) {\n                    if (this.excluded_history[j].tx_hash === items[i].tx_hash) {\n                        exists = true;\n                        if (this.excluded_history[j].height !== items[i].height) {\n                            this.excluded_history[j] = items[i];\n                        }\n                        break;\n                    }\n                }\n                if (!exists) {\n                    this.excluded_history.push(items[i]);\n                }\n            } else {\n                let exists = false;\n                for (let j = 0; j < this.history.length; j++) {\n                    if (this.history[j].tx_hash === items[i].tx_hash) {\n                        exists = true;\n                        if (this.history[j].height !== items[i].height) {\n                            this.history[j] = items[i];\n                        }\n                        break;\n                    }\n                }\n                if (!exists) {\n                    if (this.history.length > 0 && items[i].timestamp >= this.history[0].timestamp) {\n                        this.history.unshift(items[i]);\n                    } else {\n                        this.history.push(items[i]);\n                    }\n                }\n            }\n        }\n    }\n\n    removeFromHistory(hash: string): void {\n        for (let i = 0; i < this.history.length; i++) {\n            if (this.history[i].tx_hash === hash) {\n                this.history.splice(i, 1);\n                break;\n            }\n        }\n    }\n\n    addAssetToLocalBlacklistVerifiedAssets(asset_id: string): void {\n        const blackList: LocalBlacklistVerifiedAssets = [...this.localBlacklistVerifiedAssets$.value, asset_id];\n        this.localBlacklistVerifiedAssets$.next(blackList);\n    }\n\n    removeAssetFromLocalBlacklistVerifiedAssets(asset_id: string): void {\n        const blackList: LocalBlacklistVerifiedAssets = this.localBlacklistVerifiedAssets$.value.filter((v) => v !== asset_id);\n        this.localBlacklistVerifiedAssets$.next(blackList);\n    }\n}\n\nexport interface DeeplinkParams {\n    action?: 'send' | string;\n    address?: string;\n    amount?: string;\n    my_deposit?: string;\n    seller_deposit?: string;\n    seller_address?: string;\n    hide_sender?: string;\n    hide_receiver?: string;\n    title?: string;\n    description?: string;\n    category?: string;\n    price?: string;\n    img_url?: string;\n    url?: string;\n    contact?: string;\n    comment?: string;\n    comments?: string;\n    mixins?: string;\n    fee?: string;\n}\n\nexport interface PushOffer {\n    wallet_id: number;\n    od: {\n        ap: string;\n        at: string;\n        cat: string;\n        cnt: string;\n        com: string;\n        do: string;\n        et: number;\n        fee: BigNumber;\n        lci: string;\n        lco: string;\n        ot: number;\n        pt: string;\n        t: string;\n        url: string;\n    };\n}\n\nexport interface ResponseGetWalletInfo {\n    address: string;\n    balances: AssetBalances;\n    is_auditable: boolean;\n    is_watch_only: boolean;\n    mined_total: number;\n    path: string;\n    view_sec_key: string;\n}\n","import { inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { WrapInfo } from '@api/models/wrap-info';\nimport { VerifiedAssetInfoWhitelist } from '@api/models/assets.model';\nimport { CurrentPriceForAsset } from '@api/models/api-zano.models';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ApiService {\n    private _httpClient = inject(HttpClient);\n\n    getWrapInfo(): Observable<WrapInfo> {\n        return this._httpClient.get<WrapInfo>('https://wrapped.zano.org/api2/get_wrap_info');\n    }\n\n    getVerifiedAssetInfoWhitelist(type: 'mainnet' | 'testnet'): Observable<{\n        assets: VerifiedAssetInfoWhitelist;\n        signature: string;\n    }> {\n        let url: string;\n        if (type === 'mainnet') {\n            url = 'https://api.zano.org/assets_whitelist.json';\n        } else {\n            url = 'https://api.zano.org/assets_whitelist_testnet.json';\n        }\n\n        return this._httpClient.get<{ assets: VerifiedAssetInfoWhitelist; signature: string }>(url, {\n            headers: { 'Cache-Control': 'no-cache' },\n        });\n    }\n\n    getCurrentPriceForAsset(asset_id: string): Observable<CurrentPriceForAsset & { asset_id: string }> {\n        return this._httpClient\n            .get<\n                CurrentPriceForAsset & {\n                    asset_id: string;\n                }\n            >(`https://explorer.zano.org/api/price?asset_id=${asset_id}`)\n            .pipe(\n                map((response) => ({ ...response, asset_id })),\n                catchError(() =>\n                    of({\n                        success: false,\n                        data: 'Asset not found',\n                        asset_id,\n                    })\n                )\n            );\n    }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { ModalService } from '@parts/services/modal.service';\nimport { MoneyToIntPipe } from '@parts/pipes/money-to-int-pipe/money-to-int.pipe';\nimport JSONBigNumber from 'json-bignumber';\nimport { BigNumber } from 'bignumber.js';\nimport { ResponseGetWalletInfo } from '../models/wallet.model';\nimport {\n    AssetInfo,\n    ParamsAddCustomAssetId,\n    ParamsRemoveCustomAssetId,\n    ResponseAddCustomAssetId,\n    ResponseRemoveCustomAssetId,\n} from '@api/models/assets.model';\nimport { AliasInfo } from '@api/models/alias.model';\nimport { TransferParams } from '@api/models/transfer.model';\nimport { ParamsCallRpc } from '@api/models/call_rpc.model';\n\nexport interface PramsObj {\n    [key: string]: any;\n}\n\nexport type PramsArray = (string | PramsObj)[];\n\nexport type Params = string | PramsObj | PramsArray;\n\nexport enum ParamsType {\n    array = 'array',\n    object = 'object',\n    string = 'string',\n}\n\nexport const getParamsType = (value: Params): ParamsType | null => {\n    if (!value) {\n        return null;\n    }\n    const array: false | ParamsType.array = Array.isArray(value) && ParamsType.array;\n    const object: false | ParamsType = Object.keys(ParamsType).includes(typeof value) && ParamsType[typeof value];\n    return array || object || null;\n};\n\nexport type ConvertersObjectForTypes = {\n    [key in ParamsType]: (value: Params) => string | string[];\n};\n\nexport const convertersObjectForTypes: ConvertersObjectForTypes = {\n    [ParamsType.string]: (value: string): string => value,\n    [ParamsType.object]: (value: PramsObj): string => JSONBigNumber.stringify(value),\n    [ParamsType.array]: (value: PramsArray): string[] =>\n        value.map((v) => {\n            return typeof v === ParamsType.string ? (v as string) : JSONBigNumber.stringify(v);\n        }),\n};\n\nexport const convertorParams = (value: Params): string | string[] => {\n    const type: ParamsType = getParamsType(value);\n    return convertersObjectForTypes[type](value);\n};\n\nexport interface ResponseAsyncTransfer {\n    error_code: string | 'NOT_ENOUGH_MONEY' | 'OK';\n    response_data: {\n        success: boolean;\n        tx_blob_size: number;\n        tx_hash: string;\n    };\n}\n\nexport interface AsyncCommandResults<T = any> {\n    job_id: number;\n    response: T;\n}\n\nexport enum StatusCurrentActionState {\n    STATE_SENDING = 'STATE_SENDING',\n    STATE_SENT_SUCCESS = 'STATE_SENT_SUCCESS',\n    STATE_SEND_FAILED = 'STATE_SEND_FAILED',\n    STATE_INITIALIZING = 'STATE_INITIALIZING',\n    STATE_DOWNLOADING_CONSENSUS = 'STATE_DOWNLOADING_CONSENSUS',\n    STATE_MAKING_TUNNEL_A = 'STATE_MAKING_TUNNEL_A',\n    STATE_MAKING_TUNNEL_B = 'STATE_MAKING_TUNNEL_B',\n    STATE_CREATING_STREAM = 'STATE_CREATING_STREAM',\n    STATE_FAILED = 'STATE_FAILED',\n    STATE_SUCCESS = 'STATE_SUCCESS',\n}\n\nexport interface CurrentActionState {\n    status: StatusCurrentActionState;\n    wallet_id: number;\n}\n\nexport enum Commands {\n    print_log = 'print_log',\n    money_transfer_cancel = 'money_transfer_cancel',\n    handle_deeplink_click = 'handle_deeplink_click',\n    money_transfer = 'money_transfer',\n    update_daemon_state = 'update_daemon_state',\n    wallet_sync_progress = 'wallet_sync_progress',\n    update_wallet_status = 'update_wallet_status',\n    quit_requested = 'quit_requested',\n    on_core_event = 'on_core_event',\n    get_wallet_info = 'get_wallet_info',\n    remove_custom_asset_id = 'remove_custom_asset_id',\n    add_custom_asset_id = 'add_custom_asset_id',\n    get_options = 'get_options',\n    handle_current_action_state = 'handle_current_action_state',\n    set_enable_tor = 'set_enable_tor',\n    dispatch_async_call_result = 'dispatch_async_call_result',\n    async_call = 'async_call',\n    async_call_2a = 'async_call_2a',\n    set_log_level = 'set_log_level',\n    get_network_type = 'get_network_type',\n    get_version = 'get_version',\n    get_tx_pool_info = 'get_tx_pool_info',\n    get_recent_transfers = 'get_recent_transfers',\n    resync_wallet = 'resync_wallet',\n    get_alias_coast = 'get_alias_coast',\n    get_alias_info_by_address = 'get_alias_info_by_address',\n    get_alias_info_by_name = 'get_alias_info_by_name',\n    get_all_aliases = 'get_all_aliases',\n    request_alias_update = 'request_alias_update',\n    webkit_launched_script = 'webkit_launched_script',\n    on_request_quit = 'on_request_quit',\n    get_app_data = 'get_app_data',\n    store_app_data = 'store_app_data',\n    get_secure_app_data = 'get_secure_app_data',\n    set_master_password = 'set_master_password',\n    check_master_password = 'check_master_password',\n    get_is_disabled_notifications = 'get_is_disabled_notifications',\n    set_is_disabled_notifications = 'set_is_disabled_notifications',\n    store_secure_app_data = 'store_secure_app_data',\n    drop_secure_app_data = 'drop_secure_app_data',\n    have_secure_app_data = 'have_secure_app_data',\n    show_savefile_dialog = 'show_savefile_dialog',\n    show_openfile_dialog = 'show_openfile_dialog',\n    store_to_file = 'store_to_file',\n    load_from_file = 'load_from_file',\n    push_offer = 'push_offer',\n    generate_wallet = 'generate_wallet',\n    export_wallet_history = 'export_wallet_history',\n    open_wallet = 'open_wallet',\n    close_wallet = 'close_wallet',\n    get_smart_wallet_info = 'get_smart_wallet_info',\n    get_seed_phrase_info = 'get_seed_phrase_info',\n    run_wallet = 'run_wallet',\n    is_valid_restore_wallet_text = 'is_valid_restore_wallet_text',\n    restore_wallet = 'restore_wallet',\n    transfer = 'transfer',\n    validate_address = 'validate_address',\n    set_clipboard = 'set_clipboard',\n    get_clipboard = 'get_clipboard',\n    create_proposal = 'create_proposal',\n    get_contracts = 'get_contracts',\n    accept_proposal = 'accept_proposal',\n    release_contract = 'release_contract',\n    request_cancel_contract = 'request_cancel_contract',\n    accept_cancel_contract = 'accept_cancel_contract',\n    get_mining_history = 'get_mining_history',\n    start_pos_mining = 'start_pos_mining',\n    stop_pos_mining = 'stop_pos_mining',\n    open_url_in_browser = 'open_url_in_browser',\n    start_backend = 'start_backend',\n    get_default_fee = 'get_default_fee',\n    set_localization_strings = 'set_localization_strings',\n    request_alias_registration = 'request_alias_registration',\n    call_rpc = 'call_rpc',\n    call_wallet_rpc = 'call_wallet_rpc',\n    setup_jwt_wallet_rpc = 'setup_jwt_wallet_rpc',\n    show_notification = 'show_notification',\n    is_remnotenode_mode_preconfigured = 'is_remnotenode_mode_preconfigured',\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BackendService {\n    dispatchAsyncCallResult$ = new Subject<AsyncCommandResults>();\n\n    handleCurrentActionState$ = new Subject<CurrentActionState>();\n\n    backendObject: any;\n\n    backendLoaded = false;\n\n    constructor(\n        private translate: TranslateService,\n        private variablesService: VariablesService,\n        private modalService: ModalService,\n        private moneyToIntPipe: MoneyToIntPipe,\n        private ngZone: NgZone\n    ) {}\n\n    static bigNumberParser(key, val): any {\n        if (\n            val?.constructor?.name === 'BigNumber' &&\n            [\n                'balance',\n                'unlocked_balance',\n                'amount',\n                'fee',\n                'b_fee',\n                'to_pay',\n                'a_pledge',\n                'b_pledge',\n                'coast',\n                'a',\n                'total',\n                'unlocked',\n                'current_supply',\n                'total_max_supply',\n            ].indexOf(key) === -1\n        ) {\n            return val.toNumber();\n        }\n        if (key === 'rcv' || key === 'spn') {\n            for (let i = 0; i < val.length; i++) {\n                val[i] = new BigNumber(val[i]);\n            }\n        }\n        return val;\n    }\n\n    static Debug(type, message): void {\n        switch (type) {\n            case 0:\n                console.error(message);\n                break;\n            case 1:\n                console.warn(message);\n                break;\n            case 2:\n                console.log(message);\n                break;\n            default:\n                console.log(message);\n                break;\n        }\n    }\n\n    eventSubscribe(command: Commands, callback): void {\n        if (command === Commands.on_core_event) {\n            this.backendObject[command].connect(callback);\n        } else {\n            this.backendObject[command].connect((str) => {\n                callback(JSONBigNumber.parse(str, BackendService.bigNumberParser));\n            });\n        }\n    }\n\n    initService(): Observable<string> {\n        return new Observable((observer) => {\n            if (!this.backendLoaded) {\n                this.backendLoaded = true;\n                (<any>window).QWebChannel((<any>window).qt.webChannelTransport, (channel) => {\n                    this.backendObject = channel.objects.mediator_object;\n                    observer.next('backendObject loaded');\n                });\n            } else {\n                observer.error('backend not loaded');\n                if (!this.backendObject) {\n                    observer.error('backendObject not loaded');\n                }\n            }\n        });\n    }\n\n    webkitLaunchedScript(): void {\n        this.runCommand(Commands.webkit_launched_script);\n    }\n\n    quitRequest(): void {\n        this.runCommand(Commands.on_request_quit);\n    }\n\n    getAppData(callback?: any): void {\n        this.runCommand(Commands.get_app_data, {}, callback);\n    }\n\n    storeAppData(callback?: any): void {\n        const { wallets } = this.variablesService;\n        if (wallets.length > 0) {\n            this.variablesService.settings.wallets = [];\n            wallets.forEach((wallet) => {\n                this.variablesService.settings.wallets.push({\n                    name: wallet.name,\n                    path: wallet.path,\n                });\n            });\n\n            this.variablesService.settings.localBlacklistsOfVerifiedAssetsByWallets = wallets.reduce(\n                (acc, { address, localBlacklistVerifiedAssets$: { value: localBlacklistVerifiedAssets } }) => {\n                    return { ...acc, [address]: localBlacklistVerifiedAssets };\n                },\n                {}\n            );\n        }\n        this.runCommand(Commands.store_app_data, this.variablesService.settings, callback);\n    }\n\n    getSecureAppData(pass, callback): void {\n        this.runCommand(Commands.get_secure_app_data, pass, callback);\n    }\n\n    setMasterPassword(pass, callback): void {\n        this.runCommand(Commands.set_master_password, pass, callback);\n    }\n\n    checkMasterPassword(pass, callback): void {\n        this.runCommand(Commands.check_master_password, pass, callback);\n    }\n\n    getIsDisabledNotifications(callback): void {\n        const params = {};\n        this.runCommand(Commands.get_is_disabled_notifications, params, callback);\n    }\n\n    setIsDisabledNotifications(state): void {\n        this.runCommand(Commands.set_is_disabled_notifications, state);\n    }\n\n    storeSecureAppData(callback?): void {\n        const wallets = [];\n        const contacts = [];\n        this.variablesService.wallets.forEach((wallet) => {\n            wallets.push({\n                name: wallet.name,\n                pass: wallet.pass,\n                path: wallet.path,\n                staking: wallet.staking,\n            });\n        });\n        this.variablesService.contacts.forEach((contact) => {\n            contacts.push({\n                name: contact.name,\n                address: contact.address,\n                notes: contact.notes,\n            });\n        });\n        const data = { wallets: wallets, contacts: contacts };\n        this.backendObject[Commands.store_secure_app_data](JSON.stringify(data), this.variablesService.appPass, (dataStore) => {\n            this.backendCallback(dataStore, {}, callback, Commands.store_secure_app_data);\n        });\n    }\n\n    printLog(msgOrObj: string | object): void {\n        let msg: string;\n\n        if (typeof msgOrObj === 'string') {\n            msg = msgOrObj;\n        } else {\n            try {\n                msg = JSON.stringify(msgOrObj);\n            } catch (e) {\n                msg = 'Error stringifying log object';\n                console.error(e);\n            }\n        }\n\n        this.runCommand(Commands.print_log, { msg, log_level: this.variablesService.settings.appLog ?? 0 });\n    }\n\n    dropSecureAppData(callback?): void {\n        this.backendObject[Commands.drop_secure_app_data]('', (dataStore) => {\n            this.backendCallback(dataStore, {}, callback, Commands.drop_secure_app_data);\n        });\n    }\n\n    haveSecureAppData(callback): void {\n        this.runCommand(Commands.have_secure_app_data, {}, callback);\n    }\n\n    saveFileDialog(caption, fileMask, default_path, callback): void {\n        const dir = default_path ? default_path : '/';\n        const params = {\n            caption: caption,\n            filemask: fileMask,\n            default_dir: dir,\n        };\n        this.runCommand(Commands.show_savefile_dialog, params, callback);\n    }\n\n    openFileDialog(caption, filemask, default_path, callback): void {\n        const default_dir = default_path ? default_path : '/';\n        const params = {\n            caption,\n            filemask,\n            default_dir,\n        };\n        this.runCommand(Commands.show_openfile_dialog, params, callback);\n    }\n\n    storeFile(path, buff): void {\n        this.backendObject[Commands.store_to_file](path, buff);\n    }\n\n    loadFile(path, callback): void {\n        this.runCommand(Commands.load_from_file, path, callback);\n    }\n\n    push_offer(params, callback): void {\n        this.runCommand(Commands.push_offer, params, callback);\n    }\n\n    generateWallet(path, pass, callback): void {\n        const params = {\n            path: path,\n            pass: pass,\n        };\n        this.runCommand(Commands.generate_wallet, params, callback);\n    }\n\n    exportWalletHistory(json_string): void {\n        this.runCommand(Commands.export_wallet_history, json_string);\n    }\n\n    openWallet(path, pass, txs_to_return, testEmpty, callback): void {\n        const params = {\n            path: path,\n            pass: pass,\n            txs_to_return: txs_to_return,\n        };\n        params['testEmpty'] = !!testEmpty;\n        this.runCommand(Commands.open_wallet, params, callback);\n    }\n\n    closeWallet(wallet_id, callback?): void {\n        this.runCommand(Commands.close_wallet, { wallet_id: +wallet_id }, callback);\n    }\n\n    getSmartWalletInfo({ wallet_id, seed_password }, callback): void {\n        this.runCommand(Commands.get_smart_wallet_info, { wallet_id: +wallet_id, seed_password }, callback);\n    }\n\n    getSeedPhraseInfo(param, callback): void {\n        this.runCommand(Commands.get_seed_phrase_info, param, callback);\n    }\n\n    runWallet(wallet_id, callback?): void {\n        this.runCommand(Commands.run_wallet, { wallet_id: +wallet_id }, callback);\n    }\n\n    isValidRestoreWalletText(param, callback): void {\n        this.runCommand(Commands.is_valid_restore_wallet_text, param, callback);\n    }\n\n    restoreWallet(path, pass, seed_phrase, seed_pass, callback): void {\n        const params = {\n            seed_phrase: seed_phrase,\n            path: path,\n            pass: pass,\n            seed_pass,\n        };\n        this.runCommand(Commands.restore_wallet, params, callback);\n    }\n\n    sendMoney(params: TransferParams, callback: (job_id: number) => void): void {\n        this.asyncCall(Commands.transfer, params, callback);\n    }\n\n    setupJwtWalletRpc(value: { zanoCompation: boolean; secret: string }, callback?: () => void): void {\n        const { secret } = value;\n\n        this.runCommand(Commands.setup_jwt_wallet_rpc, secret, () => {\n            this.variablesService.settings.zanoCompanionForm = value;\n            this.storeAppData();\n            if (callback) {\n                callback();\n            }\n        });\n    }\n\n    validateAddress(address, callback): void {\n        this.runCommand(Commands.validate_address, address, callback);\n    }\n\n    setClipboard(str, callback?): void {\n        this.runCommand(Commands.set_clipboard, str, callback);\n    }\n\n    getClipboard(callback): void {\n        this.runCommand(Commands.get_clipboard, {}, callback);\n    }\n\n    createProposal(wallet_id, title, comment, a_addr, b_addr, to_pay, a_pledge, b_pledge, time, payment_id, callback): void {\n        const params = {\n            wallet_id: parseInt(wallet_id, 10),\n            details: {\n                t: title,\n                c: comment,\n                a_addr: a_addr,\n                b_addr: b_addr,\n                to_pay: this.moneyToIntPipe.transform(to_pay),\n                a_pledge: this.moneyToIntPipe.transform(a_pledge),\n                b_pledge: this.moneyToIntPipe.transform(b_pledge),\n            },\n            payment_id: payment_id,\n            expiration_period: parseInt(time, 10) * 60 * 60,\n            fee: this.variablesService.default_fee_big,\n            b_fee: this.variablesService.default_fee_big,\n        };\n        BackendService.Debug(1, params);\n        this.runCommand(Commands.create_proposal, params, callback);\n    }\n\n    getContracts(wallet_id, callback): void {\n        const params = {\n            wallet_id: parseInt(wallet_id, 10),\n        };\n        BackendService.Debug(1, params);\n        this.runCommand(Commands.get_contracts, params, callback);\n    }\n\n    acceptProposal(wallet_id, contract_id, callback): void {\n        const params = {\n            wallet_id: parseInt(wallet_id, 10),\n            contract_id: contract_id,\n        };\n        BackendService.Debug(1, params);\n        this.runCommand(Commands.accept_proposal, params, callback);\n    }\n\n    releaseProposal(wallet_id, contract_id, release_type, callback): void {\n        const params = {\n            wallet_id: parseInt(wallet_id, 10),\n            contract_id: contract_id,\n            release_type: release_type, // \"normal\" or \"burn\"\n        };\n        BackendService.Debug(1, params);\n        this.runCommand(Commands.release_contract, params, callback);\n    }\n\n    requestCancelContract(wallet_id, contract_id, time, callback): void {\n        const params = {\n            wallet_id: parseInt(wallet_id, 10),\n            contract_id: contract_id,\n            fee: this.variablesService.default_fee_big,\n            expiration_period: parseInt(time, 10) * 60 * 60,\n        };\n        BackendService.Debug(1, params);\n        this.runCommand(Commands.request_cancel_contract, params, callback);\n    }\n\n    acceptCancelContract(wallet_id, contract_id, callback): void {\n        const params = {\n            wallet_id: parseInt(wallet_id, 10),\n            contract_id: contract_id,\n        };\n        BackendService.Debug(1, params);\n        this.runCommand(Commands.accept_cancel_contract, params, callback);\n    }\n\n    getMiningHistory(wallet_id, callback): void {\n        this.runCommand(Commands.get_mining_history, { wallet_id: parseInt(wallet_id, 10) }, callback);\n    }\n\n    startPosMining(wallet_id, callback?): void {\n        this.runCommand(Commands.start_pos_mining, { wallet_id: parseInt(wallet_id, 10) }, callback);\n    }\n\n    stopPosMining(wallet_id, callback?): void {\n        this.runCommand(Commands.stop_pos_mining, { wallet_id: parseInt(wallet_id, 10) }, callback);\n    }\n\n    openUrlInBrowser(url, callback?): void {\n        this.runCommand(Commands.open_url_in_browser, url, callback);\n    }\n\n    start_backend(node, host, port, callback): void {\n        const params = {\n            configure_for_remote_node: node,\n            remote_node_host: host,\n            remote_node_port: parseInt(port, 10),\n        };\n        this.runCommand(Commands.start_backend, params, callback);\n    }\n\n    getDefaultFee(callback): void {\n        this.runCommand(Commands.get_default_fee, {}, callback);\n    }\n\n    setBackendLocalization(stringsArray, title, callback?): void {\n        const params = {\n            strings: stringsArray,\n            language_title: title,\n        };\n        this.runCommand(Commands.set_localization_strings, params, callback);\n    }\n\n    registerAlias(wallet_id, alias, address, fee, comment, reward, callback): void {\n        const params = {\n            wallet_id: wallet_id,\n            alias: {\n                alias: alias,\n                address: address,\n                tracking_key: '',\n                comment: comment,\n            },\n            fee: this.moneyToIntPipe.transform(fee),\n            reward: this.moneyToIntPipe.transform(reward),\n        };\n        this.runCommand(Commands.request_alias_registration, params, callback);\n    }\n\n    updateAlias(wallet_id, alias: AliasInfo, fee, callback): void {\n        const params = {\n            wallet_id: wallet_id,\n            alias: {\n                alias: alias.alias.replace('@', ''),\n                address: alias.address,\n                tracking_key: '',\n                comment: alias.comment,\n            },\n            fee: this.moneyToIntPipe.transform(fee),\n        };\n        this.runCommand(Commands.request_alias_update, params, callback);\n    }\n\n    getAllAliases(callback): void {\n        this.runCommand(Commands.get_all_aliases, {}, callback);\n    }\n\n    getAliasInfoByName(value, callback): void {\n        this.runCommand(Commands.get_alias_info_by_name, value, callback);\n    }\n\n    getAliasInfoByAddress(value, callback): void {\n        this.runCommand(Commands.get_alias_info_by_address, value, callback);\n    }\n\n    getAliasCoast(alias, callback): void {\n        this.runCommand(Commands.get_alias_coast, { v: alias }, callback);\n    }\n\n    resyncWallet(id): void {\n        this.runCommand(Commands.resync_wallet, { wallet_id: id });\n    }\n\n    getRecentTransfers(id, offset, count, exclude_mining_txs, callback): void {\n        const params = {\n            wallet_id: id,\n            offset: offset,\n            count: count,\n            exclude_mining_txs: exclude_mining_txs,\n        };\n        this.runCommand(Commands.get_recent_transfers, params, callback);\n    }\n\n    getPoolInfo(callback): void {\n        this.runCommand(Commands.get_tx_pool_info, {}, callback);\n    }\n\n    getVersion(callback): void {\n        this.runCommand(Commands.get_version, {}, (status, version, errorVersion) => {\n            this.runCommand(Commands.get_network_type, {}, (status_network, type, errorType) => {\n                callback(version, type, errorVersion ?? errorType);\n            });\n        });\n    }\n\n    isRemnoteNodeModePreconfigured(callback): void {\n        this.runCommand(Commands.is_remnotenode_mode_preconfigured, {}, callback);\n    }\n\n    setLogLevel(level): void {\n        this.runCommand(Commands.set_log_level, { v: level });\n    }\n\n    asyncCall(command: string, params: PramsObj, callback?: (job_id?: number) => void | any): void {\n        this.runCommand(Commands.async_call, [command, params], (status, { job_id }: { job_id: number }) => {\n            callback(job_id);\n        });\n    }\n\n    asyncCall2a(command: string, wallet_id: number, params: PramsObj, callback?: (job_id?: number) => void | any): void {\n        this.runCommand(\n            Commands.async_call_2a,\n            [command, wallet_id, params],\n            (\n                status,\n                {\n                    job_id,\n                }: {\n                    job_id: number;\n                }\n            ) => {\n                callback(job_id);\n            }\n        );\n    }\n\n    dispatchAsyncCallResult(): void {\n        this.backendObject[Commands.dispatch_async_call_result].connect((job_id: string, json_resp: string) => {\n            const asyncCommandResults: AsyncCommandResults = {\n                job_id: +job_id,\n                response: JSON.parse(json_resp),\n            };\n            console.group(`----------- ${Commands.dispatch_async_call_result} -----------`);\n            console.log(asyncCommandResults);\n            console.groupEnd();\n            this.ngZone.run(() => setTimeout(() => this.dispatchAsyncCallResult$.next(asyncCommandResults), 250));\n        });\n    }\n\n    handleCurrentActionState(): void {\n        this.backendObject[Commands.handle_current_action_state].connect((response: string) => {\n            const currentActionState: CurrentActionState = JSON.parse(response);\n            this.ngZone.run(() => this.handleCurrentActionState$.next(currentActionState));\n        });\n    }\n\n    setEnableTor(value: boolean): void {\n        this.runCommand(Commands.set_enable_tor, <{ v: boolean }>{\n            v: value,\n        });\n    }\n\n    show_notification(title: string, message: string, callback?: () => void): void {\n        this.runCommand(Commands.show_notification, [title, message], callback);\n    }\n\n    getOptions(): any {\n        this.runCommand(\n            Commands.get_options,\n            {},\n            (\n                status,\n                {\n                    disable_price_fetch,\n                    use_debug_mode,\n                    rpc_port,\n                }: {\n                    disable_price_fetch: boolean;\n                    use_debug_mode: boolean;\n                    rpc_port: number;\n                }\n            ) => {\n                this.variablesService.disable_price_fetch$.next(disable_price_fetch);\n                this.variablesService.use_debug_mode$.next(use_debug_mode);\n                this.variablesService.rpc_port = rpc_port;\n            }\n        );\n    }\n\n    addCustomAssetId(\n        params: ParamsAddCustomAssetId,\n        callback: (\n            status: boolean,\n            response_data: ResponseAddCustomAssetId,\n            res_error_code?: {\n                error_code: 'FAILED' | string;\n                response_data: {\n                    asset_descriptor: Partial<AssetInfo>;\n                    status: 'FAILED' | string;\n                };\n            }\n        ) => void\n    ): void {\n        this.runCommand(Commands.add_custom_asset_id, params, callback);\n    }\n\n    removeCustomAssetId(\n        params: ParamsRemoveCustomAssetId,\n        callback?: (status: boolean, response_data: ResponseRemoveCustomAssetId) => void\n    ): void {\n        this.runCommand(Commands.remove_custom_asset_id, params, callback);\n    }\n\n    getWalletInfo(wallet_id, callback?: (status: boolean, response_data: ResponseGetWalletInfo) => void): void {\n        this.runCommand(Commands.get_wallet_info, { wallet_id }, callback);\n    }\n\n    // Use for call rpc-api https://docs.zano.org/docs/build/rpc-api\n    call_rpc(params: Partial<ParamsCallRpc>, callback?: (status: boolean, response_data: any) => void): void {\n        this.runCommand(Commands.call_rpc, params, callback);\n    }\n\n    call_wallet_rpc(\n        params: [wallet_id: number, params: Partial<ParamsCallRpc>],\n        callback?: (status: boolean, response_data: any) => void\n    ): void {\n        this.runCommand(Commands.call_wallet_rpc, params, callback);\n    }\n\n    private informerRun(error: string, params, command: string): void {\n        let error_translate = '';\n        switch (error) {\n            case 'NOT_ENOUGH_MONEY':\n                error_translate = 'ERRORS.NOT_ENOUGH_MONEY';\n                // error_translate = 'ERRORS.NO_MONEY'; maybe that one?\n                if (command === 'cancel_offer') {\n                    error_translate = this.translate.instant('ERRORS.NO_MONEY_REMOVE_OFFER', {\n                        fee: this.variablesService.default_fee,\n                        currency: this.variablesService.defaultTicker,\n                    });\n                }\n                break;\n            case 'CORE_BUSY':\n                error_translate = 'ERRORS.CORE_BUSY';\n                break;\n            case 'BUSY':\n                error_translate = 'ERRORS.DAEMON_BUSY';\n                break;\n            case 'OVERFLOW':\n                if (command !== 'get_all_aliases') {\n                    error_translate = '';\n                }\n                break;\n            case 'NOT_ENOUGH_OUTPUTS_FOR_MIXING':\n                error_translate = 'ERRORS.NOT_ENOUGH_OUTPUTS_TO_MIX';\n                break;\n            case 'TX_IS_TOO_BIG':\n                error_translate = 'ERRORS.TRANSACTION_IS_TO_BIG';\n                break;\n            case 'DISCONNECTED':\n                error_translate = 'ERRORS.TRANSFER_ATTEMPT';\n                break;\n            case 'ACCESS_DENIED':\n                error_translate = 'ERRORS.ACCESS_DENIED';\n                break;\n            case 'TX_REJECTED':\n                // if (command === 'request_alias_registration') {\n                // error_translate = 'INFORMER.ALIAS_IN_REGISTER';\n                // } else {\n                error_translate = 'ERRORS.TRANSACTION_ERROR';\n                // }\n                break;\n            case 'INTERNAL_ERROR':\n                error_translate = 'ERRORS.TRANSACTION_ERROR';\n                break;\n            case 'BAD_ARG':\n                error_translate = 'ERRORS.BAD_ARG';\n                break;\n            case 'WALLET_WRONG_ID':\n                error_translate = 'ERRORS.WALLET_WRONG_ID';\n                break;\n            case 'WALLET_WATCH_ONLY_NOT_SUPPORTED':\n                error_translate = 'ERRORS.WALLET_WATCH_ONLY_NOT_SUPPORTED';\n                break;\n            // case 'WRONG_PASSWORD':\n            // params = JSON.parse(params);\n            // if (!params.testEmpty) {\n            //   error_translate = 'ERRORS.WRONG_PASSWORD';\n            // }\n            // break;\n            case 'FILE_RESTORED':\n                if (command === 'open_wallet') {\n                    error_translate = 'ERRORS.FILE_RESTORED';\n                }\n                break;\n            case 'FILE_NOT_FOUND':\n                if (command !== 'open_wallet' && command !== 'get_alias_info_by_name' && command !== 'get_alias_info_by_address') {\n                    error_translate = this.translate.instant('ERRORS.FILE_NOT_FOUND');\n                    params = JSON.parse(params);\n                    if (params.path) {\n                        error_translate += ': ' + params.path;\n                    }\n                }\n                break;\n            case 'NOT_FOUND':\n                if (command !== 'open_wallet' && command !== 'get_alias_info_by_name' && command !== 'get_alias_info_by_address') {\n                    error_translate = this.translate.instant('ERRORS.FILE_NOT_FOUND');\n                    params = JSON.parse(params);\n                    if (params.path) {\n                        error_translate += ': ' + params.path;\n                    }\n                }\n                break;\n            case 'CANCELED':\n            case '':\n                break;\n            case 'FAIL':\n                if (\n                    command === 'create_proposal' ||\n                    command === 'accept_proposal' ||\n                    command === 'release_contract' ||\n                    command === 'request_cancel_contract' ||\n                    command === 'accept_cancel_contract'\n                ) {\n                    error_translate = ' ';\n                }\n                break;\n            case 'ALREADY_EXISTS':\n                error_translate = 'ERRORS.FILE_EXIST';\n                break;\n            case 'FAILED':\n                BackendService.Debug(0, `Error: (${error}) was triggered by command: ${command}`);\n                break;\n            default:\n                error_translate = '';\n        }\n        if (error.indexOf('FAIL:failed to save file') > -1) {\n            error_translate = 'ERRORS.FILE_NOT_SAVED';\n        }\n        if (error.indexOf('FAILED:failed to open binary wallet file for saving') > -1 && command === 'generate_wallet') {\n            error_translate = '';\n        }\n\n        if (error_translate !== '') {\n            this.modalService.prepareModal('error', error_translate);\n        }\n    }\n\n    private commandDebug(command: Commands, params: Params, result: any): void {\n        BackendService.Debug(2, '----------------- ' + command + ' -----------------');\n        const debug = {\n            _send_params: params,\n            _result: result,\n        };\n        BackendService.Debug(2, debug);\n        try {\n            BackendService.Debug(2, JSONBigNumber.parse(result, BackendService.bigNumberParser));\n        } catch (e) {\n            BackendService.Debug(2, { response_data: result, error_code: 'OK' });\n        }\n    }\n\n    private backendCallback(resultStr, params, callback, command: Commands): any {\n        let Result = resultStr;\n        if (command !== Commands.get_clipboard) {\n            if (!resultStr || resultStr === '') {\n                Result = {};\n            } else {\n                try {\n                    Result = JSONBigNumber.parse(resultStr, BackendService.bigNumberParser);\n                } catch (e) {\n                    Result = { response_data: resultStr, error_code: 'OK' };\n                }\n            }\n        } else {\n            Result = {\n                error_code: 'OK',\n                response_data: Result,\n            };\n        }\n\n        const core_busy = Result.error_code === 'CORE_BUSY';\n        const Status = Result.error_code === 'OK' || Result.error_code === 'TRUE';\n\n        if (!Status && Status !== undefined && Result.error_code !== undefined) {\n            BackendService.Debug(1, 'API error for command: \"' + command + '\". Error code: ' + Result.error_code);\n        }\n        const data = typeof Result === 'object' && 'response_data' in Result ? Result.response_data : Result;\n\n        let res_error_code = false;\n        if (\n            typeof Result === 'object' &&\n            'error_code' in Result &&\n            Result.error_code !== 'OK' &&\n            Result.error_code !== 'TRUE' &&\n            Result.error_code !== 'FALSE' &&\n            Result.error_code !== 'WRAP'\n        ) {\n            if (core_busy) {\n                setTimeout(() => {\n                    // this is will avoid update data when user\n                    // on other wallet after CORE_BUSY (blink of data)\n                    if (command !== Commands.get_recent_transfers) {\n                        this.runCommand(command, params, callback);\n                    } else {\n                        const current_wallet_id = this.variablesService.current_wallet.wallet_id;\n                        if (current_wallet_id === params.wallet_id) {\n                            this.runCommand(command, params, callback);\n                        }\n                    }\n                }, 50);\n            } else {\n                this.informerRun(Result.error_code, params, command);\n                res_error_code = Result.error_code;\n            }\n        }\n\n        if (!core_busy) {\n            if (typeof callback === 'function') {\n                callback(Status, data, res_error_code);\n            } else {\n                return data;\n            }\n        }\n    }\n\n    private runCommand(command: Commands, params?: Params, callback?): any {\n        if (!this.backendObject) {\n            return;\n        }\n\n        if (command === Commands.get_recent_transfers) {\n            this.variablesService.get_recent_transfers = true;\n        }\n\n        const Action = this.backendObject[command];\n\n        if (!Action) {\n            BackendService.Debug(0, 'Run Command Error! Command \"' + command + '\" don\\'t found in backendObject');\n            return;\n        }\n\n        const type: ParamsType = getParamsType(params);\n        params = params && convertorParams(params);\n\n        if (type === ParamsType.array) {\n            Action(...(params as string[]), (resultStr) => {\n                this.commandDebug(command, params, resultStr);\n                return this.backendCallback(resultStr, params, callback, command);\n            });\n            return;\n        }\n\n        if (command === Commands.get_recent_transfers) {\n            this.variablesService.get_recent_transfers = false;\n        }\n        Action(params, (resultStr) => {\n            this.commandDebug(command, params, resultStr);\n            return this.backendCallback(resultStr, params, callback, command);\n        });\n    }\n}\n","import { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n    imports: [RouterModule.forRoot([])],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, NgZone, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BackendService, Commands } from '@api/services/backend.service';\nimport { Router } from '@angular/router';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { IntToMoneyPipe } from '@parts/pipes';\nimport { BigNumber } from 'bignumber.js';\nimport { ModalService } from '@parts/services/modal.service';\nimport { StateKeys, Store } from '@store/store';\nimport { interval, of, Subject } from 'rxjs';\nimport { catchError, retry, startWith, switchMap, takeUntil } from 'rxjs/operators';\nimport { paths, pathsChildrenAuth } from './pages/paths';\nimport { hasOwnProperty } from '@parts/functions/has-own-property';\nimport { Dialog } from '@angular/cdk/dialog';\nimport { ZanoLoadersService } from '@parts/services/zano-loaders.service';\nimport { ParamsCallRpc } from '@api/models/call_rpc.model';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ApiService } from '@api/services/api.service';\nimport { WalletsService } from '@parts/services/wallets.service';\nimport { WrapInfo } from '@api/models/wrap-info';\nimport { AliasInfo } from '@api/models/alias.model';\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <router-outlet\n            *ngIf=\"[0, 1, 2, 6].indexOf(variablesService.daemon_state) !== -1 && !(zanoLoadersService.getState('fullScreen') | async)\"\n        ></router-outlet>\n\n        <div *ngIf=\"[3, 4, 5].indexOf(variablesService.daemon_state) !== -1\" class=\"preloader\">\n            <p *ngIf=\"variablesService.daemon_state === 3\" class=\"mb-2\">\n                {{ 'SIDEBAR.SYNCHRONIZATION.LOADING' | translate }}\n            </p>\n            <p *ngIf=\"variablesService.daemon_state === 4\" class=\"mb-2\">\n                {{ 'SIDEBAR.SYNCHRONIZATION.ERROR' | translate }}\n            </p>\n            <p *ngIf=\"variablesService.daemon_state === 5\" class=\"mb-2\">\n                {{ 'SIDEBAR.SYNCHRONIZATION.COMPLETE' | translate }}\n            </p>\n            <div class=\"loading-bar\"></div>\n        </div>\n\n        <div class=\"preloader\" *ngIf=\"zanoLoadersService.getState('fullScreen') | async\">\n            <p class=\"mb-2\">\n                {{ zanoLoadersService.getMessage('fullScreen') | async | translate }}\n            </p>\n            <div class=\"loading-bar\"></div>\n        </div>\n\n        <app-register-context-templates></app-register-context-templates>\n\n        <app-open-wallet-modal *ngIf=\"needOpenWallets.length\" [wallets]=\"needOpenWallets\"></app-open-wallet-modal>\n    `,\n})\nexport class AppComponent implements OnInit, OnDestroy {\n    intervalUpdateContractsState;\n\n    expMedTsEvent;\n\n    onQuitRequest = false;\n\n    firstOnlineState = false;\n\n    translateUsed = false;\n\n    needOpenWallets = [];\n\n    currentScreenSize: string;\n\n    displayNameMap = new Map([\n        [Breakpoints.XSmall, 'XSmall'],\n        [Breakpoints.Small, 'Small'],\n        [Breakpoints.Medium, 'Medium'],\n        [Breakpoints.Large, 'Large'],\n        [Breakpoints.XLarge, 'XLarge'],\n    ]);\n\n    private _destroy$: Subject<void> = new Subject<void>();\n\n    constructor(\n        public variablesService: VariablesService,\n        public translate: TranslateService,\n        private http: HttpClient,\n        private renderer: Renderer2,\n        private backendService: BackendService,\n        private router: Router,\n        private ngZone: NgZone,\n        private intToMoneyPipe: IntToMoneyPipe,\n        private modalService: ModalService,\n        private store: Store,\n        private dialog: Dialog,\n        private matDialog: MatDialog,\n        public zanoLoadersService: ZanoLoadersService,\n        private _apiService: ApiService,\n        private _walletsService: WalletsService,\n        private _breakpointObserver: BreakpointObserver\n    ) {\n        this._setTranslate();\n        this._setResponseClasses();\n    }\n\n    setBackendLocalization(): void {\n        if (this.translateUsed) {\n            const stringsArray = [\n                this.translate.instant('BACKEND_LOCALIZATION.QUIT'),\n                this.translate.instant('BACKEND_LOCALIZATION.IS_RECEIVED'),\n                this.translate.instant('BACKEND_LOCALIZATION.IS_CONFIRMED'),\n                this.translate.instant('BACKEND_LOCALIZATION.INCOME_TRANSFER_UNCONFIRMED'),\n                this.translate.instant('BACKEND_LOCALIZATION.INCOME_TRANSFER_CONFIRMED'),\n                this.translate.instant('BACKEND_LOCALIZATION.MINED'),\n                this.translate.instant('BACKEND_LOCALIZATION.LOCKED'),\n                this.translate.instant('BACKEND_LOCALIZATION.IS_MINIMIZE'),\n                this.translate.instant('BACKEND_LOCALIZATION.RESTORE'),\n                this.translate.instant('BACKEND_LOCALIZATION.TRAY_MENU_SHOW'),\n                this.translate.instant('BACKEND_LOCALIZATION.TRAY_MENU_MINIMIZE'),\n            ];\n            this.backendService.setBackendLocalization(stringsArray, this.variablesService.settings.language);\n        } else {\n            console.warn('wait translate use');\n            setTimeout(() => {\n                this.setBackendLocalization();\n            }, 10000);\n        }\n    }\n\n    ngOnInit(): void {\n        this.backendService.initService().subscribe({\n            next: (initMessage) => {\n                console.log('Init message: ', initMessage);\n                this.backendService.webkitLaunchedScript();\n\n                this.backendService.start_backend(false, '127.0.0.1', 11512, (st2, dd2) => {\n                    console.log(st2, dd2);\n                });\n\n                this.backendService.eventSubscribe(Commands.quit_requested, () => {\n                    if (this.onQuitRequest) {\n                        return;\n                    }\n\n                    // this.ngZone.run(async () => {\n                    //     this.router.navigate(['/']);\n                    // });\n\n                    this.dialog.closeAll();\n                    this.matDialog.closeAll();\n\n                    this.needOpenWallets = [];\n                    this.variablesService.daemon_state = 5;\n\n                    const saveFunction = (): void => {\n                        this.backendService.storeAppData((): void => {\n                            const recursionCloseWallets = (): void => {\n                                if (this.variablesService.wallets.length > 0) {\n                                    const lastIndex = this.variablesService.wallets.length - 1;\n                                    this.backendService.closeWallet(this.variablesService.wallets[lastIndex].wallet_id, () => {\n                                        this.variablesService.wallets.splice(lastIndex, 1);\n                                        recursionCloseWallets();\n                                    });\n                                } else {\n                                    this.ngZone.run(() => {\n                                        this.backendService.quitRequest();\n                                    });\n                                }\n                            };\n                            recursionCloseWallets();\n                        });\n                    };\n                    if (this.variablesService.appPass) {\n                        this.backendService.storeSecureAppData(saveFunction);\n                    } else {\n                        saveFunction();\n                    }\n\n                    this.onQuitRequest = true;\n                });\n\n                this.backendService.eventSubscribe(Commands.update_wallet_status, (data) => {\n                    console.log('----------------- update_wallet_status -----------------');\n                    console.log(data);\n\n                    const wallet_state = data.wallet_state;\n                    const is_mining = data.is_mining;\n                    const wallet = this.variablesService.getWallet(data.wallet_id);\n                    // 1-synch, 2-ready, 3 - error\n                    if (wallet) {\n                        this.ngZone.run(() => {\n                            wallet.loaded = false;\n                            wallet.staking = is_mining;\n                            if (wallet_state === 2) {\n                                // ready\n                                wallet.loaded = true;\n                            }\n                            if (wallet_state === 3) {\n                                // error\n                                // wallet.error = true;\n                            }\n                            wallet.balances = data.balances;\n                            wallet.mined_total = data.minied_total;\n                            wallet.alias_available = data.is_alias_operations_available;\n                            wallet.has_bare_unspent_outputs = data.has_bare_unspent_outputs;\n                        });\n                    }\n                });\n\n                this.backendService.eventSubscribe(Commands.wallet_sync_progress, (data) => {\n                    console.log('----------------- wallet_sync_progress -----------------');\n                    console.log(data);\n                    const wallet = this.variablesService.getWallet(data.wallet_id);\n                    if (wallet) {\n                        this.ngZone.run(() => {\n                            wallet.progress = data.progress < 0 ? 0 : data.progress > 100 ? 100 : data.progress;\n                            if (!this.variablesService.sync_started) {\n                                this.variablesService.sync_started = true;\n                                this.variablesService.sync_wallets[wallet.wallet_id] = true;\n                            }\n                            this.addToStore(wallet, true); // subscribe on data\n                            if (wallet.progress === 0) {\n                                wallet.loaded = false;\n                            } else if (wallet.progress === 100) {\n                                wallet.loaded = true;\n                                this.addToStore(wallet, false);\n                                this.variablesService.sync_started = false;\n                                this.variablesService.sync_wallets[wallet.wallet_id] = false;\n                            }\n                        });\n                    }\n                });\n\n                this.backendService.eventSubscribe(Commands.update_daemon_state, (data) => {\n                    console.log('----------------- update_daemon_state -----------------');\n                    console.log('DAEMON:' + data.daemon_network_state);\n                    console.log(data);\n                    // this.variablesService.exp_med_ts = data['expiration_median_timestamp'] + 600 + 1;\n                    this.variablesService.setExpMedTs(data['expiration_median_timestamp'] + 600 + 1);\n                    this.variablesService.net_time_delta_median = data.net_time_delta_median;\n                    this.variablesService.last_build_available = data.last_build_available;\n                    this.variablesService.last_build_displaymode = data.last_build_displaymode;\n                    this.variablesService.setHeightApp(data.height);\n                    this.variablesService.setHeightMax(data.max_net_seen_height);\n\n                    this.variablesService.setDownloadedBytes(data.downloaded_bytes);\n                    this.variablesService.setTotalBytes(data.download_total_data_size);\n\n                    this.ngZone.run(() => {\n                        const daemon_state: number = data['daemon_network_state'];\n                        this.variablesService.daemon_state = daemon_state;\n                        this.variablesService.daemon_state$.next(daemon_state);\n\n                        if (data['daemon_network_state'] === 1) {\n                            const max = data['max_net_seen_height'] - data['synchronization_start_height'];\n                            const current = data.height - data['synchronization_start_height'];\n                            const return_val = Math.floor(((current * 100) / max) * 100) / 100;\n                            if (max === 0 || return_val < 0) {\n                                this.variablesService.sync.progress_value = 0;\n                                this.variablesService.sync.progress_value_text = '0.00';\n                                this.variablesService.sync.blocks.current = 0;\n                                this.variablesService.sync.blocks.max = 0;\n                            } else if (return_val >= 100) {\n                                this.variablesService.sync.progress_value = 100;\n                                this.variablesService.sync.progress_value_text = '99.99';\n                                this.variablesService.sync.blocks.current = current;\n                                this.variablesService.sync.blocks.max = max;\n                            } else {\n                                this.variablesService.sync.progress_value = return_val;\n                                this.variablesService.sync.progress_value_text = return_val.toFixed(2);\n                                this.variablesService.sync.blocks.current = current;\n                                this.variablesService.sync.blocks.max = max;\n                            }\n                        }\n\n                        if (data['daemon_network_state'] === 6) {\n                            const max = data['download_total_data_size'];\n                            const current = data['downloaded_bytes'];\n                            const return_val = Math.floor((current / max) * 100);\n                            if (max === 0 || return_val < 0) {\n                                this.variablesService.download.progress_value = 0;\n                                this.variablesService.download.progress_value_text = '0.00';\n                            } else if (return_val >= 100) {\n                                this.variablesService.download.progress_value = 100;\n                                this.variablesService.download.progress_value_text = '99.99';\n                            } else {\n                                this.variablesService.download.progress_value = return_val;\n                                this.variablesService.download.progress_value_text = return_val.toFixed(2);\n                            }\n                        }\n                    });\n\n                    if (!this.firstOnlineState && data['daemon_network_state'] === 2) {\n                        this.getAllAliases();\n                        this._walletsService.loadAliasInfoListForWallets();\n                        this.backendService.getDefaultFee((status_fee, data_fee) => {\n                            this.variablesService.default_fee_big = new BigNumber(data_fee);\n                            this.variablesService.default_fee = this.intToMoneyPipe.transform(data_fee);\n                        });\n                        this.firstOnlineState = true;\n                    }\n                });\n\n                this.backendService.eventSubscribe(Commands.money_transfer, (data) => {\n                    console.log('----------------- money_transfer -----------------');\n                    console.log(data);\n\n                    if (!data.ti) {\n                        return;\n                    }\n\n                    const wallet_id = data.wallet_id;\n                    const tr_info = data.ti;\n\n                    const wallet = this.variablesService.getWallet(wallet_id);\n                    if (wallet) {\n                        if (wallet.history.length > 40) {\n                            wallet.history.splice(40, 1);\n                        }\n                        this.ngZone.run(() => {\n                            wallet.balances = data.balances;\n\n                            if (tr_info.tx_type === 6) {\n                                this.variablesService.refreshStakingEvent$.next();\n                            }\n\n                            let tr_exists = wallet.excluded_history.some((elem) => elem.tx_hash === tr_info.tx_hash);\n                            tr_exists = !tr_exists ? wallet.history.some((elem) => elem.tx_hash === tr_info.tx_hash) : tr_exists;\n\n                            if (wallet.currentPage === 1) {\n                                wallet.prepareHistory([tr_info]);\n                                if (wallet.restore) {\n                                    wallet.total_history_item = wallet.history.length;\n                                    wallet.totalPages = Math.ceil(wallet.total_history_item / this.variablesService.count);\n                                    wallet.totalPages > this.variablesService.maxPages\n                                        ? (wallet.pages = new Array(5).fill(1).map((value, index) => value + index))\n                                        : (wallet.pages = new Array(wallet.totalPages).fill(1).map((value, index) => value + index));\n                                }\n                            }\n\n                            if (hasOwnProperty(tr_info, 'contract')) {\n                                const exp_med_ts = this.variablesService.exp_med_ts;\n                                const height_app = this.variablesService.height_app;\n                                const contract = tr_info.contract[0];\n                                if (tr_exists) {\n                                    for (let i = 0; i < wallet.contracts.length; i++) {\n                                        if (\n                                            wallet.contracts[i].contract_id === contract.contract_id &&\n                                            wallet.contracts[i].is_a === contract.is_a\n                                        ) {\n                                            wallet.contracts[i].cancel_expiration_time = contract.cancel_expiration_time;\n                                            wallet.contracts[i].expiration_time = contract.expiration_time;\n                                            wallet.contracts[i].height = contract.height;\n                                            wallet.contracts[i].timestamp = contract.timestamp;\n                                            break;\n                                        }\n                                    }\n                                    // $rootScope.getContractsRecount();\n                                    return;\n                                }\n\n                                if (contract.state === 1 && contract.expiration_time < exp_med_ts) {\n                                    contract.state = 110;\n                                } else if (contract.state === 5 && contract.cancel_expiration_time < exp_med_ts) {\n                                    contract.state = 130;\n                                } else if (contract.state === 1) {\n                                    const searchResult2 = this.variablesService.settings.notViewedContracts.find(\n                                        (elem) =>\n                                            elem.state === 110 && elem.is_a === contract.is_a && elem.contract_id === contract.contract_id\n                                    );\n                                    if (searchResult2) {\n                                        if (searchResult2.time === contract.expiration_time) {\n                                            contract.state = 110;\n                                        } else {\n                                            for (let j = 0; j < this.variablesService.settings.notViewedContracts.length; j++) {\n                                                if (\n                                                    this.variablesService.settings.notViewedContracts[j].contract_id ===\n                                                        contract.contract_id &&\n                                                    this.variablesService.settings.notViewedContracts[j].is_a === contract.is_a\n                                                ) {\n                                                    this.variablesService.settings.notViewedContracts.splice(j, 1);\n                                                    break;\n                                                }\n                                            }\n                                            for (let j = 0; j < this.variablesService.settings.viewedContracts.length; j++) {\n                                                if (\n                                                    this.variablesService.settings.viewedContracts[j].contract_id ===\n                                                        contract.contract_id &&\n                                                    this.variablesService.settings.viewedContracts[j].is_a === contract.is_a\n                                                ) {\n                                                    this.variablesService.settings.viewedContracts.splice(j, 1);\n                                                    break;\n                                                }\n                                            }\n                                        }\n                                    }\n                                } else if (contract.state === 2 && (contract.height === 0 || height_app - contract.height < 10)) {\n                                    contract.state = 201;\n                                } else if (contract.state === 2) {\n                                    const searchResult3 = this.variablesService.settings.viewedContracts.some(\n                                        (elem) =>\n                                            elem.state === 120 && elem.is_a === contract.is_a && elem.contract_id === contract.contract_id\n                                    );\n                                    if (searchResult3) {\n                                        contract.state = 120;\n                                    }\n                                } else if (contract.state === 5) {\n                                    const searchResult4 = this.variablesService.settings.notViewedContracts.find(\n                                        (elem) =>\n                                            elem.state === 130 && elem.is_a === contract.is_a && elem.contract_id === contract.contract_id\n                                    );\n                                    if (searchResult4) {\n                                        if (searchResult4.time === contract.cancel_expiration_time) {\n                                            contract.state = 130;\n                                        } else {\n                                            for (let j = 0; j < this.variablesService.settings.notViewedContracts.length; j++) {\n                                                if (\n                                                    this.variablesService.settings.notViewedContracts[j].contract_id ===\n                                                        contract.contract_id &&\n                                                    this.variablesService.settings.notViewedContracts[j].is_a === contract.is_a\n                                                ) {\n                                                    this.variablesService.settings.notViewedContracts.splice(j, 1);\n                                                    break;\n                                                }\n                                            }\n                                            for (let j = 0; j < this.variablesService.settings.viewedContracts.length; j++) {\n                                                if (\n                                                    this.variablesService.settings.viewedContracts[j].contract_id ===\n                                                        contract.contract_id &&\n                                                    this.variablesService.settings.viewedContracts[j].is_a === contract.is_a\n                                                ) {\n                                                    this.variablesService.settings.viewedContracts.splice(j, 1);\n                                                    break;\n                                                }\n                                            }\n                                        }\n                                    }\n                                } else if (contract.state === 6 && (contract.height === 0 || height_app - contract.height < 10)) {\n                                    contract.state = 601;\n                                }\n\n                                const searchResult = this.variablesService.settings.viewedContracts.some(\n                                    (elem) =>\n                                        elem.state === contract.state &&\n                                        elem.is_a === contract.is_a &&\n                                        elem.contract_id === contract.contract_id\n                                );\n                                contract.is_new = !searchResult;\n\n                                let findContract = false;\n                                for (let i = 0; i < wallet.contracts.length; i++) {\n                                    if (\n                                        wallet.contracts[i].contract_id === contract.contract_id &&\n                                        wallet.contracts[i].is_a === contract.is_a\n                                    ) {\n                                        for (const prop in contract) {\n                                            if (hasOwnProperty(contract, prop)) {\n                                                wallet.contracts[i][prop] = contract[prop];\n                                            }\n                                        }\n                                        findContract = true;\n                                        break;\n                                    }\n                                }\n                                if (findContract === false) {\n                                    wallet.contracts.push(contract);\n                                }\n                                // wallet.recountNewContracts();\n                            }\n                        });\n                    }\n                });\n\n                this.backendService.backendObject[Commands.handle_deeplink_click].connect((data) => {\n                    console.log('----------------- handle_deeplink_click -----------------');\n                    console.log(data);\n                    this.ngZone.run(() => {\n                        if (data) {\n                            this.variablesService.deeplink$.next(data);\n                        }\n                    });\n                });\n\n                this.backendService.eventSubscribe(Commands.money_transfer_cancel, (data) => {\n                    console.log('----------------- money_transfer_cancel -----------------');\n                    console.log(data);\n\n                    if (!data.ti) {\n                        return;\n                    }\n\n                    const wallet_id = data.wallet_id;\n                    const tr_info = data.ti;\n                    const wallet = this.variablesService.getWallet(wallet_id);\n\n                    if (wallet) {\n                        if (hasOwnProperty(tr_info, 'contract')) {\n                            for (let i = 0; i < wallet.contracts.length; i++) {\n                                if (\n                                    wallet.contracts[i].contract_id === tr_info.contract[0].contract_id &&\n                                    wallet.contracts[i].is_a === tr_info.contract[0].is_a\n                                ) {\n                                    if (wallet.contracts[i].state === 1 || wallet.contracts[i].state === 110) {\n                                        wallet.contracts[i].is_new = true;\n                                        wallet.contracts[i].state = 140;\n                                        // wallet.recountNewContracts();\n                                    }\n                                    break;\n                                }\n                            }\n                        }\n\n                        wallet.removeFromHistory(tr_info.tx_hash);\n\n                        let error_tr = '';\n                        switch (tr_info.tx_type) {\n                            case 0:\n                                error_tr =\n                                    this.translate.instant('ERRORS.TX_TYPE_NORMAL') +\n                                    '<br>' +\n                                    tr_info.tx_hash +\n                                    '<br>' +\n                                    wallet.name +\n                                    '<br>' +\n                                    wallet.address +\n                                    '<br>' +\n                                    this.translate.instant('ERRORS.TX_TYPE_NORMAL_TO') +\n                                    ' ' +\n                                    this.intToMoneyPipe.transform(tr_info.amount) +\n                                    ' ' +\n                                    this.translate.instant('ERRORS.TX_TYPE_NORMAL_END');\n                                break;\n                            case 1:\n                                // this.translate.instant('ERRORS.TX_TYPE_PUSH_OFFER');\n                                break;\n                            case 2:\n                                // this.translate.instant('ERRORS.TX_TYPE_UPDATE_OFFER');\n                                break;\n                            case 3:\n                                // this.translate.instant('ERRORS.TX_TYPE_CANCEL_OFFER');\n                                break;\n                            case 4:\n                                error_tr =\n                                    this.translate.instant('ERRORS.TX_TYPE_NEW_ALIAS') +\n                                    '<br>' +\n                                    tr_info.tx_hash +\n                                    '<br>' +\n                                    wallet.name +\n                                    '<br>' +\n                                    wallet.address +\n                                    '<br>' +\n                                    this.translate.instant('ERRORS.TX_TYPE_NEW_ALIAS_END');\n                                break;\n                            case 5:\n                                error_tr =\n                                    this.translate.instant('ERRORS.TX_TYPE_UPDATE_ALIAS') +\n                                    '<br>' +\n                                    tr_info.tx_hash +\n                                    '<br>' +\n                                    wallet.name +\n                                    '<br>' +\n                                    wallet.address +\n                                    '<br>' +\n                                    this.translate.instant('ERRORS.TX_TYPE_NEW_ALIAS_END');\n                                break;\n                            case 6:\n                                error_tr = this.translate.instant('ERRORS.TX_TYPE_COIN_BASE');\n                                break;\n                        }\n                        if (error_tr) {\n                            this.modalService.prepareModal('error', error_tr);\n                        }\n                    }\n                });\n\n                this.backendService.eventSubscribe(Commands.on_core_event, (data) => {\n                    console.log('----------------- on_core_event -----------------');\n                    console.log(data);\n\n                    data = JSON.parse(data);\n\n                    if (data.events != null) {\n                        for (let i = 0, length = data.events.length; i < length; i++) {\n                            switch (data.events[i].method) {\n                                case 'CORE_EVENT_BLOCK_ADDED':\n                                    break;\n                                case 'CORE_EVENT_ADD_ALIAS':\n                                    if (this.variablesService.all_aliases_loaded) {\n                                        const newAlias: AliasInfo = data.events[i].detail;\n                                        this.variablesService.all_aliases.push(newAlias);\n                                    }\n                                    const wallet1 = this._walletsService.getWalletByAddress(data.events[i].details.address);\n                                    if (wallet1) {\n                                        this._walletsService.loadAliasInfoList(wallet1);\n                                    }\n                                    break;\n                                case 'CORE_EVENT_UPDATE_ALIAS':\n                                    if (this.variablesService.all_aliases_loaded) {\n                                        const findAlias = this.variablesService.all_aliases.find(\n                                            ({ address, alias }) =>\n                                                address === data.events[i].details.details.address && alias === data.events[i].details.alias\n                                        );\n                                        if (findAlias) {\n                                            findAlias.address = data.events[i].details.details.address;\n                                            findAlias.comment = data.events[i].details.details.comment;\n                                        }\n                                    }\n                                    const wallet2 = this._walletsService.getWalletByAddress(data.events[i].details.details.address);\n                                    if (wallet2) {\n                                        this._walletsService.loadAliasInfoList(wallet2);\n                                    }\n\n                                    if (data.events[i].details.old_address !== data.events[i].details.details.address) {\n                                        const wallet3 = this._walletsService.getWalletByAddress(data.events[i].details.old_address);\n                                        if (wallet3) {\n                                            this._walletsService.loadAliasInfoList(wallet3);\n                                        }\n                                    }\n                                    break;\n                                default:\n                                    break;\n                            }\n                        }\n                    }\n                });\n\n                this.intervalUpdateContractsState = setInterval(() => {\n                    this.variablesService.wallets.forEach((wallet) => {\n                        wallet.contracts.forEach((contract) => {\n                            if (\n                                contract.state === 201 &&\n                                contract.height !== 0 &&\n                                this.variablesService.height_app - contract.height >= 10\n                            ) {\n                                contract.state = 2;\n                                contract.is_new = true;\n                                console.warn('need check state in contracts');\n                            } else if (\n                                contract.state === 601 &&\n                                contract.height !== 0 &&\n                                this.variablesService.height_app - contract.height >= 10\n                            ) {\n                                contract.state = 6;\n                                contract.is_new = true;\n                            }\n                        });\n                    });\n                }, 30000);\n\n                this.expMedTsEvent = this.variablesService.getExpMedTsEvent.subscribe({\n                    next: (newTimestamp: number) => {\n                        this.variablesService.wallets.forEach((wallet) => {\n                            wallet.contracts.forEach((contract) => {\n                                if (contract.state === 1 && contract.expiration_time <= newTimestamp) {\n                                    contract.state = 110;\n                                    contract.is_new = true;\n                                } else if (contract.state === 5 && contract.cancel_expiration_time <= newTimestamp) {\n                                    contract.state = 130;\n                                    contract.is_new = true;\n                                }\n                            });\n                        });\n                    },\n                });\n\n                this.backendService.getAppData((status, data) => {\n                    if (data && Object.keys(data).length > 0) {\n                        for (const key in data) {\n                            if (hasOwnProperty(data, key) && hasOwnProperty(this.variablesService.settings, key)) {\n                                this.variablesService.settings[key] = data[key];\n                            }\n                        }\n\n                        const { isDarkTheme$, visibilityBalance$, settings } = this.variablesService;\n\n                        isDarkTheme$.next(settings.isDarkTheme);\n                        visibilityBalance$.next(settings.visibilityBalance);\n                        settings.appUseTor = false; // TODO: Delete this line after return appUseTor\n                        if (hasOwnProperty(settings, 'scale') && ['8px', '10px', '12px', '14px'].indexOf(settings.scale) !== -1) {\n                            this.renderer.setStyle(document.documentElement, 'font-size', settings.scale);\n                        } else {\n                            settings.scale = '10px';\n                            this.renderer.setStyle(document.documentElement, 'font-size', settings.scale);\n                        }\n\n                        this.renderer.setAttribute(document.documentElement, 'class', settings.isDarkTheme ? 'dark' : 'light');\n                    }\n                    this.translate.use(this.variablesService.settings.language);\n                    this.setBackendLocalization();\n\n                    this.backendService.setLogLevel(this.variablesService.settings.appLog);\n                    this.backendService.setEnableTor(this.variablesService.settings.appUseTor);\n\n                    if (!this.variablesService.settings.wallets || this.variablesService.settings.wallets.length === 0) {\n                        this.ngZone.run(() => {\n                            this.router.navigate([`${paths.auth}/${pathsChildrenAuth.noWallet}`]).then();\n                        });\n                        return;\n                    }\n\n                    if (this.router.url !== '/login') {\n                        this.backendService.haveSecureAppData((statusPass) => {\n                            console.log('--------- haveSecureAppData ----------', statusPass);\n                            if (statusPass) {\n                                this.ngZone.run(() => {\n                                    this.router.navigate(['/login'], {\n                                        queryParams: { type: 'auth' },\n                                    });\n                                });\n                            } else {\n                                if (Object.keys(data).length !== 0) {\n                                    this.needOpenWallets = JSON.parse(JSON.stringify(this.variablesService.settings.wallets));\n                                    this.ngZone.run(() => {\n                                        this.variablesService.appLogin = true;\n                                        this.router.navigate(['/']);\n                                    });\n                                } else {\n                                    this.ngZone.run(() => {\n                                        this.router.navigate(['/login'], {\n                                            queryParams: { type: 'reg' },\n                                        });\n                                    });\n                                }\n                            }\n                        });\n                    }\n                });\n\n                this.backendService.dispatchAsyncCallResult();\n\n                this.backendService.handleCurrentActionState();\n\n                this.getVersion();\n\n                this.getInfo();\n\n                this._startWrapInfoPolling();\n\n                this.backendService.isRemnoteNodeModePreconfigured((is_remote_node: boolean) => {\n                    this.variablesService.is_remote_node = is_remote_node;\n                });\n\n                setTimeout(() => {\n                    this.backendService.getOptions();\n                    this._getZanoCurrentSupply();\n                }, 10 * 1000);\n            },\n            error: (error) => {\n                console.log(error);\n            },\n        });\n\n        const updateTime = 10 * 60 * 1000; // 10 minutes\n        interval(updateTime)\n            .pipe(takeUntil(this._destroy$))\n            .subscribe({\n                next: () => {\n                    this.variablesService.loadCurrentPriceForAllAssets();\n                },\n            });\n\n        this.variablesService.isDarkTheme$.pipe(takeUntil(this._destroy$)).subscribe({\n            next: (isDarkTheme) => {\n                this.renderer.setAttribute(document.documentElement, 'class', isDarkTheme ? 'dark' : 'light');\n            },\n        });\n    }\n\n    ngOnDestroy(): void {\n        this._destroy$.next();\n        this._destroy$.complete();\n\n        if (this.intervalUpdateContractsState) {\n            clearInterval(this.intervalUpdateContractsState);\n        }\n\n        this.expMedTsEvent.unsubscribe();\n    }\n\n    getAllAliases(): void {\n        this.backendService.getAllAliases((status, data, error) => {\n            console.warn(error);\n\n            if (error === 'CORE_BUSY') {\n                window.setTimeout(() => {\n                    this.getAllAliases();\n                }, 10000);\n            } else if (error === 'OVERFLOW') {\n                this.variablesService.all_aliases = [];\n                this.variablesService.all_aliases_loaded = false;\n            } else {\n                this.variablesService.all_aliases_loaded = true;\n                if (data.aliases && data.aliases.length) {\n                    this.variablesService.all_aliases = [];\n                    this.variablesService.all_aliases = data.aliases.filter(Boolean).sort((a: AliasInfo, b: AliasInfo) => {\n                        if (a.alias.length > b.alias.length) {\n                            return 1;\n                        }\n                        if (a.alias.length < b.alias.length) {\n                            return -1;\n                        }\n                        if (a.alias > b.alias) {\n                            return 1;\n                        }\n                        if (a.alias < b.alias) {\n                            return -1;\n                        }\n                        return 0;\n                    });\n                }\n            }\n        });\n    }\n\n    addToStore(wallet, boolean): void {\n        const value = this.store.state.sync;\n        if (value && value.length > 0) {\n            const sync = value.filter((item) => item.wallet_id === wallet.wallet_id);\n            if (sync && sync.length > 0) {\n                const result = value.map((item) => {\n                    if (item.wallet_id === wallet.wallet_id) {\n                        return { sync: boolean, wallet_id: wallet.wallet_id };\n                    } else {\n                        return item;\n                    }\n                });\n                this.store.set(StateKeys.sync, result);\n            } else {\n                value.push({ sync: boolean, wallet_id: wallet.wallet_id });\n                this.store.set(StateKeys.sync, value);\n            }\n        } else {\n            this.store.set(StateKeys.sync, [{ sync: boolean, wallet_id: wallet.wallet_id }]);\n        }\n    }\n\n    getVersion(): void {\n        this.backendService.getVersion((version, type, error) => {\n            this.ngZone.run(() => {\n                if (!error) {\n                    console.log('----------------- version -----------------', version);\n                    console.log('----------------- type -----------------', type);\n                    this.variablesService.testnet = type === 'testnet';\n                    this.variablesService.networkType = type;\n\n                    this._loadVerifiedAssetInfoWhitelist(type);\n                }\n            });\n        });\n    }\n\n    private _loadVerifiedAssetInfoWhitelist(type: 'mainnet' | 'testnet'): void {\n        const updateTime: number = 10 * 60 * 1000; // 10 minutes\n\n        interval(updateTime)\n            .pipe(\n                startWith(0),\n                switchMap(() => this._apiService.getVerifiedAssetInfoWhitelist(type).pipe(retry(2))),\n                takeUntil(this._destroy$)\n            )\n            .subscribe({\n                next: ({ assets }) => {\n                    this.variablesService.verifiedAssetInfoWhitelist = assets;\n                    this._walletsService.setVerifiedAssetInfoWhitelist(assets);\n                },\n            });\n    }\n\n    getInfo(): void {\n        const updateTime: number = 60 * 1000; // 1 minutes\n\n        interval(updateTime)\n            .pipe(startWith(0), takeUntil(this._destroy$))\n            .subscribe({\n                next: () => {\n                    const params = {\n                        jsonrpc: '2.0',\n                        method: 'getinfo',\n                    };\n\n                    this.backendService.call_rpc(params, (status, response_data) => {\n                        this.ngZone.run(() => {\n                            this.variablesService.info$.next(response_data.result);\n                        });\n                    });\n                },\n            });\n    }\n\n    private _getZanoCurrentSupply(): void {\n        const params: ParamsCallRpc = {\n            jsonrpc: '2.0',\n            id: 0,\n            method: 'getinfo',\n            params: {\n                flags: 1024,\n            },\n        };\n\n        this.backendService.call_rpc(params, (status, response_data) => {\n            this.ngZone.run(() => {\n                this.variablesService.zano_current_supply = response_data?.['result']?.['total_coins'];\n            });\n        });\n    }\n\n    private _setTranslate(): void {\n        this.translate.addLangs(['en', 'fr', 'de', 'it', 'pt']);\n        this.translate.setDefaultLang('en');\n        this.translate\n            .use('en')\n            .pipe(takeUntil(this._destroy$))\n            .subscribe({\n                next: () => {\n                    this.translateUsed = true;\n                },\n            });\n    }\n\n    private _setResponseClasses(): void {\n        this._breakpointObserver\n            .observe([\n                Breakpoints.XSmall, // XSmall\t(max-width: 599.98px)\n                Breakpoints.Small, // Small\t(min-width: 600px) and (max-width: 959.98px)\n                Breakpoints.Medium, // Medium\t(min-width: 960px) and (max-width: 1279.98px)\n                Breakpoints.Large, // Large\t(min-width: 1280px) and (max-width: 1919.98px)\n                Breakpoints.XLarge, // XLarge\t(min-width: 1920px)\n            ])\n            .pipe(takeUntil(this._destroy$))\n            .subscribe((result) => {\n                for (const query of Object.keys(result.breakpoints)) {\n                    if (result.breakpoints[query]) {\n                        this.currentScreenSize = this.displayNameMap.get(query) ?? 'Unknown';\n\n                        document.body.classList.remove(...this.displayNameMap.values());\n                        document.body.classList.add(this.currentScreenSize);\n                    }\n                }\n            });\n    }\n\n    private _startWrapInfoPolling(): void {\n        interval(3 * 60 * 1000)\n            .pipe(\n                startWith(0),\n                switchMap(() =>\n                    this._apiService.getWrapInfo().pipe(\n                        retry(2),\n                        catchError((error) => {\n                            this.variablesService.is_wrap_info_service_inactive$.next(true);\n                            this.backendService.printLog({\n                                is_wrap_info_service_inactive: true,\n                                wrap_info_error: error,\n                            });\n                            return of(null);\n                        })\n                    )\n                ),\n                takeUntil(this._destroy$)\n            )\n            .subscribe((wrap_info: WrapInfo | null) => {\n                if (wrap_info) {\n                    this.variablesService.is_wrap_info_service_inactive$.next(false);\n                    this.variablesService.wrap_info$.next(wrap_info);\n\n                    this.backendService.printLog({\n                        is_wrap_info_service_inactive: false,\n                        wrap_info,\n                    });\n                }\n            });\n    }\n}\n","import { inject, NgModule, Provider } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PagesModule } from './pages/pages.module';\nimport { CommonModule } from '@angular/common';\nimport { TranslateLoader, TranslateModule, TranslateModuleConfig } from '@ngx-translate/core';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { BrowserModule, DomSanitizer } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ChartModule, HIGHCHARTS_MODULES } from 'angular-highcharts';\nimport * as highcharts from 'highcharts';\nimport exporting from 'highcharts/modules/exporting.src';\nimport { MoneyToIntPipeModule } from '@parts/pipes';\nimport { OpenWalletModalComponent } from '@parts/modals/open-wallet-modal/open-wallet-modal.component';\nimport { FlexModule } from '@angular/flex-layout';\nimport { FormsModule } from '@angular/forms';\nimport { RegisterContextTemplatesComponent } from '@parts/components/register-context-templates.component';\nimport { DEFAULT_DIALOG_CONFIG, DialogConfig } from '@angular/cdk/dialog';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { materialZanoIcons } from '../assets/material-zano-icons';\nimport { MAT_DIALOG_DEFAULT_OPTIONS, MatDialogConfig, MatDialogModule } from '@angular/material/dialog';\n\nexport function highchartsFactory(): any[] {\n    highcharts.setOptions({\n        time: {\n            useUTC: false,\n        },\n    });\n\n    return [exporting];\n}\n\nexport const provideHighchartsFactory = {\n    provide: HIGHCHARTS_MODULES,\n    useFactory: highchartsFactory,\n};\n\nexport function HttpLoaderFactory(httpClient: HttpClient): TranslateHttpLoader {\n    return new TranslateHttpLoader(httpClient, './assets/i18n/', '.json');\n}\n\nconst translateModuleConfig: TranslateModuleConfig = {\n    loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient],\n    },\n};\n\nconst provideDialog: Provider = {\n    provide: DEFAULT_DIALOG_CONFIG,\n    useValue: <DialogConfig>{\n        width: '95vw',\n        maxWidth: '54rem',\n        maxHeight: '90vh',\n        hasBackdrop: true,\n        disableClose: true,\n    },\n};\n\nconst providerMatDialog: Provider = {\n    provide: MAT_DIALOG_DEFAULT_OPTIONS,\n    useValue: <MatDialogConfig>{\n        width: '95vw',\n        maxWidth: '54rem',\n        maxHeight: '90vh',\n        panelClass: 'zano-mat-dialog',\n        hasBackdrop: true,\n        disableClose: true,\n    },\n};\n\n@NgModule({\n    declarations: [AppComponent, OpenWalletModalComponent],\n    imports: [\n        CommonModule,\n        BrowserModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        TranslateModule.forRoot(translateModuleConfig),\n        AppRoutingModule,\n        PagesModule,\n        ChartModule,\n        MoneyToIntPipeModule,\n        FlexModule,\n        FormsModule,\n        MatDialogModule,\n        RegisterContextTemplatesComponent,\n    ],\n    providers: [provideHighchartsFactory, provideDialog, providerMatDialog],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {\n    private _matIconRegistry: MatIconRegistry = inject(MatIconRegistry);\n\n    private _sanitizer: DomSanitizer = inject(DomSanitizer);\n\n    constructor() {\n        this._registerIcons(materialZanoIcons);\n    }\n\n    private _registerIcons(icons: Array<string>): void {\n        icons.forEach((icon: string) => {\n            this._matIconRegistry.addSvgIcon(\n                icon,\n                this._sanitizer.bypassSecurityTrustResourceUrl(`assets/material-zano-icons/${icon}.svg`)\n            );\n        });\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-full-layout',\n    template: `\n        <div class=\"overflow-auto p-2\" fxFlex=\"100\" fxFlexFill>\n            <router-outlet></router-outlet>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                overflow: hidden;\n            }\n        `,\n    ],\n})\nexport class FullLayoutComponent {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FullLayoutComponent } from './full-layout.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { RouterOutlet } from '@angular/router';\n\n@NgModule({\n    declarations: [FullLayoutComponent],\n    imports: [CommonModule, RouterOutlet, FlexLayoutModule],\n    exports: [FullLayoutComponent],\n})\nexport class FullLayoutModule {}\n","import { Component, NgZone, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { Wallet } from '@api/models/wallet.model';\nimport { ConfirmModalComponent, ConfirmModalData } from '@parts/modals/confirm-modal/confirm-modal.component';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { WalletsService } from '@parts/services/wallets.service';\nimport { ZanoLoadersService } from '@parts/services/zano-loaders.service';\nimport { BackendService } from '@api/services/backend.service';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-sidebar',\n    template: `\n        <div class=\"sidebar-header mb-1\">\n            <zano-zano-logo></zano-zano-logo>\n        </div>\n\n        <div class=\"sidebar-content\">\n            <div class=\"sidebar-content-wallet-list mb-1\">\n                <div (cdkDropListDropped)=\"drop($event)\" cdkDropList cdkDropListLockAxis=\"y\" class=\"scrolled-content\">\n                    <app-wallet-card\n                        (click)=\"selectWallet(wallet.wallet_id)\"\n                        (eventClose)=\"beforeClose($event)\"\n                        *ngFor=\"let wallet of variablesService.wallets\"\n                        [cdkDragData]=\"wallet\"\n                        [ngClass]=\"{\n                            active: wallet?.wallet_id === variablesService?.current_wallet?.wallet_id,\n                            auditable: wallet.is_auditable && !wallet.is_watch_only,\n                            'watch-only': wallet.is_watch_only,\n                            'offset-testnet': variablesService.testnet,\n                            'mb-1': !variablesService.testnet\n                        }\"\n                        [wallet]=\"wallet\"\n                        cdkDrag\n                    ></app-wallet-card>\n                </div>\n            </div>\n\n            <div class=\"sidebar-nav scrolled-content\">\n                <button\n                    (click)=\"goMainPage()\"\n                    class=\"outline small w-100 mb-1 px-2\"\n                    fxLayout=\"row inline wrap\"\n                    fxLayoutAlign=\"start center\"\n                >\n                    <mat-icon class=\"mr-1\" svgIcon=\"zano-plus\"></mat-icon>\n                    <span>{{ 'SIDEBAR.ADD_NEW' | translate }}</span>\n                </button>\n\n                <button\n                    [routerLink]=\"['/settings']\"\n                    class=\"outline small w-100 mb-1 px-2\"\n                    fxLayout=\"row inline wrap\"\n                    fxLayoutAlign=\"start center\"\n                    routerLinkActive=\"active\"\n                >\n                    <mat-icon class=\"mr-1\" svgIcon=\"zano-settings\"></mat-icon>\n                    <span>{{ 'SIDEBAR.SETTINGS' | translate }}</span>\n                </button>\n\n                <ng-container *ngIf=\"variablesService.appPass === ''; else masterPass\">\n                    <button\n                        (click)=\"logOut()\"\n                        [delay]=\"500\"\n                        [disabled]=\"variablesService.appPass === ''\"\n                        [timeDelay]=\"500\"\n                        class=\"outline small w-100 px-2\"\n                        fxLayout=\"row inline wrap\"\n                        fxLayoutAlign=\"start center\"\n                        placement=\"bottom\"\n                        tooltip=\"{{ 'SIDEBAR.LOG_OUT_TOOLTIP' | translate }}\"\n                        tooltipClass=\"table-tooltip account-tooltip\"\n                    >\n                        <mat-icon class=\"mr-1\" svgIcon=\"zano-logout\"></mat-icon>\n                        <span>{{ 'SIDEBAR.LOG_OUT' | translate }}</span>\n                    </button>\n                </ng-container>\n\n                <ng-template #masterPass>\n                    <button (click)=\"logOut()\" class=\"outline small w-100 px-2\" fxLayout=\"row inline wrap\" fxLayoutAlign=\"start center\">\n                        <mat-icon class=\"mr-1\" svgIcon=\"zano-logout\"></mat-icon>\n                        <span> {{ 'SIDEBAR.LOG_OUT' | translate }}</span>\n                    </button>\n                </ng-template>\n            </div>\n        </div>\n\n        <div class=\"sidebar-footer\">\n            <app-synchronization-status></app-synchronization-status>\n        </div>\n\n        <app-deeplink></app-deeplink>\n    `,\n    styleUrls: ['./sidebar.component.scss'],\n})\nexport class SidebarComponent implements OnDestroy {\n    private destroy$ = new Subject<void>();\n\n    constructor(\n        public variablesService: VariablesService,\n        private walletsService: WalletsService,\n        private route: ActivatedRoute,\n        private router: Router,\n        private ngZone: NgZone,\n        private _matDialog: MatDialog,\n        private backend: BackendService,\n        public zanoLoadersService: ZanoLoadersService\n    ) {}\n\n    ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    goMainPage(): void {\n        if (this.route.snapshot.queryParams && this.route.snapshot.queryParams.prevUrl === 'login') {\n            this.ngZone.run(() => {\n                this.router.navigate(['/'], { queryParams: { prevUrl: 'login' } });\n            });\n        } else {\n            this.ngZone.run(() => {\n                this.router.navigate(['/']);\n            });\n        }\n    }\n\n    selectWallet(id: number): void {\n        this.ngZone.run(() => {\n            this.variablesService.setCurrentWallet(id);\n            this.router.navigate(['/wallet/assets']);\n        });\n    }\n\n    drop(event: CdkDragDrop<Wallet[]>): void {\n        moveItemInArray(this.variablesService.wallets, event.previousIndex, event.currentIndex);\n    }\n\n    beforeClose(wallet_id): void {\n        const config: MatDialogConfig<ConfirmModalData> = {\n            data: {\n                title: 'WALLET.CONFIRM.MESSAGE',\n                message: 'WALLET.CONFIRM.TITLE',\n            },\n        };\n\n        this._matDialog\n            .open<ConfirmModalComponent, ConfirmModalData, boolean>(ConfirmModalComponent, config)\n            .afterClosed()\n            .pipe(takeUntil(this.destroy$))\n            .subscribe({\n                next: (confirmed) => confirmed && this.closeWallet(wallet_id),\n            });\n    }\n\n    closeWallet(wallet_id): void {\n        this.walletsService.closeWallet(wallet_id);\n    }\n\n    logOut(): void {\n        this.zanoLoadersService.open('fullScreen', 'SIDEBAR.SYNCHRONIZATION.LOGGING_OUT');\n\n        setTimeout(() => {\n            this.variablesService.stopCountdown();\n            this.variablesService.appLogin = false;\n            this.variablesService.appPass = '';\n            this.ngZone.run(() => {\n                this.router.navigate(['/login'], { queryParams: { type: 'auth' } }).then(() => {\n                    this.zanoLoadersService.close('fullScreen');\n                });\n            });\n        }, 500);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SidebarComponent } from './sidebar.component';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RouterModule } from '@angular/router';\nimport { DisablePriceFetchModule, TooltipModule } from '@parts/directives';\nimport { ConfirmModalModule } from '@parts/modals/confirm-modal/confirm-modal.module';\nimport { DeeplinkModule } from '../../pages/deeplink/deeplink.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { IntToMoneyPipeModule } from '@parts/pipes';\nimport { StakingSwitchComponent } from '@parts/components/staking-switch.component';\nimport { SynchronizationStatusComponent } from '@parts/components/synchronization-status.component';\nimport { WalletCardComponent } from '@parts/components/wallet-card/wallet-card.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ZanoLogoComponent } from '@parts/components/zano-logo/zano-logo.component';\n\n@NgModule({\n    declarations: [SidebarComponent],\n    imports: [\n        CommonModule,\n        RouterModule,\n        DragDropModule,\n        TooltipModule,\n        TranslateModule,\n        DisablePriceFetchModule,\n        ConfirmModalModule,\n        SynchronizationStatusComponent,\n        DeeplinkModule,\n        StakingSwitchComponent,\n        FlexLayoutModule,\n        IntToMoneyPipeModule,\n        WalletCardComponent,\n        MatIconModule,\n        ZanoLogoComponent,\n    ],\n    exports: [SidebarComponent],\n})\nexport class SidebarModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-with-sidebar-layout',\n    templateUrl: './with-sidebar-layout.component.html',\n    styleUrls: ['./with-sidebar-layout.component.scss'],\n})\nexport class WithSidebarLayoutComponent {}\n","<app-sidebar></app-sidebar>\n\n<div class=\"with-sidebar-layout-container\" fxFlex=\"100\">\n    <router-outlet></router-outlet>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WithSidebarLayoutComponent } from './with-sidebar-layout.component';\nimport { SidebarModule } from '../sidebar/sidebar.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { RouterOutlet } from '@angular/router';\n\n@NgModule({\n    declarations: [WithSidebarLayoutComponent],\n    imports: [CommonModule, RouterOutlet, FlexLayoutModule, SidebarModule],\n    exports: [WithSidebarLayoutComponent],\n})\nexport class WithSidebarLayoutModule {}\n","import { Component, inject, NgZone } from '@angular/core';\nimport { BackendService } from '@api/services/backend.service';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CREATE_NEW_WALLET_HELP_PAGE } from '@parts/data/constants';\nimport { filePathWalletValidator } from '@parts/utils/zano-validators';\nimport { ModalService } from '@parts/services/modal.service';\n\n@Component({\n    selector: 'app-add-wallet',\n    templateUrl: './add-wallet.component.html',\n    styleUrls: ['./add-wallet.component.scss'],\n})\nexport class AddWalletComponent {\n    private translateService = inject(TranslateService);\n\n    constructor(\n        public variablesService: VariablesService,\n        private router: Router,\n        private modalService: ModalService,\n        private backendService: BackendService,\n        private ngZone: NgZone\n    ) {}\n\n    openWallet(): void {\n        const caption = this.translateService.instant('MAIN.CHOOSE_PATH');\n        const default_path = this.variablesService.settings.default_path;\n        this.backendService.openFileDialog(caption, '*', default_path, async (file_status, file_data) => {\n            if (!file_status) {\n                if (file_data['error_code'] !== 'CANCELED') {\n                    this.modalService.prepareModal('error', file_data['error_code']);\n                }\n                return;\n            }\n            const positionLastSlash = file_data.path.lastIndexOf('/');\n            const new_default_path = file_data.path.slice(0, positionLastSlash);\n            const error = filePathWalletValidator(file_data.path);\n\n            if (error) {\n                const text = this.translateService.instant(error.errorText);\n                this.modalService.prepareModal('error', text);\n                return;\n            }\n\n            this.variablesService.settings.default_path = new_default_path;\n            await this.ngZone.run(async () => {\n                await this.router.navigate(['/open'], {\n                    queryParams: { path: file_data.path },\n                });\n            });\n        });\n    }\n\n    openInBrowser(): void {\n        this.backendService.openUrlInBrowser(CREATE_NEW_WALLET_HELP_PAGE);\n    }\n}\n","<div class=\"page-container\">\n    <div class=\"toolbar mb-2\">\n        <div class=\"left\">\n            <app-back-button></app-back-button>\n            <h1 class=\"ml-2\">{{ 'BREADCRUMBS.ADD_WALLET' | translate }}</h1>\n        </div>\n        <div class=\"right\"></div>\n    </div>\n\n    <div class=\"page-content\">\n        <div class=\"scrolled-content\" fxFlex=\"1 1 auto\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n            <div class=\"add-wallet w-100\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n                <div class=\"wrap-controls text-align-center max-w-38-rem\">\n                    <h4 class=\"mb-2\">{{ 'MAIN.TITLE' | translate }}</h4>\n\n                    <button [routerLink]=\"['/create']\" class=\"primary big w-100 mb-1\" type=\"button\">\n                        {{ 'MAIN.BUTTON_NEW_WALLET' | translate }}\n                    </button>\n\n                    <button (click)=\"openWallet()\" class=\"primary big w-100 mb-1\" type=\"button\">\n                        {{ 'MAIN.BUTTON_OPEN_WALLET' | translate }}\n                    </button>\n\n                    <button [routerLink]=\"['/restore']\" class=\"outline big w-100 mb-2\" type=\"button\">\n                        {{ 'MAIN.BUTTON_RESTORE_BACKUP' | translate }}\n                    </button>\n\n                    <p\n                        (click)=\"openInBrowser()\"\n                        class=\"text-align-center cursor-pointer how-to-create\"\n                        fxLayout=\"row\"\n                        fxLayoutAlign=\"center center\"\n                    >\n                        <mat-icon svgIcon=\"zano-question\" class=\"mr-1\"></mat-icon>\n                        <span class=\"color-primary\">{{ 'MAIN.HELP' | translate }}</span>\n                    </p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport { NonNullableFormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { BackendService } from '@api/services/backend.service';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { ModalService } from '@parts/services/modal.service';\nimport { Wallet } from '@api/models/wallet.model';\nimport { IntToMoneyPipe } from '@parts/pipes/int-to-money-pipe/int-to-money.pipe';\nimport BigNumber from 'bignumber.js';\nimport { Subject } from 'rxjs';\nimport { hasOwnProperty } from '@parts/functions/has-own-property';\nimport { takeUntil } from 'rxjs/operators';\nimport { REG_EXP_REGISTER_ALIAS_NAME } from '@parts/utils/zano-validators';\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\nimport { MAX_COMMENT_LENGTH } from '@parts/data/constants';\n\nconst NameValidators = [\n    Validators.required,\n    Validators.minLength(6),\n    Validators.maxLength(25),\n    Validators.pattern(REG_EXP_REGISTER_ALIAS_NAME),\n];\n\nconst CommentValidators = [Validators.maxLength(MAX_COMMENT_LENGTH)];\n\n@Component({\n    selector: 'app-assign-alias',\n    templateUrl: './assign-alias.component.html',\n})\nexport class AssignAliasComponent implements OnInit, OnDestroy {\n    readonly breadcrumbItems: BreadcrumbItems = [\n        {\n            routerLink: '/wallet/history',\n            title: this.variablesService.current_wallet.name,\n        },\n        {\n            title: 'BREADCRUMBS.ASSIGN_ALIAS',\n        },\n    ];\n\n    wallet: Wallet = this.variablesService.current_wallet;\n\n    form = this._fb.group({\n        name: this._fb.control('', NameValidators),\n        comment: this._fb.control('', CommentValidators),\n    });\n\n    alias = {\n        name: '',\n        fee: this.variablesService.default_fee,\n        price: this.variablesService.default_price_alias,\n        reward: '0',\n        rewardOriginal: '0',\n        comment: '',\n        exists: false,\n    };\n\n    canRegister = false;\n\n    notEnoughMoney = false;\n\n    private _destroy$: Subject<void> = new Subject<void>();\n\n    constructor(\n        readonly variablesService: VariablesService,\n        private readonly _fb: NonNullableFormBuilder,\n        private readonly _ngZone: NgZone,\n        private readonly _router: Router,\n        private readonly _backendService: BackendService,\n        private readonly _modalService: ModalService,\n        private readonly _intToMoney: IntToMoneyPipe\n    ) {}\n\n    ngOnInit(): void {\n        this._subscribeToNameValueChanges();\n    }\n\n    ngOnDestroy(): void {\n        this._destroy$.next();\n        this._destroy$.complete();\n    }\n\n    beforeSubmit(): void {\n        if (!this.canRegister || this.notEnoughMoney || this.form.invalid) {\n            this.form.markAllAsTouched();\n            this.form.updateValueAndValidity();\n            return;\n        }\n\n        const { testnet } = this.variablesService;\n        const alias = this.wallet.alias_info;\n\n        if (!testnet && hasOwnProperty(alias, 'name')) {\n            this._modalService.prepareModal('info', 'ASSIGN_ALIAS.ONE_ALIAS');\n            return;\n        }\n\n        this.submit();\n    }\n\n    submit(): void {\n        this.alias.comment = this.form.controls.comment.value;\n        this._backendService.registerAlias(\n            this.wallet.wallet_id,\n            this.alias.name,\n            this.wallet.address,\n            this.alias.fee,\n            this.alias.comment,\n            this.alias.rewardOriginal,\n            (status) => {\n                this._ngZone.run(() => {\n                    if (status) {\n                        this._modalService.prepareModal('info', 'ASSIGN_ALIAS.REQUEST_ADD_REG');\n                        this._router.navigate(['/wallet/']).then();\n                    }\n                });\n            }\n        );\n    }\n\n    private _subscribeToNameValueChanges(): void {\n        const {\n            controls: { name: control },\n        } = this.form;\n\n        control.valueChanges.pipe(takeUntil(this._destroy$)).subscribe({\n            next: (value) => {\n                this.canRegister = false;\n                this.alias.exists = false;\n                const newName = value.toLowerCase().replace('@', '');\n                if (!(control.errors && control.hasError('pattern')) && newName.length >= 6 && newName.length <= 25) {\n                    this._backendService.getAliasInfoByName(newName, (status) => {\n                        this._ngZone.run(() => {\n                            this.alias.exists = status;\n                        });\n                        if (!status) {\n                            this.alias.price = this.variablesService.default_price_alias;\n                            this._backendService.getAliasCoast(newName, (statusPrice, dataPrice) => {\n                                this._ngZone.run(() => {\n                                    if (statusPrice) {\n                                        this.alias.price = BigNumber.sum(dataPrice['coast'], this.variablesService.default_fee_big);\n                                    }\n                                    const unlocked_balance = new BigNumber(this.wallet.getBalanceByTicker('ZANO')?.unlocked || 0);\n                                    this.notEnoughMoney = this.alias.price.isGreaterThan(unlocked_balance);\n                                    this.alias.reward = this._intToMoney.transform(this.alias.price);\n                                    this.alias.rewardOriginal = this._intToMoney.transform(dataPrice['coast']);\n                                    this.canRegister = !this.notEnoughMoney;\n                                });\n                            });\n                        } else {\n                            this.notEnoughMoney = false;\n                            this.alias.reward = '0';\n                            this.alias.rewardOriginal = '0';\n                        }\n                    });\n                } else {\n                    this.notEnoughMoney = false;\n                    this.alias.reward = '0';\n                    this.alias.rewardOriginal = '0';\n                }\n                this.alias.name = newName;\n            },\n        });\n    }\n}\n","<div class=\"page-container\">\n    <div class=\"toolbar mb-2\">\n        <div class=\"left\">\n            <app-back-button></app-back-button>\n            <h1 class=\"ml-2\">{{ 'BREADCRUMBS.ASSIGN_ALIAS' | translate }}</h1>\n        </div>\n\n        <div class=\"right\"></div>\n    </div>\n\n    <div class=\"page-content\">\n        <app-breadcrumbs [items]=\"breadcrumbItems\" class=\"mb-2\"></app-breadcrumbs>\n\n        <div class=\"scrolled-content\">\n            <form (ngSubmit)=\"beforeSubmit()\" [formGroup]=\"form\" class=\"form\">\n                <!--Name-->\n                <div class=\"form__field\">\n                    <label\n                        [delay]=\"50\"\n                        [tooltip]=\"'ASSIGN_ALIAS.NAME.TOOLTIP' | translate\"\n                        for=\"alias-name\"\n                        placement=\"bottom-left\"\n                        tooltipClass=\"table-tooltip assign-alias-tooltip\"\n                    >\n                        {{ 'ASSIGN_ALIAS.NAME.LABEL' | translate }}\n                    </label>\n                    <div class=\"has-no-edit-symbol\">\n                        <input\n                            (contextmenu)=\"variablesService.onContextMenu($event)\"\n                            [placeholder]=\"'ASSIGN_ALIAS.NAME.PLACEHOLDER' | translate\"\n                            class=\"form__field--input\"\n                            formControlName=\"name\"\n                            id=\"alias-name\"\n                            type=\"text\"\n                        />\n                    </div>\n                    <ng-container *ngIf=\"form.controls.name | isVisibleControlError\">\n                        <div class=\"error\">\n                            <ng-container *ngIf=\"form.controls.name.hasError('pattern'); else nameMinLengthErrorTemplate\">\n                                {{ 'ASSIGN_ALIAS.FORM_ERRORS.NAME_WRONG' | translate }}\n                            </ng-container>\n\n                            <ng-template #nameMinLengthErrorTemplate>\n                                <ng-container *ngIf=\"form.controls.name.hasError('minlength'); else nameMaxLengthErrorTemplate\">\n                                    {{ 'ASSIGN_ALIAS.FORM_ERRORS.NAME_LENGTH' | translate }}\n                                </ng-container>\n                            </ng-template>\n\n                            <ng-template #nameMaxLengthErrorTemplate>\n                                <ng-container *ngIf=\"form.controls.name.hasError('maxlength'); else nameRequiredErrorTemplate\">\n                                    {{ 'ASSIGN_ALIAS.FORM_ERRORS.NAME_LENGTH' | translate }}\n                                </ng-container>\n                            </ng-template>\n\n                            <ng-template #nameRequiredErrorTemplate>\n                                <ng-container *ngIf=\"form.controls.name.hasError('required')\">\n                                    {{ 'ERRORS.REQUIRED' | translate }}\n                                </ng-container>\n                            </ng-template>\n                        </div>\n                    </ng-container>\n\n                    <ng-container *ngIf=\"alias.exists; else notEnoughMoneyErrorTemplate\">\n                        <div class=\"error\">\n                            {{ 'ASSIGN_ALIAS.FORM_ERRORS.NAME_EXISTS' | translate }}\n                        </div>\n                    </ng-container>\n\n                    <ng-template #notEnoughMoneyErrorTemplate>\n                        <ng-container *ngIf=\"notEnoughMoney\">\n                            <div class=\"error\">\n                                {{ 'ASSIGN_ALIAS.FORM_ERRORS.NO_MONEY' | translate }}\n                            </div>\n                        </ng-container>\n                    </ng-template>\n                </div>\n\n                <!--Comment-->\n                <div class=\"form__field textarea\">\n                    <label\n                        [delay]=\"50\"\n                        [tooltip]=\"'ASSIGN_ALIAS.COMMENT.TOOLTIP' | translate\"\n                        for=\"alias-comment\"\n                        placement=\"bottom-left\"\n                        tooltipClass=\"table-tooltip assign-alias-tooltip\"\n                    >\n                        {{ 'ASSIGN_ALIAS.COMMENT.LABEL' | translate }}\n                    </label>\n                    <textarea\n                        (contextmenu)=\"variablesService.onContextMenu($event)\"\n                        [placeholder]=\"'ASSIGN_ALIAS.COMMENT.PLACEHOLDER' | translate\"\n                        class=\"scrolled-content\"\n                        formControlName=\"comment\"\n                        id=\"alias-comment\"\n                    ></textarea>\n                    <ng-container *ngIf=\"form.controls.comment | isVisibleControlError\">\n                        <div class=\"error\">\n                            <ng-container *ngIf=\"form.controls.comment.hasError('maxlength')\">\n                                {{ 'ASSIGN_ALIAS.FORM_ERRORS.MAX_LENGTH' | translate }}\n                            </ng-container>\n                        </div>\n                    </ng-container>\n                </div>\n\n                <p class=\"mb-2\">\n                    {{\n                        'ASSIGN_ALIAS.COST'\n                            | translate\n                                : {\n                                      value: alias.price | intToMoney,\n                                      currency: variablesService.defaultTicker\n                                  }\n                    }}\n                </p>\n\n                <button [disabled]=\"form.invalid || !canRegister || notEnoughMoney\" class=\"primary big w-100\" type=\"submit\">\n                    {{ 'ASSIGN_ALIAS.BUTTON_ASSIGN' | translate }}\n                </button>\n            </form>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { paths, pathsChildrenAuth } from '../paths';\nimport { NoWalletComponent } from './no-wallet/no-wallet.component';\nimport { FullLayoutComponent } from '../../layouts/full-layout/full-layout.component';\n\nconst routes: Routes = [\n    {\n        path: paths.auth,\n        component: FullLayoutComponent,\n        children: [\n            {\n                path: pathsChildrenAuth.noWallet,\n                component: NoWalletComponent,\n            },\n        ],\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class AuthRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { NoWalletComponent } from './no-wallet/no-wallet.component';\nimport { SynchronizationStatusComponent } from '@parts/components/synchronization-status.component';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n    declarations: [NoWalletComponent],\n    imports: [CommonModule, AuthRoutingModule, TranslateModule, FlexLayoutModule, SynchronizationStatusComponent, MatIconModule],\n})\nexport class AuthModule {}\n","import { Component, inject, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, ValidationErrors, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BackendService } from '@api/services/backend.service';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { Wallet } from '@api/models/wallet.model';\nimport { hasOwnProperty } from '@parts/functions/has-own-property';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { REG_EXP_PASSWORD, ZanoValidators } from '@parts/utils/zano-validators';\nimport { WalletsService } from '@parts/services/wallets.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n    submitLoading$ = new BehaviorSubject(false);\n\n    resetLoading$ = new BehaviorSubject(false);\n\n    fb = inject(FormBuilder);\n\n    regForm = this.fb.group(\n        {\n            password: this.fb.nonNullable.control('', Validators.pattern(REG_EXP_PASSWORD)),\n            confirmation: this.fb.nonNullable.control(''),\n        },\n        {\n            validators: [ZanoValidators.formMatch('password', 'confirmation')],\n        }\n    );\n\n    authForm = this.fb.group({\n        password: this.fb.nonNullable.control(''),\n    });\n\n    type = 'reg';\n\n    private destroy$ = new Subject<void>();\n\n    constructor(\n        public variablesService: VariablesService,\n        public walletsService: WalletsService,\n        private route: ActivatedRoute,\n        private router: Router,\n        private backend: BackendService,\n        private ngZone: NgZone\n    ) {}\n\n    ngOnInit(): void {\n        this.route.queryParams.pipe(takeUntil(this.destroy$)).subscribe({\n            next: (params) => {\n                if (params.type) {\n                    this.type = params.type;\n                }\n            },\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    onSubmitCreatePass(): void {\n        if (this.regForm.valid) {\n            this.variablesService.appPass = this.regForm.get('password').value; // the pass what was written in input of login form by user\n\n            this.backend.setMasterPassword({ pass: this.variablesService.appPass }, (status, data) => {\n                if (status) {\n                    this.backend.storeSecureAppData({\n                        pass: this.variablesService.appPass,\n                    });\n                    this.variablesService.appLogin = true;\n                    this.variablesService.dataIsLoaded = true;\n                    if (this.variablesService.settings.appLockTime) {\n                        this.variablesService.startCountdown();\n                    }\n                    this.ngZone.run(() => {\n                        this.router.navigate(['/']);\n                    });\n                } else {\n                    console.log(data['error_code']);\n                }\n            });\n        }\n    }\n\n    onSkipCreatePass(): void {\n        this.ngZone.run(() => {\n            this.variablesService.appPass = '';\n            this.variablesService.appLogin = true;\n            this.router.navigate(['/']);\n        });\n    }\n\n    resetJwtWalletRpc(callback?: () => void): void {\n        this.backend.setupJwtWalletRpc({ secret: '', zanoCompation: false }, callback);\n    }\n\n    dropSecureAppData(): void {\n        this.resetLoading$.next(true);\n\n        this.resetJwtWalletRpc(() => {\n            this.variablesService.wallets.forEach(({ wallet_id }) => {\n                this.backend.closeWallet(wallet_id, () => {\n                    for (let i = this.variablesService.wallets.length - 1; i >= 0; i--) {\n                        this.variablesService.wallets.splice(i, 1);\n                        this.backend.storeSecureAppData(() => {\n                            if (this.variablesService.wallets.length === 0) {\n                                this.backend.dropSecureAppData(() => {\n                                    this.ngZone.run(() => {\n                                        this.resetLoading$.next(false);\n                                        this.onSkipCreatePass();\n                                    });\n                                });\n                            }\n                        });\n                    }\n                });\n            });\n\n            if (this.variablesService.wallets.length === 0) {\n                this.backend.dropSecureAppData(() => {\n                    this.ngZone.run(() => {\n                        this.resetLoading$.next(false);\n                        this.onSkipCreatePass();\n                    });\n                });\n            }\n        });\n        this.variablesService.contacts = [];\n    }\n\n    onSubmitAuthPass(): void {\n        this.submitLoading$.next(true);\n\n        if (this.authForm.valid) {\n            this.variablesService.appPass = this.authForm.get('password').value;\n            if (this.variablesService.dataIsLoaded) {\n                this.backend.checkMasterPassword({ pass: this.variablesService.appPass }, (status) => {\n                    if (status) {\n                        this.variablesService.appLogin = true;\n                        if (this.variablesService.settings.appLockTime) {\n                            this.variablesService.startCountdown();\n                        }\n                        this.ngZone.run(() => {\n                            this.submitLoading$.next(false);\n                            this.router.navigate(['/'], {\n                                queryParams: { prevUrl: 'login' },\n                            });\n                        });\n                    } else {\n                        this.ngZone.run(() => {\n                            this.submitLoading$.next(false);\n                            this.setAuthPassError({ wrong_password: true });\n                        });\n                    }\n                });\n            } else {\n                this.getData(this.variablesService.appPass);\n            }\n        } else {\n            this.submitLoading$.next(false);\n        }\n    }\n\n    getData(appPass): void {\n        this.backend.getSecureAppData({ pass: appPass }, (status, data) => {\n            if (!data.error_code) {\n                this.setAuthPassError(null);\n                this.variablesService.appLogin = true;\n                this.variablesService.dataIsLoaded = true;\n                if (this.variablesService.settings.appLockTime) {\n                    this.variablesService.startCountdown();\n                }\n                this.variablesService.appPass = appPass;\n                const isEmptyObject = Object.keys(data).length === 0 && data.constructor === Object;\n\n                if (this.variablesService.wallets.length > 0) {\n                    this.ngZone.run(() => {\n                        this.submitLoading$.next(false);\n                        this.router.navigate(['/wallet/']);\n                    });\n                    return;\n                }\n                if (hasOwnProperty(data, 'contracts')) {\n                    if (Object.keys(data['contacts']).length !== 0) {\n                        data['contacts'].map((contact) => {\n                            this.variablesService.contacts.push(contact);\n                        });\n                    }\n                }\n                if (hasOwnProperty(data, 'wallets')) {\n                    if (Object.keys(data['wallets']).length !== 0) {\n                        this.getWalletData(data['wallets']);\n                    } else {\n                        this.ngZone.run(() => {\n                            this.submitLoading$.next(false);\n                            this.router.navigate(['/']);\n                        });\n                    }\n                }\n                if (!hasOwnProperty(data, 'wallets') && !hasOwnProperty(data, 'contracts')) {\n                    if (data.length !== 0 && !isEmptyObject) {\n                        this.getWalletData(data);\n                    } else {\n                        this.ngZone.run(() => {\n                            this.submitLoading$.next(false);\n                            this.router.navigate(['/']);\n                        });\n                    }\n                }\n\n                if (this.variablesService.settings.zanoCompanionForm.zanoCompation) {\n                    this.backend.setupJwtWalletRpc(this.variablesService.settings.zanoCompanionForm);\n                }\n            }\n\n            if (data.error_code === 'WRONG_PASSWORD') {\n                this.ngZone.run(() => {\n                    this.submitLoading$.next(false);\n                    this.setAuthPassError({ wrong_password: true });\n                });\n            }\n        });\n    }\n\n    getWalletData(walletData): void {\n        let openWallets = 0;\n        let runWallets = 0;\n        walletData.forEach((wallet, wallet_index) => {\n            this.backend.openWallet(wallet.path, wallet.pass, this.variablesService.count, true, (open_status, open_data, open_error) => {\n                if (open_status || open_error === 'FILE_RESTORED') {\n                    openWallets++;\n                    this.ngZone.run(() => {\n                        const new_wallet = new Wallet(\n                            open_data.wallet_id,\n                            wallet.name,\n                            wallet.pass,\n                            open_data['wi'].path,\n                            open_data['wi'].address,\n                            open_data['wi'].balance,\n                            open_data['wi'].unlocked_balance,\n                            open_data['wi'].mined_total,\n                            open_data['wi'].tracking_hey\n                        );\n                        if (wallet.staking) {\n                            new_wallet.staking = true;\n                            this.backend.startPosMining(new_wallet.wallet_id);\n                        } else {\n                            new_wallet.staking = false;\n                        }\n                        new_wallet.is_auditable = open_data['wi'].is_auditable;\n                        new_wallet.is_watch_only = open_data['wi'].is_watch_only;\n                        new_wallet.currentPage = 1;\n                        new_wallet.exclude_mining_txs = false;\n                        if (open_data.recent_history && open_data.recent_history.history) {\n                            new_wallet.total_history_item = open_data.recent_history.total_history_items;\n                            new_wallet.totalPages = Math.ceil(open_data.recent_history.total_history_items / this.variablesService.count);\n                            new_wallet.totalPages > this.variablesService.maxPages\n                                ? (new_wallet.pages = new Array(5).fill(1).map((value, index) => value + index))\n                                : (new_wallet.pages = new Array(new_wallet.totalPages).fill(1).map((value, index) => value + index));\n                            new_wallet.prepareHistory(open_data.recent_history.history);\n                        } else {\n                            new_wallet.total_history_item = 0;\n                            new_wallet.pages = new Array(1).fill(1);\n                            new_wallet.totalPages = 1;\n                        }\n                        this.walletsService.addWallet(new_wallet);\n                        if (this.variablesService.wallets.length === 1) {\n                            this.router.navigate(['/wallet/']);\n                        }\n                    });\n                    this.backend.runWallet(open_data.wallet_id, (run_status) => {\n                        if (run_status) {\n                            runWallets++;\n                        } else {\n                            if (wallet_index === walletData.length - 1 && runWallets === 0) {\n                                this.ngZone.run(() => {\n                                    this.router.navigate(['/']);\n                                });\n                            }\n                        }\n                    });\n                } else {\n                    if (wallet_index === walletData.length - 1 && openWallets === 0) {\n                        this.ngZone.run(() => {\n                            this.router.navigate(['/']);\n                        });\n                    }\n                }\n            });\n        });\n        this.submitLoading$.next(false);\n    }\n\n    private setAuthPassError(errors: ValidationErrors | null): void {\n        this.authForm.controls['password'].setErrors(errors);\n    }\n}\n","<div class=\"auth\" fxFlexFill fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <div class=\"auth-card\">\n        <div class=\"mb-2\">\n            <zano-zano-logo></zano-zano-logo>\n        </div>\n\n        <form (ngSubmit)=\"onSubmitCreatePass()\" *ngIf=\"type === 'reg'\" [formGroup]=\"regForm\" class=\"form\">\n            <div class=\"auth-card-form\">\n                <div class=\"form__field mb-2\">\n                    <label for=\"master-pass\">{{ 'LOGIN.SETUP_MASTER_PASS' | translate }}</label>\n                    <input\n                        (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                        appAutofocus\n                        class=\"form__field--input\"\n                        formControlName=\"password\"\n                        id=\"master-pass\"\n                        placeholder=\"{{ 'PLACEHOLDERS.MASTER_PASS_PLACEHOLDER' | translate }}\"\n                        type=\"password\"\n                    />\n                    <div *ngIf=\"regForm.controls['password'].dirty && regForm.controls['password'].errors\" class=\"error\">\n                        <div *ngIf=\"regForm.controls['password'].errors.pattern\">\n                            {{ 'ERRORS.REGEXP_INVALID_PASSWORD' | translate }}\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"form__field fixed\">\n                    <label for=\"confirm-pass\">{{ 'LOGIN.SETUP_CONFIRM_PASS' | translate }}</label>\n                    <input\n                        (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                        class=\"form__field--input\"\n                        formControlName=\"confirmation\"\n                        id=\"confirm-pass\"\n                        placeholder=\"{{ 'PLACEHOLDERS.PLACEHOLDER_CONFIRM' | translate }}\"\n                        type=\"password\"\n                    />\n                    <div\n                        *ngIf=\"regForm.controls['password'].dirty && regForm.controls['confirmation'].dirty && regForm.errors\"\n                        class=\"error\"\n                    >\n                        <div *ngIf=\"regForm.errors['mismatch']\">\n                            {{ 'LOGIN.FORM_ERRORS.MISMATCH' | translate }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <button\n                [disabled]=\"\n                    !regForm.controls['password'].value.length ||\n                    !regForm.controls['confirmation'].value.length ||\n                    (regForm.errors && regForm.errors['mismatch']) ||\n                    regForm.controls['password'].errors\n                \"\n                class=\"primary big w-100 mb-1\"\n                type=\"submit\"\n            >\n                {{ 'LOGIN.BUTTON_NEXT' | translate }}\n            </button>\n\n            <button\n                (click)=\"onSkipCreatePass()\"\n                [disabled]=\"regForm.controls['password'].value.length || regForm.controls['confirmation'].value.length\"\n                class=\"primary big w-100\"\n                type=\"button\"\n            >\n                {{ 'LOGIN.BUTTON_SKIP' | translate }}\n            </button>\n        </form>\n\n        <form (ngSubmit)=\"onSubmitAuthPass()\" *ngIf=\"type !== 'reg'\" [formGroup]=\"authForm\" class=\"form\">\n            <div class=\"auth-card-form\">\n                <div class=\"form__field fixed\">\n                    <label for=\"master-pass-login\">{{ 'LOGIN.MASTER_PASS' | translate }}</label>\n                    <input\n                        (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                        [placeholder]=\"'PLACEHOLDERS.MASTER_PASS_PLACEHOLDER' | translate\"\n                        appAutofocus\n                        autofocus\n                        class=\"form__field--input\"\n                        formControlName=\"password\"\n                        id=\"master-pass-login\"\n                        type=\"password\"\n                    />\n                    <div\n                        *ngIf=\"\n                            authForm.controls['password'].invalid &&\n                            (authForm.controls['password'].dirty || authForm.controls['password'].touched)\n                        \"\n                        class=\"error\"\n                    >\n                        <div *ngIf=\"authForm.controls['password'].hasError('wrong_password')\">\n                            {{ 'LOGIN.FORM_ERRORS.INVALID_PASS' | translate }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <button class=\"primary big w-100 mb-1\" type=\"submit\">\n                {{ 'LOGIN.BUTTON_NEXT' | translate }}\n                <span *ngIf=\"submitLoading$ | async\" [ngTemplateOutlet]=\"loaderTemp\" class=\"ml-1\"></span>\n            </button>\n\n            <button (click)=\"dropSecureAppData()\" class=\"outline big w-100\" type=\"button\">\n                {{ 'LOGIN.BUTTON_RESET' | translate }}\n                <span *ngIf=\"resetLoading$ | async\" [ngTemplateOutlet]=\"loaderTemp\" class=\"ml-1\"></span>\n            </button>\n        </form>\n    </div>\n\n    <app-synchronization-status></app-synchronization-status>\n</div>\n\n<ng-template #loaderTemp>\n    <zano-loader></zano-loader>\n</ng-template>\n","import { Component, NgZone } from '@angular/core';\nimport { CREATE_NEW_WALLET_HELP_PAGE } from '@parts/data/constants';\nimport { Router } from '@angular/router';\nimport { BackendService } from '@api/services/backend.service';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-no-wallet',\n    templateUrl: './no-wallet.component.html',\n    styleUrls: ['./no-wallet.component.scss'],\n})\nexport class NoWalletComponent {\n    get zanoLogo(): string {\n        const {\n            settings: { isDarkTheme },\n        } = this.variablesService;\n        return isDarkTheme ? 'assets/icons/blue/zano-logo.svg' : 'assets/icons/blue/light-zano-logo.svg';\n    }\n\n    constructor(\n        public variablesService: VariablesService,\n        private router: Router,\n        private backend: BackendService,\n        private ngZone: NgZone,\n        private translate: TranslateService\n    ) {}\n\n    openWallet(): void {\n        this.backend.openFileDialog(\n            this.translate.instant('MAIN.CHOOSE_PATH'),\n            '*',\n            this.variablesService.settings.default_path,\n            (file_status, file_data) => {\n                if (file_status) {\n                    this.variablesService.settings.default_path = file_data.path.substr(0, file_data.path.lastIndexOf('/'));\n                    this.ngZone.run(() => {\n                        this.router\n                            .navigate(['/open'], {\n                                queryParams: { path: file_data.path },\n                            })\n                            .then();\n                    });\n                } else {\n                    console.log(file_data['error_code']);\n                }\n            }\n        );\n    }\n\n    openInBrowser(): void {\n        this.backend.openUrlInBrowser(CREATE_NEW_WALLET_HELP_PAGE);\n    }\n}\n","<div class=\"auth\" fxFlexFill fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <div class=\"auth-card\">\n        <div class=\"logo mb-3\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n            <img [src]=\"zanoLogo\" alt=\"zano-logo\" />\n        </div>\n\n        <h4 class=\"mb-2 text-align-center\">{{ 'MAIN.TITLE' | translate }}</h4>\n\n        <button [routerLink]=\"['/create']\" class=\"primary big w-100 mb-1\" type=\"button\">\n            {{ 'MAIN.BUTTON_NEW_WALLET' | translate }}\n        </button>\n\n        <button (click)=\"openWallet()\" class=\"primary big w-100 mb-1\" type=\"button\">\n            {{ 'MAIN.BUTTON_OPEN_WALLET' | translate }}\n        </button>\n\n        <button [routerLink]=\"['/restore']\" class=\"outline big w-100 mb-2\" type=\"button\">\n            {{ 'MAIN.BUTTON_RESTORE_BACKUP' | translate }}\n        </button>\n\n        <p (click)=\"openInBrowser()\" class=\"text-align-center cursor-pointer\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n            <mat-icon svgIcon=\"zano-question\" class=\"mr-1\"></mat-icon>\n            <span class=\"color-primary\">{{ 'MAIN.HELP' | translate }}</span>\n        </p>\n    </div>\n\n    <app-synchronization-status></app-synchronization-status>\n</div>\n","import { Component, inject, NgZone } from '@angular/core';\nimport { NonNullableFormBuilder, Validators } from '@angular/forms';\nimport { BackendService } from '@api/services/backend.service';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { ModalService } from '@parts/services/modal.service';\nimport { Router } from '@angular/router';\nimport { Wallet } from '@api/models/wallet.model';\nimport { TranslateService } from '@ngx-translate/core';\nimport { REG_EXP_PASSWORD, ZanoValidators } from '@parts/utils/zano-validators';\nimport { WalletsService } from '@parts/services/wallets.service';\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n    selector: 'app-create-wallet',\n    template: `\n        <div class=\"page-container\">\n            <div class=\"toolbar mb-2\">\n                <div class=\"left\">\n                    <app-back-button></app-back-button>\n                    <h1 class=\"ml-2\">{{ 'BREADCRUMBS.ADD_WALLET' | translate }}</h1>\n                </div>\n                <div class=\"right\"></div>\n            </div>\n\n            <div class=\"page-content\">\n                <app-breadcrumbs class=\"mb-2\" [items]=\"breadcrumbItems\"></app-breadcrumbs>\n\n                <div class=\"scrolled-content\">\n                    <form [formGroup]=\"createForm\" class=\"form\">\n                        <div class=\"form__field\">\n                            <label for=\"wallet-name\">{{ 'CREATE_WALLET.NAME' | translate }}</label>\n                            <input\n                                (contextmenu)=\"variablesService.onContextMenu($event)\"\n                                [placeholder]=\"'PLACEHOLDERS.WALLET_NAME_PLACEHOLDER' | translate\"\n                                [readonly]=\"createForm.controls.path.valid\"\n                                class=\"form__field--input\"\n                                formControlName=\"name\"\n                                id=\"wallet-name\"\n                                maxlength=\"{{ variablesService.maxWalletNameLength }}\"\n                                type=\"text\"\n                            />\n                            <div\n                                *ngIf=\"\n                                    createForm.controls.name.invalid && (createForm.controls.name.dirty || createForm.controls.name.touched)\n                                \"\n                                class=\"error\"\n                            >\n                                <div *ngIf=\"createForm.controls.name.hasError('duplicate')\">\n                                    {{ 'CREATE_WALLET.FORM_ERRORS.NAME_DUPLICATE' | translate }}\n                                </div>\n                                <div *ngIf=\"createForm.controls.name.hasError('required')\">\n                                    {{ 'CREATE_WALLET.FORM_ERRORS.NAME_REQUIRED' | translate }}\n                                </div>\n                            </div>\n                            <div *ngIf=\"createForm.controls.name.value.length > variablesService.maxWalletNameLength\" class=\"error\">\n                                {{ 'CREATE_WALLET.FORM_ERRORS.MAX_LENGTH' | translate }}\n                            </div>\n                        </div>\n\n                        <div class=\"form__field\">\n                            <label for=\"wallet-password\">{{ 'CREATE_WALLET.PASS' | translate }}</label>\n                            <input\n                                (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                                [readonly]=\"createForm.controls.path.valid\"\n                                class=\"form__field--input\"\n                                formControlName=\"password\"\n                                id=\"wallet-password\"\n                                placeholder=\"{{ 'PLACEHOLDERS.PLACEHOLDER_NEW' | translate }}\"\n                                type=\"password\"\n                            />\n                            <div *ngIf=\"createForm.controls.password.dirty && createForm.controls.password.invalid\" class=\"error\">\n                                <div *ngIf=\"createForm.controls.password.hasError('pattern')\">\n                                    {{ 'ERRORS.REGEXP_INVALID_PASSWORD' | translate }}\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form__field\">\n                            <label for=\"confirm-wallet-password\">{{ 'CREATE_WALLET.CONFIRM' | translate }}</label>\n                            <input\n                                (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                                [class.invalid]=\"createForm.hasError('mismatch') && createForm.controls.confirm.value.length > 0\"\n                                [readonly]=\"createForm.controls.path.valid\"\n                                class=\"form__field--input\"\n                                formControlName=\"confirm\"\n                                id=\"confirm-wallet-password\"\n                                placeholder=\"{{ 'PLACEHOLDERS.PLACEHOLDER_CONFIRM' | translate }}\"\n                                type=\"password\"\n                            />\n                            <div\n                                *ngIf=\"\n                                    createForm.controls.confirm.dirty &&\n                                    createForm.hasError('mismatch') &&\n                                    createForm.controls.confirm.value.length > 0\n                                \"\n                                class=\"error\"\n                            >\n                                {{ 'CREATE_WALLET.FORM_ERRORS.CONFIRM_NOT_MATCH' | translate }}\n                            </div>\n                        </div>\n\n                        <button *ngIf=\"createForm.controls.path.valid\" class=\"outline big w-100 mb-2\" disabled type=\"button\">\n                            <mat-icon svgIcon=\"zano-check-circle\" class=\"mr-1\"></mat-icon>\n                            {{ savedWalletName }}\n                        </button>\n\n                        <button\n                            *ngIf=\"createForm.controls.path.invalid\"\n                            (click)=\"selectWalletLocation()\"\n                            [disabled]=\"\n                                createForm.controls.name.invalid || createForm.controls.password.invalid || createForm.hasError('mismatch')\n                            \"\n                            class=\"outline big w-100 mb-2\"\n                            type=\"button\"\n                        >\n                            {{ 'CREATE_WALLET.BUTTON_SELECT' | translate }}\n                        </button>\n\n                        <button (click)=\"createWallet()\" [disabled]=\"createForm.invalid\" class=\"primary big w-100\" type=\"button\">\n                            {{ 'CREATE_WALLET.BUTTON_CREATE' | translate }}\n                            <span class=\"ml-1\" *ngIf=\"loading$ | async\" [ngTemplateOutlet]=\"loaderTemp\"></span>\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </div>\n\n        <ng-template #loaderTemp><zano-loader></zano-loader></ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                overflow: hidden;\n            }\n        `,\n    ],\n})\nexport class CreateWalletComponent {\n    variablesService = inject(VariablesService);\n\n    loading$ = new BehaviorSubject(false);\n\n    breadcrumbItems: BreadcrumbItems = [\n        {\n            routerLink: '/add-wallet',\n            title: 'BREADCRUMBS.ADD_WALLET',\n        },\n        {\n            title: 'BREADCRUMBS.CREATE_WALLET',\n        },\n    ];\n\n    walletsService = inject(WalletsService);\n\n    fb = inject(NonNullableFormBuilder);\n\n    createForm = this.fb.group(\n        {\n            name: this.fb.control('', [Validators.required, ZanoValidators.duplicate(this.variablesService.walletNamesForComparisons)]),\n            password: this.fb.control('', Validators.pattern(REG_EXP_PASSWORD)),\n            confirm: this.fb.control(''),\n            path: this.fb.control('', Validators.required),\n        },\n        {\n            validators: [ZanoValidators.formMatch('password', 'confirm')],\n        }\n    );\n\n    private router = inject(Router);\n\n    private backend = inject(BackendService);\n\n    private modalService = inject(ModalService);\n\n    private ngZone = inject(NgZone);\n\n    private translate = inject(TranslateService);\n\n    get savedWalletName(): string {\n        const path = this.createForm.get('path').value;\n        return path.substr(path.lastIndexOf('/') + 1, path.length - 1);\n    }\n\n    createWallet(): void {\n        this.loading$.next(true);\n\n        const { path: selectedPath, password, name } = this.createForm.getRawValue();\n        this.backend.generateWallet(selectedPath, password, (generate_status, generate_data, errorCode) => {\n            if (generate_status) {\n                const { wallet_id } = generate_data;\n                const { path, address, balance, unlocked_balance, mined_total, tracking_hey } = generate_data['wi'];\n                const wallet = new Wallet(wallet_id, name, password, path, address, balance, unlocked_balance, mined_total, tracking_hey);\n                wallet.total_history_item = 0;\n                wallet.pages = new Array(1).fill(1);\n                wallet.totalPages = 1;\n                wallet.currentPage = 1;\n                this.walletsService.addWallet(wallet);\n                this.backend.runWallet(wallet_id, (run_status, run_data) => {\n                    if (run_status) {\n                        this.ngZone.run(() => {\n                            if (this.variablesService.appPass) {\n                                this.backend.storeSecureAppData();\n                            }\n                            this.variablesService.setCurrentWallet(wallet_id);\n                            this.loading$.next(false);\n                            this.router.navigate(['/seed-phrase'], { queryParams: { wallet_id } });\n                        });\n                    } else {\n                        console.log(run_data['error_code']);\n                        this.ngZone.run(() => {\n                            this.loading$.next(false);\n                        });\n                    }\n                });\n            } else {\n                const errorTranslationKey =\n                    errorCode === 'ALREADY_EXISTS' ? 'CREATE_WALLET.ERROR_CANNOT_SAVE_TOP' : 'CREATE_WALLET.ERROR_CANNOT_SAVE_SYSTEM';\n                this.modalService.prepareModal('error', errorTranslationKey);\n\n                this.ngZone.run(() => {\n                    this.loading$.next(false);\n                });\n            }\n        });\n    }\n\n    selectWalletLocation(): void {\n        const caption = this.translate.instant('CREATE_WALLET.TITLE_SAVE');\n        const fileMask = '*';\n        const { default_path } = this.variablesService.settings;\n        this.backend.saveFileDialog(caption, fileMask, default_path, (file_status, file_data) => {\n            if (file_status) {\n                this.ngZone.run(() => {\n                    const { path } = file_data;\n                    this.createForm.get('path').patchValue(path);\n                    this.variablesService.settings.default_path = path.substr(0, path.lastIndexOf('/'));\n                });\n            }\n        });\n    }\n}\n","import { delay, takeUntil } from 'rxjs/operators';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { VariablesService } from '@parts/services/variables.service';\n\n@Component({\n    selector: 'app-deeplink',\n    template: `\n        <ng-container *ngIf=\"deeplink$ | async\">\n            <app-deeplink-modal *ngIf=\"variablesService?.daemon_state === 2 || !variablesService?.sync_started\"></app-deeplink-modal>\n\n            <app-sync-modal *ngIf=\"variablesService?.daemon_state !== 2 || variablesService?.sync_started\"> </app-sync-modal>\n        </ng-container>\n    `,\n    styles: [],\n})\nexport class DeeplinkComponent implements OnInit, OnDestroy {\n    deeplink$ = new BehaviorSubject<string | null>(null);\n\n    private destroy$ = new Subject<void>();\n\n    constructor(public variablesService: VariablesService) {}\n\n    ngOnInit(): void {\n        this.variablesService.deeplink$.pipe(delay(200), takeUntil(this.destroy$)).subscribe({\n            next: (data) => {\n                this.deeplink$.next(data);\n            },\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DeeplinkModalModule } from './modals/deeplink-modal/deeplink-modal.module';\nimport { DeeplinkComponent } from './deeplink.component';\nimport { SyncModalModule } from './modals/sync-modal/sync-modal.module';\n\n@NgModule({\n    declarations: [DeeplinkComponent],\n    imports: [CommonModule, DeeplinkModalModule, SyncModalModule],\n    exports: [DeeplinkComponent, DeeplinkModalModule, SyncModalModule],\n})\nexport class DeeplinkModule {}\n","import { Component, HostBinding, NgZone, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { DeeplinkParams, PushOffer, Wallet } from '@api/models/wallet.model';\nimport { BigNumber } from 'bignumber.js';\nimport { MIXIN } from '@parts/data/constants';\nimport { Subject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { BackendService } from '@api/services/backend.service';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-deeplink-modal',\n    template: `\n        <div class=\"modal deeplink-modal-wrapper\" fxFlex=\"0 1 54rem\" fxLayout=\"column\">\n            <ng-container *ngIf=\"walletsToPay.length > 1 && !secondStep\">\n                <div class=\"content mb-2\" fxFlex=\"0 0 auto\" fxLayout=\"column\">\n                    <div class=\"form__field\" fxFlex=\"0 0 auto\">\n                        <label>Select wallet for action:</label>\n                        <ng-select\n                            [(ngModel)]=\"walletToPayId\"\n                            [clearable]=\"false\"\n                            [items]=\"walletsToPay\"\n                            [searchable]=\"false\"\n                            bindLabel=\"name\"\n                            appendTo=\"body\"\n                            bindValue=\"wallet_id\"\n                        >\n                            <ng-template let-item=\"item\" ng-label-tmp>\n                                {{ item.name }}\n                            </ng-template>\n                            <ng-template let-item=\"item\" ng-option-tmp>\n                                {{ item.name }}\n                            </ng-template>\n                        </ng-select>\n                    </div>\n                </div>\n\n                <div class=\"controls\" fxFlex=\"0 0 auto\" fxLayout=\"row nowrap\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"1rem\">\n                    <button (click)=\"canselAction()\" class=\"outline big w-100\" type=\"button\">\n                        {{ 'EXPORT_HISTORY.CANCEL' | translate }}\n                    </button>\n                    <button (click)=\"nextStep()\" class=\"primary big w-100\" type=\"submit\">Next...</button>\n                </div>\n            </ng-container>\n\n            <ng-container *ngIf=\"secondStep && marketplaceModalShow && actionData.action === 'marketplace_offer_create'\">\n                <h4 class=\"mb-2\" fxFlex=\"0 0 auto\">Creating a marketplace offer</h4>\n                <div class=\"content scrolled-content mb-2\" fxFlex=\"1 1 auto\" fxLayout=\"column\">\n                    <div class=\"table-info\" fxFlex=\"0 0 auto\">\n                        <div class=\"row\">\n                            <div class=\"label max-w-19-rem w-100\">\n                                {{ 'Offer title' | translate }}\n                            </div>\n                            <div class=\"text\">{{ actionData.title }}</div>\n                        </div>\n\n                        <hr class=\"separator\" />\n\n                        <div class=\"row\">\n                            <div class=\"label max-w-19-rem w-100\">\n                                {{ 'Description' | translate }}\n                            </div>\n                            <div class=\"text\">{{ actionData.description }}</div>\n                        </div>\n\n                        <hr class=\"separator\" />\n\n                        <div class=\"row\">\n                            <div class=\"label max-w-19-rem w-100\">\n                                {{ 'Category' | translate }}\n                            </div>\n                            <div class=\"text\">{{ actionData.category }}</div>\n                        </div>\n\n                        <hr class=\"separator\" />\n\n                        <div class=\"row\">\n                            <div class=\"label max-w-19-rem w-100\">\n                                {{ 'Price' | translate }}\n                            </div>\n                            <div class=\"text\">\n                                {{ actionData.price }}\n                                {{ this.variablesService.defaultTicker }}\n                            </div>\n                        </div>\n\n                        <hr class=\"separator\" />\n\n                        <div class=\"row\">\n                            <div class=\"label max-w-19-rem w-100\">\n                                {{ 'Preview url' | translate }}\n                            </div>\n                            <div class=\"text\">{{ actionData.url || actionData.img_url }}</div>\n                        </div>\n\n                        <hr class=\"separator\" />\n\n                        <div class=\"row\">\n                            <div class=\"label max-w-19-rem w-100\">\n                                {{ 'Contacts' | translate }}\n                            </div>\n                            <div class=\"text\">{{ actionData.contact }}</div>\n                        </div>\n\n                        <hr class=\"separator\" />\n\n                        <div class=\"row\">\n                            <div class=\"label max-w-19-rem w-100\">\n                                {{ 'Comments' | translate }}\n                            </div>\n                            <div class=\"text\">\n                                {{ actionData.comment || actionData.comments }}\n                            </div>\n                        </div>\n\n                        <hr class=\"separator\" />\n\n                        <!--<div class=\"row\">-->\n                        <!--    <div class=\"label max-w-19-rem w-100\">-->\n                        <!--        {{ 'Mixins' | translate }}-->\n                        <!--    </div>-->\n                        <!--    <div class=\"text\">{{ actionData.mixins || defaultMixin }}</div>-->\n                        <!--</div>-->\n\n                        <!--<hr class=\"separator\" />-->\n\n                        <div class=\"row\">\n                            <div class=\"label max-w-19-rem w-100\">\n                                {{ 'Transaction fee' | translate }}\n                            </div>\n                            <div class=\"text\">\n                                {{ $any(actionData.price) * $any(actionData.fee || this.variablesService.default_fee) }}\n                                {{ this.variablesService.defaultTicker }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"controls\" fxFlex=\"0 0 auto\" fxLayout=\"row nowrap\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"1rem\">\n                    <button (click)=\"canselAction()\" class=\"outline big w-100\" type=\"button\">\n                        {{ 'EXPORT_HISTORY.CANCEL' | translate }}\n                    </button>\n                    <button (click)=\"marketplaceSend()\" class=\"primary big w-100\" type=\"submit\">Sign & Send...</button>\n                </div>\n            </ng-container>\n\n            <ng-container *ngIf=\"marketplaceConfirmHash\">\n                <h4 class=\"mb-2\" fxFlex=\"0 0 auto\">Operation successful</h4>\n\n                <div class=\"content scrolled-content mb-2\" fxFlex=\"1 1 auto\" fxLayout=\"column\">\n                    <div class=\"table-info\" fxFlex=\"0 0 auto\">\n                        <div class=\"row\">\n                            <div class=\"label max-w-19-rem w-100\">\n                                {{ 'Operation hash' | translate }}\n                            </div>\n                            <div\n                                (contextmenu)=\"variablesService.onContextMenuOnlyCopy($event, marketplaceConfirmHash)\"\n                                class=\"text\"\n                                fxLayout=\"row\"\n                                fxLayoutAlign=\"start center\"\n                            >\n                                {{ marketplaceConfirmHash }}\n                                <mat-icon\n                                    (click)=\"copyHash()\"\n                                    [svgIcon]=\"copyAnimation ? 'zano-check' : 'zano-copy'\"\n                                    class=\"ml-1\"\n                                ></mat-icon>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"controls\" fxFlex=\"0 0 auto\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n                    <button (click)=\"canselAction()\" class=\"primary big w-100\" type=\"button\">Close</button>\n                </div>\n            </ng-container>\n\n            <ng-container *ngIf=\"!walletsToPay.length\">\n                <h4 class=\"mb-2\" fxFlex=\"0 0 auto\">Your wallets have not loaded yet. Try this action a little later.</h4>\n\n                <div class=\"controls\" fxFlex=\"0 0 auto\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n                    <button (click)=\"canselAction()\" class=\"primary big w-100\" type=\"button\">Ok</button>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    styleUrls: ['./deeplink-modal.component.scss'],\n})\nexport class DeeplinkModalComponent implements OnInit, OnDestroy {\n    @HostBinding('class.modal-overlay') modalOverlay = true;\n\n    secondStep = false;\n\n    walletToPayId = 0;\n\n    nextStepInterval;\n\n    marketplaceModalShow = true;\n\n    copyAnimation = false;\n\n    marketplaceConfirmHash: any = null;\n\n    actionData: DeeplinkParams = {};\n\n    defaultMixin = MIXIN;\n\n    walletsToPay: Array<Wallet> = [];\n\n    private destroy$ = new Subject<void>();\n\n    constructor(\n        public variablesService: VariablesService,\n        private _router: Router,\n        private backend: BackendService,\n        private ngZone: NgZone,\n        private renderer: Renderer2\n    ) {\n        this.walletsToPay = this.variablesService.wallets.filter(\n            (wallet) => !wallet.is_watch_only || !wallet.is_auditable || wallet.loaded\n        );\n    }\n\n    ngOnInit(): void {\n        this.renderer.addClass(document.body, 'no-scroll');\n\n        this.variablesService.deeplink$.pipe(takeUntil(this.destroy$)).subscribe({\n            next: (deeplink) => {\n                this.actionData = {};\n\n                if (deeplink) {\n                    if (this.walletsToPay.length === 0) {\n                        this.canselAction();\n                        return;\n                    }\n                    this.actionData = this.parseDeeplink(deeplink);\n                    if (this.walletsToPay.length === 1) {\n                        this.walletToPayId = this.walletsToPay[0].wallet_id;\n                        const { daemon_state, sync_started } = this.variablesService;\n\n                        if (daemon_state === 2 && sync_started === false) {\n                            this.nextStep();\n                        } else {\n                            this.nextStepInterval = setInterval(() => {\n                                if (daemon_state === 2 && sync_started === false) {\n                                    this.nextStep();\n                                    clearInterval(this.nextStepInterval);\n                                }\n                            }, 1500);\n                        }\n                    }\n                }\n            },\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next();\n        this.variablesService.deeplink$.next(null);\n        this.renderer.removeClass(document.body, 'no-scroll');\n    }\n\n    parseDeeplink(deeplink): DeeplinkParams {\n        const quotesRex = new RegExp(/'|\"|”|%E2%80%9D|%22/g);\n        const spaceSymbolRex = new RegExp(/%20/g);\n        const newObj = {};\n\n        const newString = deeplink.substr(5); // delete zano:;\n        newString.split('&').forEach((str) => {\n            const [key, value] = str.split('=');\n            newObj[key] = value.replace(quotesRex, '').replace(spaceSymbolRex, ' ').trim();\n        });\n        return newObj;\n    }\n\n    canselAction(): void {\n        this.variablesService.deeplink$.next(null);\n        this.variablesService.sendActionData$.next({});\n        this.actionData = {};\n        this.secondStep = false;\n    }\n\n    marketplaceSend(): void {\n        const offerObject: PushOffer = {\n            wallet_id: this.walletToPayId,\n            od: {\n                ap: this.actionData.price || '',\n                at: '1',\n                cat: this.actionData.category || '',\n                cnt: this.actionData.contact || '',\n                com: this.actionData.comment || this.actionData.comments || '',\n                do: this.actionData.description || '',\n                et: 10,\n                fee: new BigNumber('' + (+this.actionData.fee || +this.variablesService.default_fee) * 1000000000000),\n                lci: '',\n                lco: 'World Wide',\n                ot: 1,\n                pt: 'Credit cards, BTC, ZANO, ETH',\n                t: this.actionData.title || '',\n                url: this.actionData.url || this.actionData.img_url || '',\n            },\n        };\n        this.backend.push_offer(offerObject, (status, data) => {\n            this.ngZone.run(() => {\n                if (data.success) {\n                    this.marketplaceModalShow = false;\n                    this.marketplaceConfirmHash = data.tx_hash;\n                } else {\n                    this.canselAction();\n                }\n            });\n        });\n    }\n\n    copyHash(): void {\n        this.backend.setClipboard(this.marketplaceConfirmHash);\n        this.copyAnimation = true;\n        setTimeout(() => (this.copyAnimation = false), 2000);\n    }\n\n    nextStep(): void {\n        if (this.actionData.action === 'send') {\n            this.variablesService.sendActionData$.next(this.actionData);\n            this.variablesService.deeplink$.next(null);\n            this.variablesService.setCurrentWallet(this.walletToPayId);\n            this._router.navigate(['/wallet/send']).then();\n            this.secondStep = false;\n            // } else if (this.actionData.action === 'escrow') {\n            //     this.variablesService.sendActionData$.next(this.actionData);\n            //     this.variablesService.deeplink$.next(null);\n            //     this.variablesService.setCurrentWallet(this.walletToPayId);\n            //     this._router.navigate(['/wallet/contracts/purchase']).then();\n            //     this.secondStep = false;\n        } else {\n            this.secondStep = true;\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DeeplinkModalComponent } from './deeplink-modal.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { FormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n    declarations: [DeeplinkModalComponent],\n    imports: [CommonModule, NgSelectModule, FormsModule, FlexLayoutModule, TranslateModule, MatIconModule],\n    exports: [DeeplinkModalComponent],\n})\nexport class DeeplinkModalModule {}\n","import { Component, HostBinding, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { VariablesService } from '@parts/services/variables.service';\n\n@Component({\n    selector: 'app-sync-modal',\n    template: `\n        <div class=\"modal sync-modal-wrapper\">\n            <div class=\"content\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n                <h3 class=\"mb-2\">This action is not available during synchronization...</h3>\n                <button (click)=\"canselAction()\" class=\"primary big max-w-19-rem w-100\" type=\"button\">OK</button>\n            </div>\n        </div>\n    `,\n    styleUrls: ['./sync-modal.component.scss'],\n})\nexport class SyncModalComponent implements OnInit, OnDestroy {\n    @HostBinding('class.modal-overlay') modalOverlay = true;\n\n    constructor(private renderer: Renderer2, public variablesService: VariablesService) {}\n\n    ngOnInit(): void {\n        this.renderer.addClass(document.body, 'no-scroll');\n    }\n\n    ngOnDestroy(): void {\n        this.renderer.removeClass(document.body, 'no-scroll');\n    }\n\n    canselAction(): void {\n        this.variablesService.deeplink$.next(null);\n        this.variablesService.sendActionData$.next({});\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SyncModalComponent } from './sync-modal.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n    declarations: [SyncModalComponent],\n    imports: [CommonModule, FlexLayoutModule],\n    exports: [SyncModalComponent],\n})\nexport class SyncModalModule {}\n","import { Component, NgZone, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BackendService } from '@api/services/backend.service';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { ModalService } from '@parts/services/modal.service';\nimport { Wallet } from '@api/models/wallet.model';\nimport { BigNumber } from 'bignumber.js';\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\nimport { AliasInfo } from '@api/models/alias.model';\n\n@Component({\n    selector: 'app-edit-alias',\n    template: `\n        <div class=\"page-container\">\n            <div class=\"toolbar mb-2\">\n                <div class=\"left\">\n                    <app-back-button></app-back-button>\n                    <h1 class=\"ml-2\">{{ 'BREADCRUMBS.EDIT_ALIAS' | translate }}</h1>\n                </div>\n                <div class=\"right\"></div>\n            </div>\n\n            <div class=\"page-content\">\n                <app-breadcrumbs class=\"mb-2\" [items]=\"breadcrumbItems\"></app-breadcrumbs>\n\n                <div class=\"scrolled-content\">\n                    <form class=\"form\">\n                        <div class=\"form__field\">\n                            <label for=\"alias-name\">\n                                {{ 'EDIT_ALIAS.NAME.LABEL' | translate }}\n                            </label>\n                            <input\n                                [value]=\"'@' + alias_info.alias\"\n                                class=\"form__field--input\"\n                                id=\"alias-name\"\n                                placeholder=\"{{ 'EDIT_ALIAS.NAME.PLACEHOLDER' | translate }}\"\n                                readonly\n                                type=\"text\"\n                            />\n                        </div>\n\n                        <div class=\"form__field textarea\">\n                            <label for=\"alias-comment\">\n                                {{ 'EDIT_ALIAS.COMMENT.LABEL' | translate }}\n                            </label>\n                            <textarea\n                                (contextmenu)=\"variablesService.onContextMenu($event)\"\n                                [(ngModel)]=\"alias_info.comment\"\n                                [maxlength]=\"variablesService.maxCommentLength + ''\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                id=\"alias-comment\"\n                                placeholder=\"{{ 'EDIT_ALIAS.COMMENT.PLACEHOLDER' | translate }}\"\n                            >\n                            </textarea>\n                            <div *ngIf=\"alias_info.comment.length > 0 && notEnoughMoney\" class=\"error\">\n                                {{ 'EDIT_ALIAS.FORM_ERRORS.NO_MONEY' | translate }}\n                            </div>\n                            <div *ngIf=\"alias_info.comment.length >= variablesService.maxCommentLength\" class=\"error\">\n                                {{ 'EDIT_ALIAS.FORM_ERRORS.MAX_LENGTH' | translate }}\n                            </div>\n                        </div>\n\n                        <div class=\"alias-cost mb-2\">\n                            {{\n                                'EDIT_ALIAS.COST'\n                                    | translate\n                                        : {\n                                              value: variablesService.default_fee,\n                                              currency: variablesService.defaultTicker\n                                          }\n                            }}\n                        </div>\n\n                        <button\n                            (click)=\"updateAlias()\"\n                            [disabled]=\"\n                                notEnoughMoney ||\n                                oldAliasComment === alias_info.comment ||\n                                alias_info.comment.length > variablesService.maxCommentLength\n                            \"\n                            class=\"primary big w-100\"\n                            type=\"button\"\n                        >\n                            {{ 'EDIT_ALIAS.BUTTON_EDIT' | translate }}\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                overflow: hidden;\n            }\n        `,\n    ],\n})\nexport class EditAliasComponent implements OnInit {\n    wallet: Wallet;\n\n    alias_info: AliasInfo;\n\n    breadcrumbItems: BreadcrumbItems = [\n        {\n            routerLink: '/wallet/history',\n            title: this.variablesService.current_wallet.name,\n        },\n        {\n            title: 'BREADCRUMBS.EDIT_ALIAS',\n        },\n    ];\n\n    oldAliasComment: string;\n\n    notEnoughMoney: boolean;\n\n    requestProcessing = false;\n\n    historyState: { alias_info?: AliasInfo; navigationId?: number };\n\n    constructor(\n        public variablesService: VariablesService,\n        private router: Router,\n        private backend: BackendService,\n        private modalService: ModalService,\n        private ngZone: NgZone\n    ) {\n        this.historyState = history.state || {};\n    }\n\n    ngOnInit(): void {\n        this.wallet = this.variablesService.current_wallet;\n        this.alias_info = { ...(this.historyState.alias_info ? this.historyState.alias_info : this.wallet.alias_info) };\n        this.oldAliasComment = this.alias_info.comment;\n        const balance = new BigNumber(this.wallet.getBalanceByTicker('ZANO')?.unlocked || 0);\n        this.notEnoughMoney = balance.isLessThan(this.variablesService.default_fee_big);\n    }\n\n    updateAlias(): void {\n        if (\n            this.requestProcessing ||\n            this.notEnoughMoney ||\n            this.oldAliasComment === this.alias_info.comment ||\n            this.alias_info.comment.length > this.variablesService.maxCommentLength\n        ) {\n            return;\n        }\n        this.requestProcessing = true;\n        this.backend.updateAlias(this.wallet.wallet_id, this.alias_info, this.variablesService.default_fee, (status) => {\n            if (status) {\n                this.modalService.prepareModal('success', '');\n                this.wallet.alias_info['comment'] = this.alias_info.comment;\n                this.ngZone.run(() => {\n                    this.router.navigate(['/wallet/']);\n                });\n            }\n            this.requestProcessing = false;\n        });\n    }\n}\n","import { Component, NgZone } from '@angular/core';\nimport { BackendService } from '@api/services/backend.service';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { Contact } from '@api/models/contact.model';\nimport { ModalService } from '@parts/services/modal.service';\nimport { Papa } from 'ngx-papaparse';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-export-import',\n    template: `\n        <div class=\"page-container\">\n            <div class=\"toolbar mb-2\">\n                <div class=\"left\">\n                    <app-back-button></app-back-button>\n                    <h1 class=\"ml-2\">{{ 'CONTACTS.IMPORT_EXPORT' | translate }}</h1>\n                </div>\n                <div class=\"right\"></div>\n            </div>\n\n            <div class=\"page-content\">\n                <div class=\"scrolled-content\">\n                    <div class=\"controls flex\">\n                        <button (click)=\"import()\" class=\"primary big max-w-19-rem w-100 mr-1\" type=\"button\">\n                            {{ 'CONTACTS.IMPORT' | translate }}\n                        </button>\n                        <button (click)=\"export()\" class=\"primary big max-w-19-rem w-100\" type=\"button\">\n                            {{ 'CONTACTS.EXPORT' | translate }}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class ExportImportComponent {\n    constructor(\n        private variablesService: VariablesService,\n        private backend: BackendService,\n        private modalService: ModalService,\n        private papa: Papa,\n        private translate: TranslateService,\n        private router: Router,\n        private ngZone: NgZone\n    ) {}\n\n    import(): void {\n        this.backend.openFileDialog('', '*', this.variablesService.settings.default_path, (file_status, file_data) => {\n            if (file_status) {\n                this.variablesService.settings.default_path = file_data.path.substr(0, file_data.path.lastIndexOf('/'));\n                if (this.isValid(file_data.path)) {\n                    this.backend.loadFile(file_data.path, (status, data) => {\n                        if (!status) {\n                            this.modalService.prepareModal('error', 'CONTACTS.ERROR_IMPORT_EMPTY');\n                        } else {\n                            const options = {\n                                header: true,\n                            };\n                            const elements = this.papa.parse(data, options);\n                            const isArray = Array.isArray(elements.data);\n                            if (isArray && elements.data.length !== 0 && elements.errors.length === 0) {\n                                if (this.variablesService.contacts.length === 0) {\n                                    elements.data.forEach((element) => {\n                                        this.variablesService.contacts.push(element);\n                                    });\n                                } else {\n                                    elements.data.forEach((element) => {\n                                        const indexName = this.variablesService.contacts.findIndex(\n                                            (contact) => contact.name === element.name\n                                        );\n                                        const indexAddress = this.variablesService.contacts.findIndex(\n                                            (contact) => contact.address === element.address\n                                        );\n                                        if (indexAddress === -1 && indexName === -1) {\n                                            this.variablesService.contacts.push(element);\n                                        }\n                                        if (indexName !== -1 && indexAddress === -1) {\n                                            this.variablesService.contacts.push({\n                                                name: `${(element.name as string) || '---'} ${\n                                                    this.translate.instant('CONTACTS.COPY') as string\n                                                }`,\n                                                address: element.address,\n                                                notes: element.notes,\n                                            });\n                                        }\n                                    });\n                                }\n                                this.ngZone.run(() => {\n                                    this.router.navigate(['/contacts']);\n                                });\n                            }\n                            if (elements.errors.length > 0) {\n                                this.modalService.prepareModal('error', 'CONTACTS.ERROR_IMPORT');\n                                console.log(elements.errors);\n                            }\n                        }\n                    });\n                } else {\n                    this.modalService.prepareModal('error', 'CONTACTS.ERROR_TYPE_FILE');\n                }\n            }\n        });\n    }\n\n    export(): void {\n        const contacts: Array<Contact> = [];\n        this.variablesService.contacts.forEach((contact) => {\n            delete contact.alias;\n            contacts.push(contact);\n        });\n\n        this.backend.saveFileDialog('', '*', this.variablesService.settings.default_path, (file_status, file_data) => {\n            if (this.variablesService.contacts.length === 0 && !(file_data.error_code === 'CANCELED')) {\n                this.modalService.prepareModal('error', 'CONTACTS.ERROR_EMPTY_LIST');\n            }\n            const path = this.isValid(file_data.path) ? file_data.path : `${(file_data.path as string) || 'base-name'}.csv`;\n            if (file_status && this.isValid(path) && this.variablesService.contacts.length > 0) {\n                this.backend.storeFile(path, this.papa.unparse(contacts));\n            }\n            if (!(file_data.error_code === 'CANCELED') && !this.isValid(path)) {\n                this.modalService.prepareModal('error', 'CONTACTS.ERROR_EXPORT');\n            }\n        });\n    }\n\n    isValid(file): boolean {\n        return file.endsWith('.csv');\n    }\n}\n","import { Component, inject, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport { NonNullableFormBuilder, Validators } from '@angular/forms';\nimport { BackendService } from '@api/services/backend.service';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { ModalService } from '@parts/services/modal.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Wallet } from '@api/models/wallet.model';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { ZanoValidators } from '@parts/utils/zano-validators';\nimport { WalletsService } from '@parts/services/wallets.service';\nimport { notFileZanoWallet, wrongPassword } from '@parts/utils/zano-errors';\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\n\n@Component({\n    selector: 'app-open-wallet',\n    template: `\n        <div class=\"page-container\">\n            <div class=\"toolbar mb-2\">\n                <div class=\"left\">\n                    <app-back-button></app-back-button>\n                    <h1 class=\"ml-2\">{{ 'BREADCRUMBS.OPEN_WALLET' | translate }}</h1>\n                </div>\n                <div class=\"right\"></div>\n            </div>\n\n            <div class=\"page-content\">\n                <app-breadcrumbs class=\"mb-2\" [items]=\"breadcrumbItems\"></app-breadcrumbs>\n\n                <div class=\"scrolled-content\">\n                    <form [formGroup]=\"openWalletForm\" (ngSubmit)=\"openWallet()\" class=\"form\">\n                        <div class=\"form__field\">\n                            <label for=\"wallet-name\">\n                                {{ 'OPEN_WALLET.NAME' | translate }}\n                                <span class=\"color-red\">*</span>\n                            </label>\n                            <input\n                                (contextmenu)=\"variablesService.onContextMenu($event)\"\n                                [maxLength]=\"variablesService.maxWalletNameLength\"\n                                [placeholder]=\"'PLACEHOLDERS.WALLET_NAME_PLACEHOLDER' | translate\"\n                                class=\"form__field--input\"\n                                formControlName=\"name\"\n                                id=\"wallet-name\"\n                                type=\"text\"\n                            />\n                            <div\n                                *ngIf=\"\n                                    openWalletForm.controls.name.invalid &&\n                                    (openWalletForm.controls.name.dirty || openWalletForm.controls.name.touched)\n                                \"\n                                class=\"error\"\n                            >\n                                <div *ngIf=\"openWalletForm.controls.name.errors['duplicate']\">\n                                    {{ 'OPEN_WALLET.FORM_ERRORS.NAME_DUPLICATE' | translate }}\n                                </div>\n                                <div *ngIf=\"openWalletForm.controls.name.errors['required']\">\n                                    {{ 'OPEN_WALLET.FORM_ERRORS.NAME_REQUIRED' | translate }}\n                                </div>\n                                <div *ngIf=\"openWalletForm.controls.name.errors['maxLength']\">\n                                    {{ 'OPEN_WALLET.FORM_ERRORS.MAX_LENGTH' | translate }}\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form__field\">\n                            <label for=\"wallet-password\">{{ 'OPEN_WALLET.PASS' | translate }}</label>\n                            <input\n                                (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                                class=\"form__field--input\"\n                                formControlName=\"password\"\n                                id=\"wallet-password\"\n                                placeholder=\"{{ 'PLACEHOLDERS.PASS_PLACEHOLDER' | translate }}\"\n                                type=\"password\"\n                            />\n                            <div\n                                *ngIf=\"\n                                    openWalletForm.controls.password.invalid &&\n                                    (openWalletForm.controls.password.dirty || openWalletForm.controls.password.touched)\n                                \"\n                                class=\"error\"\n                            >\n                                <div *ngIf=\"openWalletForm.controls.password.hasError('wrongPassword')\">\n                                    {{ openWalletForm.controls.password.errors['wrongPassword'].errorText | translate }}\n                                </div>\n                            </div>\n                        </div>\n                        <button [disabled]=\"openWalletForm.invalid\" class=\"primary big max-w-19-rem w-100\" type=\"submit\">\n                            {{ 'OPEN_WALLET.BUTTON' | translate }}\n                            <span class=\"ml-1\" *ngIf=\"loading$ | async\" [ngTemplateOutlet]=\"loaderTemp\"></span>\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </div>\n\n        <ng-template #loaderTemp><zano-loader></zano-loader></ng-template>\n    `,\n})\nexport class OpenWalletComponent implements OnInit, OnDestroy {\n    loading$ = new BehaviorSubject(false);\n\n    fb = inject(NonNullableFormBuilder);\n\n    breadcrumbItems: BreadcrumbItems = [\n        {\n            routerLink: '/add-wallet',\n            title: 'BREADCRUMBS.ADD_WALLET',\n        },\n        {\n            title: 'BREADCRUMBS.OPEN_WALLET',\n        },\n    ];\n\n    openWalletForm = this.fb.group({\n        name: this.fb.control('', [\n            Validators.required,\n            Validators.maxLength(this.variablesService.maxWalletNameLength),\n            ZanoValidators.duplicate(this.variablesService.walletNamesForComparisons),\n        ]),\n        password: this.fb.control(''),\n        filePath: this.fb.control('', Validators.required),\n    });\n\n    private destroy$ = new Subject<void>();\n\n    constructor(\n        public walletsService: WalletsService,\n        public variablesService: VariablesService,\n        private route: ActivatedRoute,\n        private router: Router,\n        private backend: BackendService,\n        private modalService: ModalService,\n        private ngZone: NgZone,\n        private translate: TranslateService\n    ) {}\n\n    ngOnInit(): void {\n        this.route.queryParams.pipe(takeUntil(this.destroy$)).subscribe({\n            next: (params) => {\n                if (!params.path) {\n                    return;\n                }\n\n                this.openWalletForm.controls.filePath.patchValue(params.path);\n\n                let filename = '';\n                if (params.path.lastIndexOf('.') === -1) {\n                    filename = params.path.substr(params.path.lastIndexOf('/') + 1);\n                } else {\n                    filename = params.path.substr(\n                        params.path.lastIndexOf('/') + 1,\n                        params.path.lastIndexOf('.') - 1 - params.path.lastIndexOf('/')\n                    );\n                }\n                if (filename.length > 25) {\n                    filename = filename.slice(0, 25);\n                }\n                this.openWalletForm.controls.name.patchValue(filename);\n                this.openWalletForm.controls.name.markAsTouched();\n            },\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    openWallet(): void {\n        this.loading$.next(true);\n\n        if (this.openWalletForm.valid) {\n            const { filePath, password, name } = this.openWalletForm.getRawValue();\n            const { count: txs_to_return } = this.variablesService;\n            this.backend.openWallet(\n                filePath,\n                password,\n                txs_to_return,\n                false,\n                (openStatus, openData, errorCode: 'WRONG_PASSWORD' | 'FILE_NOT_FOUND' | 'INVALID_FILE' | 'ALREADY_EXISTS' | string) => {\n                    console.log('openData', openData);\n                    if (errorCode === 'WRONG_PASSWORD') {\n                        this.ngZone.run(() => {\n                            this.openWalletForm.controls.password.setErrors({\n                                wrongPassword,\n                            });\n                            this.loading$.next(false);\n                        });\n                        return;\n                    }\n\n                    let errorText = errorCode;\n\n                    if (errorCode === 'FILE_NOT_FOUND') {\n                        errorText = this.translate.instant('OPEN_WALLET.FILE_NOT_FOUND1');\n                        errorText += ':<br>' + filePath;\n                        errorText += this.translate.instant('OPEN_WALLET.FILE_NOT_FOUND2');\n                    }\n\n                    if (errorCode === 'INVALID_FILE') {\n                        errorText = this.translate.instant(notFileZanoWallet.errorText);\n                    }\n\n                    if (['INVALID_FILE', 'FILE_NOT_FOUND'].includes(errorCode)) {\n                        this.modalService.prepareModal('error', errorText);\n                        this.ngZone.run(() => {\n                            this.loading$.next(false);\n                        });\n                        return;\n                    }\n\n                    if (openStatus || errorCode === 'FILE_RESTORED') {\n                        let exists = false;\n                        this.variablesService.wallets.forEach((wallet) => {\n                            if (wallet.address === openData['wi'].address) {\n                                exists = true;\n                            }\n                        });\n\n                        if (exists) {\n                            this.modalService.prepareModal('error', 'OPEN_WALLET.WITH_ADDRESS_ALREADY_OPEN');\n                            this.backend.closeWallet(openData.wallet_id, () => {\n                                this.ngZone.run(() => {\n                                    this.loading$.next(false);\n                                    this.router.navigate(['/']);\n                                });\n                            });\n                        } else {\n                            const new_wallet = new Wallet(\n                                openData.wallet_id,\n                                name,\n                                password,\n                                openData['wi'].path,\n                                openData['wi'].address,\n                                openData['wi'].balance,\n                                openData['wi'].unlocked_balance,\n                                openData['wi'].mined_total,\n                                openData['wi'].tracking_hey\n                            );\n                            new_wallet.currentPage = 1;\n                            new_wallet.open_from_exist = true;\n                            new_wallet.exclude_mining_txs = false;\n                            new_wallet.is_auditable = openData['wi'].is_auditable;\n                            new_wallet.is_watch_only = openData['wi'].is_watch_only;\n                            if (openData.recent_history && openData.recent_history.history) {\n                                new_wallet.total_history_item = openData.recent_history.total_history_items;\n                                new_wallet.totalPages = Math.ceil(\n                                    openData.recent_history.total_history_items / this.variablesService.count\n                                );\n                                new_wallet.totalPages > this.variablesService.maxPages\n                                    ? (new_wallet.pages = new Array(5).fill(1).map((value, index) => value + index))\n                                    : (new_wallet.pages = new Array(new_wallet.totalPages).fill(1).map((value, index) => value + index));\n                                new_wallet.prepareHistory(openData.recent_history.history);\n                            } else {\n                                new_wallet.total_history_item = 0;\n                                new_wallet.pages = new Array(1).fill(1);\n                                new_wallet.totalPages = 1;\n                            }\n                            this.walletsService.addWallet(new_wallet);\n                            this.backend.runWallet(openData.wallet_id, (run_status, run_data) => {\n                                if (run_status) {\n                                    if (this.variablesService.appPass) {\n                                        this.backend.storeSecureAppData();\n                                    }\n                                    this.ngZone.run(() => {\n                                        this.variablesService.setCurrentWallet(openData.wallet_id);\n                                        this.router.navigate(['/wallet/']);\n                                        this.loading$.next(false);\n                                    });\n                                } else {\n                                    console.log(run_data['error_code']);\n                                    this.ngZone.run(() => {\n                                        this.loading$.next(false);\n                                    });\n                                }\n                            });\n                        }\n                    }\n                }\n            );\n        } else {\n            this.loading$.next(false);\n        }\n    }\n}\n","import { RouterModule, Routes } from '@angular/router';\nimport { paths } from './paths';\nimport { WithSidebarLayoutComponent } from '../layouts/with-sidebar-layout/with-sidebar-layout.component';\nimport { AddWalletComponent } from './add-wallet/add-wallet.component';\nimport { WalletDetailsComponent } from './wallet-details/wallet-details.component';\nimport { FullLayoutComponent } from '../layouts/full-layout/full-layout.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { CreateWalletComponent } from './create-wallet/create-wallet.component';\nimport { OpenWalletComponent } from './open-wallet/open-wallet.component';\nimport { RestoreWalletComponent } from './restore-wallet/restore-wallet.component';\nimport { SeedPhraseComponent } from './seed-phrase/seed-phrase.component';\nimport { AssignAliasComponent } from './assign-alias/assign-alias.component';\nimport { EditAliasComponent } from './edit-alias/edit-alias.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { DeeplinkComponent } from './deeplink/deeplink.component';\nimport { NgModule } from '@angular/core';\nimport { ExportImportComponent } from './export-import/export-import.component';\nimport { TransferAliasComponent } from './transfer-alias/transfer-alias.component';\n\nconst routes: Routes = [\n    {\n        path: paths.addWallet,\n        component: WithSidebarLayoutComponent,\n        children: [\n            {\n                path: '',\n                component: AddWalletComponent,\n            },\n        ],\n    },\n    {\n        path: paths.details,\n        component: WithSidebarLayoutComponent,\n        children: [\n            {\n                path: '',\n                component: WalletDetailsComponent,\n            },\n        ],\n    },\n    {\n        path: paths.login,\n        component: FullLayoutComponent,\n        children: [\n            {\n                path: '',\n                component: LoginComponent,\n            },\n        ],\n    },\n    {\n        path: paths.create,\n        component: WithSidebarLayoutComponent,\n        children: [\n            {\n                path: '',\n                component: CreateWalletComponent,\n            },\n        ],\n    },\n    {\n        path: paths.open,\n        component: WithSidebarLayoutComponent,\n        children: [\n            {\n                path: '',\n                component: OpenWalletComponent,\n            },\n        ],\n    },\n    {\n        path: paths.restore,\n        component: WithSidebarLayoutComponent,\n        children: [\n            {\n                path: '',\n                component: RestoreWalletComponent,\n            },\n        ],\n    },\n    {\n        path: paths.seedPhrase,\n        component: WithSidebarLayoutComponent,\n        children: [\n            {\n                path: '',\n                component: SeedPhraseComponent,\n            },\n        ],\n    },\n    {\n        path: paths.assignAlias,\n        component: WithSidebarLayoutComponent,\n        children: [\n            {\n                path: '',\n                component: AssignAliasComponent,\n            },\n        ],\n    },\n    {\n        path: paths.editAlias,\n        component: WithSidebarLayoutComponent,\n        children: [\n            {\n                path: '',\n                component: EditAliasComponent,\n            },\n        ],\n    },\n    {\n        path: paths.transferAlias,\n        component: WithSidebarLayoutComponent,\n        children: [\n            {\n                path: '',\n                component: TransferAliasComponent,\n            },\n        ],\n    },\n    {\n        path: paths.settings,\n        component: WithSidebarLayoutComponent,\n        children: [\n            {\n                path: '',\n                component: SettingsComponent,\n            },\n        ],\n    },\n    {\n        path: paths.import,\n        component: WithSidebarLayoutComponent,\n        children: [\n            {\n                path: '',\n                component: ExportImportComponent,\n            },\n        ],\n    },\n    {\n        path: paths.deeplink,\n        component: WithSidebarLayoutComponent,\n        children: [\n            {\n                path: '',\n                component: DeeplinkComponent,\n            },\n        ],\n    },\n    {\n        path: '',\n        redirectTo: paths.addWallet,\n        pathMatch: 'full',\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class PagesRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthModule } from './auth/auth.module';\nimport { WalletModule } from './wallet/wallet.module';\nimport { PagesRoutingModule } from './pages-routing.module';\nimport { LoginComponent } from './auth/login/login.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { AddWalletComponent } from './add-wallet/add-wallet.component';\nimport { CreateWalletComponent } from './create-wallet/create-wallet.component';\nimport { OpenWalletComponent } from './open-wallet/open-wallet.component';\nimport { RestoreWalletComponent } from './restore-wallet/restore-wallet.component';\nimport { SeedPhraseComponent } from './seed-phrase/seed-phrase.component';\nimport { AssignAliasComponent } from './assign-alias/assign-alias.component';\nimport { EditAliasComponent } from './edit-alias/edit-alias.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { DefaultImgModule, DisablePriceFetchModule } from '@parts/directives';\nimport { TooltipModule } from '@parts/directives/tooltip/tooltip.module';\nimport { ConfirmModalModule } from '@parts/modals/confirm-modal/confirm-modal.module';\nimport { DeeplinkModule } from './deeplink/deeplink.module';\nimport { FullLayoutModule } from '../layouts/full-layout/full-layout.module';\nimport { WithSidebarLayoutModule } from '../layouts/with-sidebar-layout/with-sidebar-layout.module';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { TransferAliasComponent } from './transfer-alias/transfer-alias.component';\nimport {\n    ContractStatusMessagesPipeModule,\n    ContractTimeLeftPipeModule,\n    HistoryTypeMessagesPipeModule,\n    IntToMoneyPipeModule,\n    IsAvailableAliasNamePipeModule,\n    MoneyToIntPipeModule,\n    SafeHtmlPipeModule,\n    ShortStringPipe,\n} from '@parts/pipes';\nimport { InputValidateModule } from '@parts/directives/input-validate';\nimport { InputDisableSelectionModule } from '@parts/directives/input-disable-selection';\nimport { CheckboxComponent } from '@parts/components/checkbox.component';\nimport { CopyButtonComponent } from '@parts/components/copy-button.component';\nimport { StakingSwitchComponent } from '@parts/components/staking-switch.component';\nimport { SwitchComponent } from '@parts/components/switch.component';\nimport { SynchronizationStatusComponent } from '@parts/components/synchronization-status.component';\nimport { LoaderComponent } from '@parts/components/loader.component';\nimport { AutoFocusDirective } from '@parts/directives/autofocus.directive';\nimport { BreadcrumbsComponent } from '@parts/components/breadcrumbs/breadcrumbs.component';\nimport { BackButtonComponent } from '@parts/components/back-button/back-button.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { IsVisibleControlErrorPipe } from '@parts/pipes/is-visible-control-error.pipe';\nimport { ZanoLogoComponent } from '@parts/components/zano-logo/zano-logo.component';\n\n@NgModule({\n    declarations: [\n        LoginComponent,\n        SettingsComponent,\n        AddWalletComponent,\n        CreateWalletComponent,\n        OpenWalletComponent,\n        RestoreWalletComponent,\n        SeedPhraseComponent,\n        AssignAliasComponent,\n        EditAliasComponent,\n        TransferAliasComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        PagesRoutingModule,\n        AuthModule,\n        WalletModule,\n        NgSelectModule,\n        TranslateModule.forChild(),\n        FlexLayoutModule,\n        DisablePriceFetchModule,\n        TooltipModule,\n        ConfirmModalModule,\n        DeeplinkModule,\n        FullLayoutModule,\n        WithSidebarLayoutModule,\n        OverlayModule,\n        DefaultImgModule,\n        ContractStatusMessagesPipeModule,\n        ContractTimeLeftPipeModule,\n        HistoryTypeMessagesPipeModule,\n        IntToMoneyPipeModule,\n        IsAvailableAliasNamePipeModule,\n        MoneyToIntPipeModule,\n        SafeHtmlPipeModule,\n        ShortStringPipe,\n        InputValidateModule,\n        InputDisableSelectionModule,\n        CheckboxComponent,\n        CopyButtonComponent,\n        StakingSwitchComponent,\n        SwitchComponent,\n        SynchronizationStatusComponent,\n        LoaderComponent,\n        AutoFocusDirective,\n        BreadcrumbsComponent,\n        BackButtonComponent,\n        MatIconModule,\n        IsVisibleControlErrorPipe,\n        ZanoLogoComponent,\n    ],\n})\nexport class PagesModule {}\n","export enum paths {\n    auth = 'auth',\n    addWallet = 'add-wallet',\n    login = 'login',\n    wallet = 'wallet',\n    create = 'create',\n    open = 'open',\n    restore = 'restore',\n    seedPhrase = 'seed-phrase',\n    details = 'details',\n    assignAlias = 'assign-alias',\n    editAlias = 'edit-alias',\n    transferAlias = 'transfer-alias',\n    settings = 'settings',\n    import = 'import',\n    deeplink = 'deeplink',\n}\n\nexport enum pathsChildrenAuth {\n    noWallet = 'no-wallet',\n}\n\nexport enum pathsChildrenWallet {\n    assets = 'assets',\n    send = 'send',\n    receive = 'receive',\n    history = 'history',\n    contracts = 'contracts',\n    staking = 'staking',\n}\n\nexport enum pathsChildrenContracts {\n    purchase = 'purchase',\n}\n","import { Component, inject, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport { NonNullableFormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { BackendService } from '@api/services/backend.service';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { ModalService } from '@parts/services/modal.service';\nimport { Wallet } from '@api/models/wallet.model';\nimport { TranslateService } from '@ngx-translate/core';\nimport { debounceTime, startWith, takeUntil } from 'rxjs/operators';\nimport { combineLatest, Subject } from 'rxjs';\nimport { REG_EXP_PASSWORD, ZanoValidators } from '@parts/utils/zano-validators';\nimport { WalletsService } from '@parts/services/wallets.service';\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\n\ninterface SeedPhraseInfo {\n    address: string;\n    hash_sum_matched: boolean;\n    require_password: boolean;\n    syntax_correct: boolean;\n    tracking: boolean;\n}\n\n@Component({\n    selector: 'app-restore-wallet',\n    templateUrl: './restore-wallet.component.html',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                overflow: hidden;\n            }\n        `,\n    ],\n})\nexport class RestoreWalletComponent implements OnInit, OnDestroy {\n    public readonly breadcrumbItems: BreadcrumbItems = [\n        {\n            routerLink: '/add-wallet',\n            title: 'BREADCRUMBS.ADD_WALLET',\n        },\n        {\n            title: 'BREADCRUMBS.RESTORE_WALLET',\n        },\n    ];\n\n    public selectedLocationWalletName: string;\n\n    public selectedLocationWalletPath: string;\n\n    public seedPhraseInfo: SeedPhraseInfo = null;\n\n    public readonly walletsService: WalletsService = inject(WalletsService);\n\n    public readonly variablesService: VariablesService = inject(VariablesService);\n\n    private readonly _fb: NonNullableFormBuilder = inject(NonNullableFormBuilder);\n\n    public readonly form = this._fb.group(\n        {\n            name: this._fb.control('', [\n                Validators.required,\n                Validators.maxLength(this.variablesService.maxWalletNameLength),\n                ZanoValidators.duplicate(this.variablesService.walletNamesForComparisons),\n            ]),\n            seedPhrase: this._fb.control('', Validators.required),\n            password: this._fb.control('', Validators.pattern(REG_EXP_PASSWORD)),\n            confirm: this._fb.control(''),\n            seedPassword: this._fb.control(''),\n        },\n        {\n            validators: [ZanoValidators.formMatch('password', 'confirm')],\n        }\n    );\n\n    private _destroy$: Subject<void> = new Subject<void>();\n\n    private readonly _router: Router = inject(Router);\n\n    private readonly _backend: BackendService = inject(BackendService);\n\n    private readonly _modalService: ModalService = inject(ModalService);\n\n    private readonly _ngZone: NgZone = inject(NgZone);\n\n    private readonly _translate: TranslateService = inject(TranslateService);\n\n    private submitting = false;\n\n    get isDisabledCreatedWallet(): boolean {\n        return this.form.invalid || !this.selectedLocationWalletPath || this.submitting;\n    }\n\n    get invalidSeedPhraseInfo(): boolean {\n        if (!this.seedPhraseInfo) {\n            return true;\n        }\n\n        const { syntax_correct, require_password, hash_sum_matched } = this.seedPhraseInfo;\n        return (!syntax_correct || !require_password || !hash_sum_matched) && (!syntax_correct || require_password);\n    }\n\n    ngOnInit(): void {\n        const {\n            controls: { seedPassword, seedPhrase },\n        } = this.form;\n\n        const obs1 = seedPhrase.valueChanges;\n        const obs2 = seedPassword.valueChanges.pipe(startWith(seedPassword.value));\n\n        combineLatest([obs1, obs2])\n            .pipe(debounceTime(500), takeUntil(this._destroy$))\n            .subscribe({\n                next: ([seed_phrase, seed_password]) => {\n                    const params = { seed_phrase, seed_password };\n\n                    this._backend.getSeedPhraseInfo(params, (status, data) => {\n                        this._ngZone.run(() => {\n                            if (!status) {\n                                this.seedPhraseInfo = undefined;\n                                return;\n                            }\n\n                            this.seedPhraseInfo = data;\n                        });\n                    });\n\n                    this._backend.isValidRestoreWalletText(params, (_, data) => {\n                        this._ngZone.run(() => {\n                            const control = this.form.get('seedPhrase');\n                            if (data !== 'TRUE') {\n                                control.setErrors({ password_seed_phrase_not_valid: true });\n                            } else {\n                                control.updateValueAndValidity({ emitEvent: false });\n                            }\n                        });\n                    });\n                },\n            });\n    }\n\n    ngOnDestroy(): void {\n        this.variablesService.opening_wallet = null;\n\n        this._destroy$.next();\n        this._destroy$.complete();\n    }\n\n    restore(): void {\n        this.submitting = true;\n        const { name, password, seedPhrase, seedPassword } = this.form.getRawValue();\n        this._backend.restoreWallet(this.selectedLocationWalletPath, password, seedPhrase, seedPassword, (status, data) => {\n            this._ngZone.run(() => {\n                if (status) {\n                    const { wallet_id } = data;\n                    const { path, address, balance, unlocked_balance, mined_total, tracking_hey, is_auditable, is_watch_only } = data['wi'];\n                    const wallet: Wallet = new Wallet(\n                        wallet_id,\n                        name,\n                        password,\n                        path,\n                        address,\n                        balance,\n                        unlocked_balance,\n                        mined_total,\n                        tracking_hey\n                    );\n                    wallet.is_auditable = is_auditable;\n                    wallet.is_watch_only = is_watch_only;\n\n                    wallet.restore = true;\n                    wallet.currentPage = 1;\n                    wallet.pages = new Array(1).fill(1);\n                    wallet.totalPages = 1;\n                    wallet.total_history_item = 0;\n\n                    if (data.recent_history && data.recent_history.history) {\n                        wallet.totalPages = Math.ceil(data.recent_history.total_history_items / this.variablesService.count);\n                        wallet.totalPages > this.variablesService.maxPages\n                            ? (wallet.pages = new Array(5).fill(1).map((value, index) => value + index))\n                            : (wallet.pages = new Array(wallet.totalPages).fill(1).map((value, index) => value + index));\n                        wallet.prepareHistory(data.recent_history.history);\n                    }\n\n                    this.variablesService.opening_wallet = wallet;\n\n                    this._runWallet();\n                } else {\n                    this._modalService.prepareModal('error', 'RESTORE_WALLET.NOT_CORRECT_FILE_OR_PASSWORD');\n                    this.submitting = false;\n                }\n            });\n        });\n    }\n\n    selectLocation(): void {\n        const caption = this._translate.instant('RESTORE_WALLET.CHOOSE_PATH');\n        const fileMask = '*';\n        const {\n            settings: { default_path },\n        } = this.variablesService;\n\n        this._backend.saveFileDialog(caption, fileMask, default_path, (status, data) => {\n            this._ngZone.run(() => {\n                if (status) {\n                    const startWalletName = data.path.lastIndexOf('/') + 1;\n                    const endWalletName = data.path.length - 1;\n                    this.selectedLocationWalletName = data.path.substr(startWalletName, endWalletName);\n                    this.selectedLocationWalletPath = data.path;\n\n                    this.variablesService.settings.default_path = data.path.substr(0, data.path.lastIndexOf('/'));\n                }\n            });\n        });\n    }\n\n    private _runWallet(): void {\n        const { opening_wallet, wallets, appPass } = this.variablesService;\n        const { wallet_id, address } = opening_wallet;\n\n        // Add flag when wallet was restored form seed\n        this.variablesService.after_sync_request[wallet_id] = true;\n\n        const exists: boolean = wallets.some((wallet: Wallet): boolean => wallet.address === address);\n\n        if (exists) {\n            this.variablesService.opening_wallet = null;\n\n            this._modalService.prepareModal('error', 'OPEN_WALLET.WITH_ADDRESS_ALREADY_OPEN');\n\n            this._backend.closeWallet(wallet_id, () => {\n                this._ngZone.run(() => {\n                    this._router.navigate(['/']);\n                });\n            });\n\n            return;\n        }\n\n        this.walletsService.addWallet(opening_wallet);\n\n        this._backend.runWallet(wallet_id, (status, data) => {\n            this._ngZone.run(() => {\n                if (status) {\n                    if (appPass) {\n                        this._backend.storeSecureAppData();\n                    }\n\n                    this.variablesService.setCurrentWallet(wallet_id);\n                    this.variablesService.opening_wallet = null;\n\n                    this._router.navigate(['/wallet/']);\n                } else {\n                    this._modalService.prepareModal('error', data['error_code']);\n                    this.submitting = false;\n                    console.error(data['error_code']);\n                }\n            });\n        });\n    }\n}\n","<div class=\"page-container\">\n    <div class=\"toolbar mb-2\">\n        <div class=\"left\">\n            <app-back-button></app-back-button>\n            <h1 class=\"ml-2\">{{ 'BREADCRUMBS.ADD_WALLET' | translate }}</h1>\n        </div>\n        <div class=\"right\"></div>\n    </div>\n\n    <div class=\"page-content\">\n        <app-breadcrumbs class=\"mb-2\" [items]=\"breadcrumbItems\"></app-breadcrumbs>\n\n        <div class=\"scrolled-content\">\n            <form [formGroup]=\"form\" class=\"form\" (ngSubmit)=\"restore()\">\n                <!-- Name -->\n                <div class=\"form__field fixed\">\n                    <label for=\"name\">{{ 'RESTORE_WALLET.LABEL_NAME' | translate }}</label>\n                    <input\n                        (contextmenu)=\"variablesService.onContextMenu($event)\"\n                        [placeholder]=\"'PLACEHOLDERS.WALLET_NAME_PLACEHOLDER' | translate\"\n                        class=\"form__field--input\"\n                        formControlName=\"name\"\n                        id=\"name\"\n                        type=\"text\"\n                    />\n                    <ng-container *ngIf=\"form.get('name') as control\">\n                        <div *ngIf=\"control | isVisibleControlError\" class=\"error\">\n                            <div *ngIf=\"control.hasError('duplicate')\">\n                                {{ 'RESTORE_WALLET.FORM_ERRORS.NAME_DUPLICATE' | translate }}\n                            </div>\n                            <div *ngIf=\"control.hasError('maxlength')\">\n                                {{ 'RESTORE_WALLET.FORM_ERRORS.MAX_LENGTH' | translate }}\n                            </div>\n                            <div *ngIf=\"control.hasError('required')\">\n                                {{ 'RESTORE_WALLET.FORM_ERRORS.NAME_REQUIRED' | translate }}\n                            </div>\n                        </div>\n                    </ng-container>\n                </div>\n\n                <!-- Password -->\n                <div class=\"form__field\">\n                    <label for=\"password\">{{ 'RESTORE_WALLET.PASS' | translate }}</label>\n                    <input\n                        (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                        class=\"form__field--input\"\n                        formControlName=\"password\"\n                        id=\"password\"\n                        [placeholder]=\"'PLACEHOLDERS.WALET_PASSWORD_PLACEHOLDER' | translate\"\n                        type=\"password\"\n                    />\n                    <ng-container *ngIf=\"form.controls.password as control\">\n                        <div *ngIf=\"control | isVisibleControlError\" class=\"error\">\n                            <div *ngIf=\"control.hasError('pattern')\">\n                                {{ 'ERRORS.REGEXP_INVALID_PASSWORD' | translate }}\n                            </div>\n                        </div>\n                    </ng-container>\n                </div>\n\n                <!-- Confirm Password -->\n                <div class=\"form__field fixed\">\n                    <label for=\"confirm\">{{ 'RESTORE_WALLET.CONFIRM' | translate }}</label>\n                    <input\n                        (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                        class=\"form__field--input\"\n                        formControlName=\"confirm\"\n                        id=\"confirm\"\n                        [placeholder]=\"'PLACEHOLDERS.CONFIRM_WALET_PASSWORD_PLACEHOLDER' | translate\"\n                        type=\"password\"\n                    />\n                    <div *ngIf=\"form.hasError('mismatch')\" class=\"error\">\n                        {{ 'RESTORE_WALLET.FORM_ERRORS.CONFIRM_NOT_MATCH' | translate }}\n                    </div>\n                </div>\n\n                <!-- Seed phrase -->\n                <div class=\"form__field fixed\">\n                    <label for=\"seed-phrase\">{{ 'RESTORE_WALLET.LABEL_PHRASE_KEY' | translate }}</label>\n                    <input\n                        (contextmenu)=\"variablesService.onContextMenu($event)\"\n                        [placeholder]=\"'PLACEHOLDERS.SEED_PHRASE_PLACEHOLDER' | translate\"\n                        class=\"form__field--input\"\n                        formControlName=\"seedPhrase\"\n                        id=\"seed-phrase\"\n                        type=\"text\"\n                    />\n                    <ng-container *ngIf=\"form.get('seedPhrase') as control\">\n                        <div\n                            *ngIf=\"(control.invalid || !this.seedPhraseInfo?.syntax_correct) && (control.dirty || control.touched)\"\n                            class=\"error\"\n                        >\n                            <div\n                                *ngIf=\"\n                                    control.hasError('required') &&\n                                    !control.hasError('password_seed_phrase_not_valid') &&\n                                    seedPhraseInfo.require_password\n                                \"\n                            >\n                                {{ 'RESTORE_WALLET.FORM_ERRORS.KEY_REQUIRED' | translate }}\n                            </div>\n                            <div *ngIf=\"control.hasError('password_seed_phrase_not_valid') && seedPhraseInfo.require_password\">\n                                {{ 'RESTORE_WALLET.FORM_ERRORS.PASSWORD_SEED_PHRASE_INCORRECT' | translate }}\n                            </div>\n                            <div *ngIf=\"!this.seedPhraseInfo?.syntax_correct\">\n                                {{ 'RESTORE_WALLET.FORM_ERRORS.SEED_PHRASE_IS_NO_VALID' | translate }}\n                            </div>\n                        </div>\n                    </ng-container>\n                </div>\n\n                <!-- Seed password -->\n                <ng-container *ngIf=\"seedPhraseInfo\">\n                    <ng-container *ngIf=\"seedPhraseInfo.syntax_correct && seedPhraseInfo.require_password\">\n                        <div class=\"form__field fixed\">\n                            <label for=\"seed-password\">{{ 'RESTORE_WALLET.SEED_PASSWORD' | translate }}</label>\n                            <input\n                                class=\"form__field--input\"\n                                formControlName=\"seedPassword\"\n                                [ngClass]=\"{\n                                    invalid: !seedPhraseInfo.hash_sum_matched\n                                }\"\n                                id=\"seed-password\"\n                                [placeholder]=\"'PLACEHOLDERS.SEED_PHRASE_PLACEHOLDER' | translate\"\n                                type=\"password\"\n                            />\n                            <ng-container *ngIf=\"form.get('seedPassword') as control\">\n                                <div *ngIf=\"(control.dirty || control.touched) && !seedPhraseInfo.hash_sum_matched\" class=\"error\">\n                                    <span>{{ 'RESTORE_WALLET.FORM_ERRORS.INCORRECT_PASSWORD' | translate }}</span>\n                                </div>\n                            </ng-container>\n                            <div *ngIf=\"seedPhraseInfo.hash_sum_matched\" class=\"success\">\n                                <span>{{ 'RESTORE_WALLET.OK' | translate }}</span>\n                            </div>\n                        </div>\n                    </ng-container>\n                </ng-container>\n\n                <button (click)=\"selectLocation()\" [disabled]=\"invalidSeedPhraseInfo\" class=\"outline big w-100 mb-2\" type=\"button\">\n                    {{ selectedLocationWalletName ?? 'RESTORE_WALLET.BUTTON_SELECT' | translate }}\n                </button>\n\n                <button type=\"submit\" [disabled]=\"isDisabledCreatedWallet\" class=\"primary big w-100 mb-2\">\n                    {{ 'RESTORE_WALLET.BUTTON_CREATE' | translate }}\n                </button>\n            </form>\n        </div>\n    </div>\n</div>\n","import { Component, inject, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport { BackendService } from '@api/services/backend.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { hasOwnProperty } from '@parts/functions/has-own-property';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { REG_EXP_PASSWORD, ZanoValidators } from '@parts/utils/zano-validators';\nimport { WalletsService } from '@parts/services/wallets.service';\nimport { Wallet } from '@api/models/wallet.model';\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\n\n@Component({\n    selector: 'app-seed-phrase',\n    template: `\n        <div class=\"page-container\">\n            <div class=\"toolbar mb-2\">\n                <div class=\"left\">\n                    <app-back-button></app-back-button>\n                    <h1 class=\"ml-2\">{{ 'BREADCRUMBS.ADD_WALLET' | translate }}</h1>\n                </div>\n                <div class=\"right\"></div>\n            </div>\n\n            <div class=\"page-content\">\n                <app-breadcrumbs class=\"mb-2\" [items]=\"breadcrumbItems\"></app-breadcrumbs>\n\n                <div class=\"scrolled-content\">\n                    <div class=\"wrap-seed-phrase\" fxFlex=\"100\" fxLayout=\"column\">\n                        <form [formGroup]=\"detailsForm\" class=\"form\">\n                            <div class=\"form__field\">\n                                <label>{{ 'WALLET_DETAILS.LABEL_NAME' | translate }}</label>\n                                <input\n                                    (contextmenu)=\"variablesService.onContextMenu($event)\"\n                                    [maxLength]=\"variablesService.maxWalletNameLength\"\n                                    [placeholder]=\"'PLACEHOLDERS.WALLET_NAME_PLACEHOLDER' | translate\"\n                                    class=\"form__field--input\"\n                                    formControlName=\"name\"\n                                    id=\"wallet-name\"\n                                    readonly\n                                    type=\"text\"\n                                />\n                                <div\n                                    *ngIf=\"\n                                        detailsForm.controls['name'].invalid &&\n                                        (detailsForm.controls['name'].dirty || detailsForm.controls['name'].touched)\n                                    \"\n                                    class=\"error\"\n                                >\n                                    <div *ngIf=\"detailsForm.controls['name'].errors['duplicate']\">\n                                        {{ 'WALLET_DETAILS.FORM_ERRORS.NAME_DUPLICATE' | translate }}\n                                    </div>\n                                    <div *ngIf=\"detailsForm.get('name').value.length >= variablesService.maxWalletNameLength\">\n                                        {{ 'WALLET_DETAILS.FORM_ERRORS.MAX_LENGTH' | translate }}\n                                    </div>\n                                    <div *ngIf=\"detailsForm.controls['name'].errors['required']\">\n                                        {{ 'WALLET_DETAILS.FORM_ERRORS.NAME_REQUIRED' | translate }}\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"form__field\">\n                                <label for=\"wallet-location\">{{ 'WALLET_DETAILS.LABEL_FILE_LOCATION' | translate }}</label>\n                                <input class=\"form__field--input\" formControlName=\"path\" id=\"wallet-location\" readonly type=\"text\" />\n                            </div>\n                        </form>\n\n                        <ng-container *ngIf=\"!showSeed; else seedPhraseContent\">\n                            <form (ngSubmit)=\"onSubmitSeed()\" [formGroup]=\"seedPhraseForm\" class=\"form form__card pb-2\">\n                                <div class=\"form__field\">\n                                    <label for=\"create-password\">{{ 'WALLET_DETAILS.CREATE_PASSWORD_SECURE' | translate }}</label>\n                                    <input\n                                        class=\"form__field--input\"\n                                        formControlName=\"password\"\n                                        id=\"create-password\"\n                                        placeholder=\"{{ 'PLACEHOLDERS.PASSWORD_PLACEHOLDER' | translate }}\"\n                                        type=\"password\"\n                                    />\n                                    <div\n                                        *ngIf=\"\n                                            seedPhraseForm.controls.password.invalid &&\n                                            (seedPhraseForm.controls['password'].dirty || seedPhraseForm.controls['password'].touched)\n                                        \"\n                                        class=\"error\"\n                                    >\n                                        <ng-container *ngIf=\"seedPhraseForm.controls['password'].hasError('pattern')\">\n                                            {{ 'ERRORS.REGEXP_INVALID_PASSWORD' | translate }}\n                                        </ng-container>\n                                    </div>\n                                </div>\n\n                                <div class=\"form__field\">\n                                    <label for=\"confirm-password\">{{ 'WALLET_DETAILS.FORM.CONFIRM_PASSWORD' | translate }}</label>\n                                    <input\n                                        [class.invalid]=\"seedPhraseForm.invalid && seedPhraseForm.get('confirmPassword').value.length > 0\"\n                                        class=\"form__field--input\"\n                                        formControlName=\"confirmPassword\"\n                                        id=\"confirm-password\"\n                                        placeholder=\"{{ 'PLACEHOLDERS.PLACEHOLDER_CONFIRM' | translate }}\"\n                                        type=\"password\"\n                                    />\n                                    <div\n                                        *ngIf=\"\n                                            seedPhraseForm.invalid &&\n                                            (seedPhraseForm.controls['confirmPassword'].dirty ||\n                                                seedPhraseForm.controls['confirmPassword'].touched)\n                                        \"\n                                        class=\"error\"\n                                    >\n                                        <div *ngIf=\"seedPhraseForm.invalid && seedPhraseForm.get('confirmPassword').value.length > 0\">\n                                            {{ 'WALLET_DETAILS.FORM_ERRORS.PASSWORDS_DONT_MATCH' | translate }}\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <button [disabled]=\"!seedPhraseForm.valid\" class=\"primary w-100 big mb-2\" type=\"submit\">\n                                    <mat-icon svgIcon=\"zano-check-shield\" class=\"mr-1\"></mat-icon>\n                                    {{ 'WALLET_DETAILS.FORM.GENERATE_SECURE_SEED' | translate }}\n                                </button>\n\n                                <p class=\"text-align-center color-primary\">\n                                    <mat-icon svgIcon=\"zano-info\" class=\"mr-1\"></mat-icon>\n                                    {{ 'WALLET_DETAILS.FORM.SECURED_SEED_WILL_REQUIRE' | translate }}\n                                </p>\n                            </form>\n                        </ng-container>\n\n                        <ng-template #seedPhraseContent>\n                            <div class=\"seed-phrase form__card pb-2\">\n                                <div class=\"header mb-2\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n                                    <div class=\"left\">\n                                        <span>{{ 'WALLET_DETAILS.LABEL_SEED_PHRASE' | translate }}</span>\n                                    </div>\n                                    <div class=\"right\">\n                                        <span\n                                            *ngIf=\"seedPhraseForm.controls.password.value.length === 0\"\n                                            class=\"status color-red\"\n                                            fxLayout=\"row\"\n                                            fxLayoutAlign=\"start center\"\n                                        >\n                                            {{ 'WALLET_DETAILS.SEED_IS_UNSECURED' | translate }}\n                                            <mat-icon svgIcon=\"zano-unsecured\" class=\"ml-1\"></mat-icon>\n                                        </span>\n                                        <span\n                                            *ngIf=\"seedPhraseForm.controls.password.value.length > 0\"\n                                            class=\"status color-aqua\"\n                                            fxLayout=\"row\"\n                                            fxLayoutAlign=\"start center\"\n                                        >\n                                            {{ 'WALLET_DETAILS.SEED_IS_SECURED' | translate }}\n                                            <mat-icon svgIcon=\"zano-secured\" class=\"ml-1\"></mat-icon>\n                                        </span>\n                                    </div>\n                                </div>\n                                <div\n                                    (contextmenu)=\"variablesService.onContextMenuOnlyCopy($event, seedPhrase)\"\n                                    class=\"content mb-1\"\n                                    fxLayout=\"row wrap\"\n                                >\n                                    <ng-container *ngFor=\"let word of seedPhrase.split(' '); let index = index\">\n                                        <div\n                                            class=\"item p-1 mr-1 mb-1 border-radius-0_8-rem\"\n                                            fxLayout=\"row nowrap\"\n                                            fxLayoutAlign=\"start center\"\n                                        >\n                                            <div class=\"number p-1 mr-1\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n                                                {{ index + 1 }}\n                                            </div>\n                                            <span class=\"word\">{{ word }}</span>\n                                        </div>\n                                    </ng-container>\n                                </div>\n                                <div class=\"footer max-w-50-rem w-100\" fxLayout=\"column\" fxLayoutAlign=\"start center\">\n                                    <div *ngIf=\"showSeed\" class=\"wrap-buttons w-100 mb-2\" fxLayout=\"row nowrap\">\n                                        <button (click)=\"copySeedPhrase()\" class=\"outline big w-100\" type=\"button\">\n                                            <ng-container *ngIf=\"!seedPhraseCopied\">\n                                                <mat-icon svgIcon=\"zano-copy\" class=\"mr-1\"></mat-icon>\n                                                {{ 'SEED_PHRASE.BUTTON_COPY' | translate }}\n                                            </ng-container>\n                                            <ng-container *ngIf=\"seedPhraseCopied\">\n                                                <mat-icon svgIcon=\"zano-check\" class=\"mr-1\"></mat-icon>\n                                                {{ 'SEED_PHRASE.BUTTON_COPIED' | translate }}\n                                            </ng-container>\n                                        </button>\n                                    </div>\n                                    <p *ngIf=\"seedPhraseForm.controls.password.value.length > 0\" class=\"text-align-center\">\n                                        <mat-icon svgIcon=\"zano-info\" class=\"mr-1\"></mat-icon>\n                                        <span class=\"color-primary\">{{ 'WALLET_DETAILS.REMEMBER_YOU_WILL_REQUIRE' | translate }}</span>\n                                    </p>\n                                </div>\n                            </div>\n                        </ng-template>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                overflow: hidden;\n            }\n        `,\n    ],\n})\nexport class SeedPhraseComponent implements OnInit, OnDestroy {\n    seedPhrase = '';\n\n    breadcrumbItems: BreadcrumbItems = [\n        {\n            routerLink: '/add-wallet',\n            title: 'BREADCRUMBS.ADD_WALLET',\n        },\n        {\n            title: 'BREADCRUMBS.SAVE_PHRASE',\n        },\n    ];\n\n    showSeed = false;\n\n    wallet_id: number;\n\n    wallet!: Wallet;\n\n    seedPhraseCopied = false;\n\n    progressWidth = '66%';\n\n    fb = inject(FormBuilder);\n\n    detailsForm = this.fb.group({\n        name: this.fb.nonNullable.control('', [ZanoValidators.duplicate(this.variablesService.walletNamesForComparisons)]),\n        path: this.fb.nonNullable.control(''),\n    });\n\n    seedPhraseForm = this.fb.group(\n        {\n            password: this.fb.nonNullable.control('', Validators.pattern(REG_EXP_PASSWORD)),\n            confirmPassword: this.fb.nonNullable.control(''),\n        },\n        {\n            validators: [ZanoValidators.formMatch('password', 'confirmPassword')],\n        }\n    );\n\n    private destroy$ = new Subject<void>();\n\n    constructor(\n        public walletsService: WalletsService,\n        public variablesService: VariablesService,\n        private route: ActivatedRoute,\n        private backend: BackendService,\n        private ngZone: NgZone\n    ) {}\n\n    ngOnInit(): void {\n        this.showSeed = false;\n        this.getWallet();\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    copySeedPhrase(): void {\n        this.backend.setClipboard(this.seedPhrase, () => {\n            this.ngZone.run(() => {\n                setTimeout(() => {\n                    this.seedPhraseCopied = false;\n                }, 4000);\n                this.seedPhraseCopied = true;\n            });\n        });\n    }\n\n    showSeedPhrase(): void {\n        this.showSeed = true;\n        this.progressWidth = '100%';\n    }\n\n    onSubmitSeed(): void {\n        if (this.seedPhraseForm.valid) {\n            this.showSeedPhrase();\n            const wallet_id = this.wallet_id;\n            const seed_password = this.seedPhraseForm.controls.password.value;\n            this.backend.getSmartWalletInfo({ wallet_id, seed_password }, (status, data) => {\n                if (hasOwnProperty(data, 'seed_phrase')) {\n                    this.ngZone.run(() => {\n                        this.seedPhrase = data['seed_phrase'].trim();\n                    });\n                }\n            });\n        }\n    }\n\n    private setWalletInfoNamePath(): void {\n        this.detailsForm.get('name').setValue(this.wallet.name);\n        this.detailsForm.get('path').setValue(this.wallet.path);\n    }\n\n    private getWallet(): void {\n        this.route.queryParams.pipe(takeUntil(this.destroy$)).subscribe({\n            next: (params) => {\n                if (params.wallet_id) {\n                    this.wallet_id = +params.wallet_id;\n                    this.wallet = this.walletsService.getWalletById(this.wallet_id);\n                    if (this.wallet) {\n                        this.setWalletInfoNamePath();\n                    }\n                }\n            },\n        });\n    }\n}\n","import { Component, inject, NgZone, OnInit, Renderer2 } from '@angular/core';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { BackendService } from '@api/services/backend.service';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { scaleItems } from '@parts/data/scale-items';\nimport { REG_EXP_PASSWORD, ZanoValidators } from '@parts/utils/zano-validators';\nimport { generateRandomString } from '@parts/utils/generate-random-string';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-settings',\n    templateUrl: './settings.component.html',\n    styleUrls: [`./settings.component.scss`],\n})\nexport class SettingsComponent implements OnInit {\n    ifSaved = false;\n\n    isSecretWasCopied = false;\n\n    secretWasCopiedTimeout;\n\n    isBuildVersionWasCopied = false;\n\n    buildVersionWasCopiedTimeout;\n\n    scale: string;\n\n    appUseTor: boolean;\n\n    fb = inject(FormBuilder);\n\n    changeForm = this.fb.group(\n        {\n            password: this.fb.nonNullable.control('', Validators.compose([Validators.pattern(REG_EXP_PASSWORD)])),\n            new_password: this.fb.nonNullable.control('', Validators.compose([Validators.pattern(REG_EXP_PASSWORD)])),\n            new_confirmation: this.fb.nonNullable.control(''),\n            appPass: this.fb.nonNullable.control(this.variablesService.appPass ?? ''),\n        },\n        {\n            validators: [\n                ZanoValidators.formMatch('new_password', 'new_confirmation'),\n                ZanoValidators.formMatch('password', 'appPass', 'pass_mismatch'),\n            ],\n        }\n    );\n\n    readonly currenciesItems = [\n        { label: 'SOL', id: 'sol' },\n        { label: 'USD', id: 'usd' },\n        { label: 'AED', id: 'aed' },\n        { label: 'ARS', id: 'ars' },\n        { label: 'AUD', id: 'aud' },\n        { label: 'BDT', id: 'bdt' },\n        { label: 'BHD', id: 'bhd' },\n        { label: 'BMD', id: 'bmd' },\n        { label: 'BRL', id: 'brl' },\n        { label: 'CAD', id: 'cad' },\n        { label: 'CHF', id: 'chf' },\n        { label: 'CLP', id: 'clp' },\n        { label: 'CNY', id: 'cny' },\n        { label: 'CZK', id: 'czk' },\n        { label: 'DKK', id: 'dkk' },\n        { label: 'EUR', id: 'eur' },\n        { label: 'GBP', id: 'gbp' },\n        { label: 'GEL', id: 'gel' },\n        { label: 'HKD', id: 'hkd' },\n        { label: 'HUF', id: 'huf' },\n        { label: 'IDR', id: 'idr' },\n        { label: 'ILS', id: 'ils' },\n        { label: 'INR', id: 'inr' },\n        { label: 'JPY', id: 'jpy' },\n        { label: 'KRW', id: 'krw' },\n        { label: 'KWD', id: 'kwd' },\n        { label: 'LKR', id: 'lkr' },\n        { label: 'MMK', id: 'mmk' },\n        { label: 'MXN', id: 'mxn' },\n        { label: 'MYR', id: 'myr' },\n        { label: 'NGN', id: 'ngn' },\n        { label: 'NOK', id: 'nok' },\n        { label: 'NZD', id: 'nzd' },\n        { label: 'PHP', id: 'php' },\n        { label: 'PKR', id: 'pkr' },\n        { label: 'PLN', id: 'pln' },\n        { label: 'RUB', id: 'rub' },\n        { label: 'SAR', id: 'sar' },\n        { label: 'SEK', id: 'sek' },\n        { label: 'SGD', id: 'sgd' },\n        { label: 'THB', id: 'thb' },\n        { label: 'TRY', id: 'try' },\n        { label: 'TWD', id: 'twd' },\n        { label: 'UAH', id: 'uah' },\n        { label: 'VEF', id: 'vef' },\n        { label: 'VND', id: 'vnd' },\n        { label: 'ZAR', id: 'zar' },\n        { label: 'XDR', id: 'xdr' },\n        { label: 'XAG', id: 'xag' },\n        { label: 'XAU', id: 'xau' },\n        { label: 'BITS', id: 'bits' },\n        { label: 'SATS', id: 'sats' }\n    ];\n\n    zanoCompanionForm: FormGroup<{\n        zanoCompation: FormControl<boolean>;\n        secret: FormControl<string>;\n    }> = this.fb.group({\n        zanoCompation: this.fb.nonNullable.control({ value: false, disabled: !this.variablesService.hasAppPass }),\n        secret: this.fb.nonNullable.control(\n            { value: '', disabled: false },\n            {\n                validators: Validators.compose([]),\n            }\n        ),\n    });\n\n    public currentNotificationsState;\n\n    languagesOptions = [\n        {\n            name: 'en',\n            language: 'SETTINGS.LANGUAGE.EN',\n        },\n        {\n            name: 'fr',\n            language: 'SETTINGS.LANGUAGE.FR',\n        },\n        {\n            name: 'de',\n            language: 'SETTINGS.LANGUAGE.DE',\n        },\n        {\n            name: 'id',\n            language: 'SETTINGS.LANGUAGE.ID',\n        },\n        {\n            name: 'it',\n            language: 'SETTINGS.LANGUAGE.IT',\n        },\n        {\n            name: 'pt',\n            language: 'SETTINGS.LANGUAGE.PT',\n        },\n    ];\n\n    appLockOptions = [\n        {\n            time: 5,\n            translationKey: 'SETTINGS.APP_LOCK.TIME1',\n        },\n        {\n            time: 15,\n            translationKey: 'SETTINGS.APP_LOCK.TIME2',\n        },\n        {\n            time: 60,\n            translationKey: 'SETTINGS.APP_LOCK.TIME3',\n        },\n        {\n            time: 0,\n            translationKey: 'SETTINGS.APP_LOCK.TIME4',\n        },\n    ];\n\n    appScaleOptions = scaleItems;\n\n    appLogOptions = [\n        {\n            id: -1,\n        },\n        {\n            id: 0,\n        },\n        {\n            id: 1,\n        },\n        {\n            id: 2,\n        },\n        {\n            id: 3,\n        },\n        {\n            id: 4,\n        },\n    ];\n\n    currentBuild = '';\n\n    appPass: any;\n\n    constructor(\n        public translate: TranslateService,\n        public variablesService: VariablesService,\n        private renderer: Renderer2,\n        public backend: BackendService,\n        private ngZone: NgZone\n    ) {\n        this.scale = this.variablesService.settings.scale;\n        this.appUseTor = this.variablesService.settings.appUseTor;\n        this.zanoCompanionForm.setValue(this.variablesService.settings.zanoCompanionForm, { emitEvent: false });\n\n        this.backend.getOptions();\n    }\n\n    ngOnInit(): void {\n        this.backend.getVersion((version, type, error) => {\n            this.ngZone.run(() => {\n                if (!error) {\n                    this.currentBuild = version;\n                    this.variablesService.testnet = false;\n                    if (type === 'testnet') {\n                        this.currentBuild += ' TESTNET';\n                        this.variablesService.testnet = true;\n                    }\n                    this.variablesService.networkType = type;\n                } else {\n                    this.currentBuild = 'There was an error getting the build version';\n                }\n            });\n        });\n\n        this.backend.getIsDisabledNotifications((state) => {\n            this.currentNotificationsState = !state;\n        });\n\n        this.zanoCompanionForm.valueChanges.pipe(debounceTime(200)).subscribe({\n            next: () => {\n                const value = this.zanoCompanionForm.getRawValue();\n                const { zanoCompation, secret } = value;\n\n                if (zanoCompation && !secret) {\n                    this.generateSecret();\n                    return;\n                }\n\n                if (!zanoCompation && secret) {\n                    this.zanoCompanionForm.controls.secret.patchValue('');\n                    return;\n                }\n\n                if ((zanoCompation && secret) || (!zanoCompation && !secret)) {\n                    this.backend.setupJwtWalletRpc(value);\n                    return;\n                }\n            },\n        });\n    }\n\n    copySecret(): void {\n        const { secret } = this.zanoCompanionForm.getRawValue();\n\n        this.backend.setClipboard(secret);\n\n        this.isSecretWasCopied = true;\n        this.secretWasCopiedTimeout = setTimeout(() => {\n            this.isSecretWasCopied = false;\n            clearTimeout(this.secretWasCopiedTimeout);\n        }, 3000);\n    }\n\n    copyBuildVersion(): void {\n        this.backend.setClipboard(`Build version: ${this.currentBuild}`);\n\n        this.isBuildVersionWasCopied = true;\n        this.buildVersionWasCopiedTimeout = setTimeout(() => {\n            this.isBuildVersionWasCopied = false;\n            clearTimeout(this.buildVersionWasCopiedTimeout);\n        }, 3000);\n    }\n\n    private generateSecret(): void {\n        this.zanoCompanionForm.get('secret').setValue(generateRandomString(40));\n    }\n\n    regenerateSecret(): void {\n        this.generateSecret();\n    }\n\n    setScale(): void {\n        this.scale = this.variablesService.settings.scale;\n        this.renderer.setStyle(document.documentElement, 'font-size', this.scale);\n        this.backend.storeAppData();\n    }\n\n    onSubmitChangePass(): void {\n        if (this.changeForm.valid) {\n            this.variablesService.appPass = this.changeForm.get('new_password').value;\n\n            this.backend.setMasterPassword({ pass: this.variablesService.appPass }, (status, data) => {\n                if (status) {\n                    this.backend.storeSecureAppData({\n                        pass: this.variablesService.appPass,\n                    });\n                    this.variablesService.appLogin = true;\n                    this.variablesService.dataIsLoaded = true;\n                    if (this.variablesService.settings.appLockTime) {\n                        this.variablesService.startCountdown();\n                    }\n                    this.ngZone.run(() => {\n                        this.zanoCompanionForm.controls.zanoCompation.enable({ emitEvent: false });\n                        this.onSave();\n                    });\n                } else {\n                    console.log(data['error_code']);\n                }\n            });\n\n            this.changeForm.reset({ appPass: this.variablesService.appPass });\n        }\n    }\n\n    toggleNotifications(): void {\n        if (!this.currentNotificationsState) {\n            this.backend.setIsDisabledNotifications('false');\n            this.currentNotificationsState = true;\n        } else {\n            this.backend.setIsDisabledNotifications('true');\n            this.currentNotificationsState = false;\n        }\n    }\n\n    toggleUseTor(): void {\n        this.appUseTor = !this.appUseTor;\n        this.variablesService.settings.appUseTor = this.appUseTor;\n        this.backend.setEnableTor(this.appUseTor);\n        this.backend.storeAppData();\n    }\n\n    onSave(): void {\n        this.ifSaved = true;\n        setTimeout(() => {\n            this.ifSaved = false;\n        }, 3000);\n    }\n\n    onLockChange(): void {\n        this.variablesService.restartCountdown();\n    }\n\n    onLogChange(): void {\n        this.backend.setLogLevel(this.variablesService.settings.appLog);\n        this.backend.storeAppData();\n    }\n\n    onLanguageChange(): void {\n        this.translate.use(this.variablesService.settings.language);\n        this.backend.storeAppData();\n    }\n\n    onCurrencyChange(): void {\n        this.backend.storeAppData();\n    }\n\n    showPrice(): void {\n        this.variablesService.visibilityBalance$.next(!this.variablesService.visibilityBalance$.value);\n        this.backend.storeAppData();\n    }\n\n    toggleDarkTheme(): void {\n        const { settings, isDarkTheme$ } = this.variablesService;\n        const isDarkTheme = !settings.isDarkTheme;\n        this.variablesService.settings.isDarkTheme = isDarkTheme;\n        isDarkTheme$.next(isDarkTheme);\n\n        this.backend.storeAppData();\n    }\n}\n","<div class=\"page-container\">\n    <div class=\"toolbar mb-2\">\n        <div class=\"left\">\n            <app-back-button></app-back-button>\n            <h1 class=\"ml-2\">{{ 'SETTINGS.TITLE' | translate }}</h1>\n        </div>\n        <div class=\"right\"></div>\n    </div>\n\n    <div class=\"page-content\">\n        <div class=\"scrolled-content\">\n            <div class=\"settings\" fxFlex=\"0 1 50rem\" fxFlexFill fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n                <div class=\"form__field\">\n                    <label>{{ 'SETTINGS.LANGUAGE.TITLE' | translate }}</label>\n                    <ng-select\n                        (change)=\"onLanguageChange()\"\n                        [(ngModel)]=\"variablesService.settings.language\"\n                        [clearable]=\"false\"\n                        [items]=\"languagesOptions\"\n                        [searchable]=\"false\"\n                        bindLabel=\"language\"\n                        bindValue=\"name\"\n                        class=\"with-circle\"\n                    >\n                        <ng-template let-item=\"item\" ng-label-tmp>\n                            {{ item.language | translate }}\n                        </ng-template>\n                        <ng-template let-index=\"index\" let-item=\"item\" ng-option-tmp>\n                            {{ item.language | translate }}\n                        </ng-template>\n                    </ng-select>\n                </div>\n\n                <div class=\"form__field\">\n                    <label>{{ 'SETTINGS.APP_LOCK.TITLE' | translate }}</label>\n                    <ng-select\n                        (change)=\"onLockChange()\"\n                        [(ngModel)]=\"variablesService.settings.appLockTime\"\n                        [clearable]=\"false\"\n                        [items]=\"appLockOptions\"\n                        [searchable]=\"false\"\n                        bindLabel=\"translationKey\"\n                        bindValue=\"time\"\n                        class=\"with-circle\"\n                    >\n                        <ng-template let-item=\"item\" ng-label-tmp>\n                            {{ item.translationKey | translate }}\n                        </ng-template>\n                        <ng-template let-index=\"index\" let-item=\"item\" ng-option-tmp>\n                            {{ item.translationKey | translate }}\n                        </ng-template>\n                    </ng-select>\n                </div>\n\n                <div class=\"form__field\">\n                    <label>{{ 'SETTINGS.SCALE.TITLE' | translate }}</label>\n                    <ng-select\n                        (change)=\"setScale()\"\n                        [(ngModel)]=\"variablesService.settings.scale\"\n                        [clearable]=\"false\"\n                        [items]=\"appScaleOptions\"\n                        [searchable]=\"false\"\n                        bindLabel=\"name\"\n                        bindValue=\"value\"\n                        class=\"with-circle\"\n                    >\n                        <ng-template let-item=\"item\" ng-label-tmp>\n                            {{ item.name | translate }}\n                        </ng-template>\n                        <ng-template let-index=\"index\" let-item=\"item\" ng-option-tmp>\n                            {{ item.name | translate }}\n                        </ng-template>\n                    </ng-select>\n                </div>\n\n                <div class=\"form__field\">\n                    <label>{{ 'SETTINGS.APP_LOG_TITLE' | translate }}</label>\n                    <ng-select\n                        (change)=\"onLogChange()\"\n                        [(ngModel)]=\"variablesService.settings.appLog\"\n                        [clearable]=\"false\"\n                        [items]=\"appLogOptions\"\n                        [searchable]=\"false\"\n                        bindLabel=\"id\"\n                        bindValue=\"id\"\n                        class=\"with-circle\"\n                    >\n                    </ng-select>\n                </div>\n\n                <div class=\"form__field\">\n                    <label>{{ 'Currency' | translate }}</label>\n                    <ng-select\n                        (change)=\"onCurrencyChange()\"\n                        [(ngModel)]=\"variablesService.settings.currency\"\n                        [clearable]=\"false\"\n                        [items]=\"currenciesItems\"\n                        [searchable]=\"false\"\n                        bindLabel=\"label\"\n                        bindValue=\"id\"\n                        class=\"with-circle\"\n                    >\n                    </ng-select>\n                </div>\n\n                <div class=\"form__field\">\n                    <label>{{ 'SETTINGS.NOTIFICATIONS' | translate }}</label>\n                    <app-switch (emitChange)=\"toggleNotifications()\" [value]=\"currentNotificationsState\"></app-switch>\n                </div>\n\n                <div class=\"form__field\">\n                    <label>{{ 'SETTINGS.USE_TOR_TO_RELAY_TRANSACTIONS' | translate }} (Temporarily disabled)</label>\n                    <app-switch (emitChange)=\"toggleUseTor()\" [disabled]=\"true\" [value]=\"false && appUseTor\"></app-switch>\n                </div>\n\n                <div class=\"form__field\">\n                    <label>{{ 'SETTINGS.DARK_THEME' | translate }}</label>\n                    <app-switch (emitChange)=\"toggleDarkTheme()\" [value]=\"variablesService.settings.isDarkTheme\"></app-switch>\n                </div>\n\n                <div class=\"form__field\">\n                    <label>{{ 'SETTINGS.SHOW_BALANCE' | translate }}</label>\n                    <app-switch (emitChange)=\"showPrice()\" [value]=\"this.variablesService.visibilityBalance$ | async\"></app-switch>\n                </div>\n\n                <form [formGroup]=\"zanoCompanionForm\">\n                    <div class=\"form__field\">\n                        <label>\n                            {{ 'SETTINGS.FORM.ZANO_COMPANION.LABELS.LABEL1' | translate }}\n                            <ng-container *ngIf=\"!variablesService.appPass\">\n                                {{ 'SETTINGS.FORM.ZANO_COMPANION.LABELS.LABEL4' | translate }}\n                            </ng-container>\n                        </label>\n                        <app-switch formControlName=\"zanoCompation\"></app-switch>\n                    </div>\n                    <ng-container *ngIf=\"zanoCompanionForm.controls.zanoCompation.getRawValue()\">\n                        <div class=\"form__card\">\n                            <div class=\"form__field form__field--secret\">\n                                <label for=\"field-secret\">{{ 'SETTINGS.FORM.ZANO_COMPANION.LABELS.LABEL2' | translate }}</label>\n                                <input\n                                    (contextmenu)=\"\n                                        variablesService.onContextMenuOnlyCopy($event, zanoCompanionForm.controls['secret'].value)\n                                    \"\n                                    [class.invalid]=\"zanoCompanionForm.controls['secret'].invalid\"\n                                    [readonly]=\"true\"\n                                    class=\"form__field--input\"\n                                    formControlName=\"secret\"\n                                    id=\"field-secret\"\n                                    type=\"text\"\n                                />\n\n                                <button (click)=\"copySecret()\" class=\"btn--copy\">\n                                    <mat-icon svgIcon=\"zano-copy\"></mat-icon>\n                                </button>\n\n                                <button (click)=\"regenerateSecret()\" class=\"btn--regenerate\">\n                                    <mat-icon svgIcon=\"zano-regenerate\"></mat-icon>\n                                </button>\n\n                                <div *ngIf=\"isSecretWasCopied\" class=\"info success\" style=\"text-align: right\">\n                                    {{ 'SETTINGS.SECRET_WAS_COPIED' | translate }}\n                                </div>\n                            </div>\n\n                            <div class=\"form__field\">\n                                <label for=\"field-port\">{{ 'SETTINGS.FORM.ZANO_COMPANION.LABELS.LABEL3' | translate }}</label>\n                                <input\n                                    (contextmenu)=\"\n                                        variablesService.onContextMenuOnlyCopy($event, this.variablesService.rpc_port?.toString())\n                                    \"\n                                    [readonly]=\"true\"\n                                    [value]=\"this.variablesService.rpc_port\"\n                                    class=\"form__field--input\"\n                                    id=\"field-port\"\n                                    type=\"text\"\n                                />\n                            </div>\n                        </div>\n                    </ng-container>\n                </form>\n\n                <form (ngSubmit)=\"onSubmitChangePass()\" [formGroup]=\"changeForm\">\n                    <h4 class=\"master-password-title mb-2\">\n                        <ng-container *ngIf=\"!variablesService.appPass\">\n                            {{ 'SETTINGS.MASTER_PASSWORD.TITLE1' | translate }}\n                        </ng-container>\n                        <ng-container *ngIf=\"variablesService.appPass\">\n                            {{ 'SETTINGS.MASTER_PASSWORD.TITLE2' | translate }}\n                        </ng-container>\n                    </h4>\n\n                    <div class=\"form__card\">\n                        <div *ngIf=\"variablesService.appPass\" class=\"form__field\">\n                            <label for=\"old-password\">{{ 'SETTINGS.MASTER_PASSWORD.OLD' | translate }}</label>\n                            <input\n                                (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                                [class.invalid]=\"\n                                    changeForm.invalid &&\n                                    changeForm.controls['password'].valid &&\n                                    (changeForm.controls['password'].dirty || changeForm.controls['password'].touched) &&\n                                    changeForm.errors &&\n                                    changeForm.errors['pass_mismatch'] &&\n                                    changeForm.get('password').value.length > 0\n                                \"\n                                class=\"form__field--input\"\n                                formControlName=\"password\"\n                                id=\"old-password\"\n                                placeholder=\"{{ 'PLACEHOLDERS.PLACEHOLDER_OLD' | translate }}\"\n                                type=\"password\"\n                            />\n                            <div\n                                *ngIf=\"\n                                    changeForm.invalid &&\n                                    changeForm.controls['password'].valid &&\n                                    (changeForm.controls['password'].dirty || changeForm.controls['password'].touched) &&\n                                    changeForm.errors &&\n                                    changeForm.errors['pass_mismatch'] &&\n                                    changeForm.get('password').value.length > 0\n                                \"\n                                class=\"error\"\n                            >\n                                {{ 'SETTINGS.FORM_ERRORS.CURRENT_PASS_NOT_MATCH' | translate }}\n                            </div>\n                            <div\n                                *ngIf=\"\n                                    changeForm.invalid &&\n                                    (changeForm.controls['password'].dirty || changeForm.controls['password'].touched) &&\n                                    changeForm.controls['password'].errors?.pattern\n                                \"\n                                class=\"error\"\n                            >\n                                {{ 'ERRORS.REGEXP_INVALID_PASSWORD' | translate }}\n                            </div>\n                        </div>\n\n                        <div class=\"form__field\">\n                            <label for=\"new-password\">{{ 'SETTINGS.MASTER_PASSWORD.NEW' | translate }}</label>\n                            <input\n                                (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                                [class.invalid]=\"changeForm.controls['new_password'].touched && changeForm.controls['new_password'].invalid\"\n                                class=\"form__field--input\"\n                                formControlName=\"new_password\"\n                                id=\"new-password\"\n                                placeholder=\"{{ 'PLACEHOLDERS.PLACEHOLDER_NEW' | translate }}\"\n                                type=\"password\"\n                            />\n                            <div\n                                *ngIf=\"changeForm.controls['new_password'].touched && changeForm.controls['new_password'].invalid\"\n                                class=\"error\"\n                            >\n                                <div *ngIf=\"changeForm.controls['new_password'].errors?.pattern\">\n                                    {{ 'ERRORS.REGEXP_INVALID_PASSWORD' | translate }}\n                                </div>\n                                <div *ngIf=\"changeForm.controls['new_password'].hasError('required')\">\n                                    {{ 'ERRORS.REQUIRED' | translate }}\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form__field\">\n                            <label for=\"confirm-password\">{{ 'SETTINGS.MASTER_PASSWORD.CONFIRM' | translate }}</label>\n                            <input\n                                (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                                [class.invalid]=\"\n                                    changeForm.invalid &&\n                                    (changeForm.controls['new_confirmation'].dirty || changeForm.controls['new_confirmation'].touched) &&\n                                    changeForm.errors &&\n                                    changeForm.errors['mismatch'] &&\n                                    changeForm.get('new_confirmation').value.length > 0\n                                \"\n                                class=\"form__field--input\"\n                                formControlName=\"new_confirmation\"\n                                id=\"confirm-password\"\n                                placeholder=\"{{ 'PLACEHOLDERS.PLACEHOLDER_CONFIRM' | translate }}\"\n                                type=\"password\"\n                            />\n                            <div\n                                *ngIf=\"\n                                    changeForm.invalid &&\n                                    (changeForm.controls['new_confirmation'].dirty || changeForm.controls['new_confirmation'].touched) &&\n                                    changeForm.errors &&\n                                    changeForm.errors['mismatch'] &&\n                                    changeForm.get('new_confirmation').value.length > 0\n                                \"\n                                class=\"error\"\n                            >\n                                {{ 'SETTINGS.FORM_ERRORS.CONFIRM_NOT_MATCH' | translate }}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"submit-button-container\">\n                        <button [disabled]=\"!changeForm.valid\" class=\"primary big max-w-19-rem w-100\" type=\"submit\">\n                            {{ 'SETTINGS.MASTER_PASSWORD.BUTTON' | translate }}\n                        </button>\n                        <span *ngIf=\"ifSaved\" [class.active]=\"ifSaved\" class=\"ml-1 color-aqua\">{{\n                            'SETTINGS.SETTINGS_SAVED' | translate\n                        }}</span>\n                    </div>\n                </form>\n\n                <div class=\"mt-2\">\n                    <p *ngIf=\"!isBuildVersionWasCopied\">\n                        Build version: {{ currentBuild }}\n                        <button (click)=\"copyBuildVersion()\" class=\"btn--copy\">\n                            <mat-icon svgIcon=\"zano-copy\"></mat-icon>\n                        </button>\n                    </p>\n\n                    <p *ngIf=\"isBuildVersionWasCopied\" style=\"color: var(--aqua-500)\">\n                        {{ 'Build version was copied' | translate }}\n                    </p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, NgZone, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BackendService } from '@api/services/backend.service';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { ModalService } from '@parts/services/modal.service';\nimport { Wallet } from '@api/models/wallet.model';\nimport { hasOwnProperty } from '@parts/functions/has-own-property';\nimport BigNumber from 'bignumber.js';\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\nimport { AliasInfo } from '@api/models/alias.model';\n\n@Component({\n    selector: 'app-transfer-alias',\n    template: `\n        <div class=\"page-container\">\n            <div class=\"toolbar mb-2\">\n                <div class=\"left\">\n                    <app-back-button></app-back-button>\n                    <h1 class=\"ml-2\">{{ 'BREADCRUMBS.TRANSFER_ALIAS' | translate }}</h1>\n                </div>\n                <div class=\"right\"></div>\n            </div>\n\n            <div class=\"page-content\">\n                <app-breadcrumbs class=\"mb-2\" [items]=\"breadcrumbItems\"></app-breadcrumbs>\n\n                <div class=\"scrolled-content\">\n                    <form class=\"form\">\n                        <div class=\"form__field\">\n                            <label for=\"alias-name\">\n                                {{ 'TRANSFER_ALIAS.NAME.LABEL' | translate }}\n                            </label>\n                            <input\n                                [value]=\"'@' + alias_info.alias\"\n                                class=\"form__field--input\"\n                                id=\"alias-name\"\n                                name=\"alias-name\"\n                                placeholder=\"{{ 'EDIT_ALIAS.NAME.PLACEHOLDER' | translate }}\"\n                                readonly\n                                type=\"text\"\n                            />\n                        </div>\n\n                        <div class=\"form__field textarea\">\n                            <label for=\"alias-comment\">\n                                {{ 'TRANSFER_ALIAS.COMMENT.LABEL' | translate }}\n                            </label>\n                            <textarea\n                                [(ngModel)]=\"alias_info.comment\"\n                                id=\"alias-comment\"\n                                name=\"alias-comment\"\n                                placeholder=\"{{ 'EDIT_ALIAS.COMMENT.PLACEHOLDER' | translate }}\"\n                            ></textarea>\n                        </div>\n\n                        <div class=\"form__field\">\n                            <label for=\"alias-transfer\">\n                                {{ 'TRANSFER_ALIAS.ADDRESS.LABEL' | translate }}\n                            </label>\n                            <input\n                                (contextmenu)=\"variablesService.onContextMenu($event)\"\n                                (input)=\"changeAddress()\"\n                                [(ngModel)]=\"transferAddress\"\n                                [class.invalid]=\"\n                                    transferAddress.length > 0 &&\n                                    (transferAddressAlias ||\n                                        !transferAddressValid ||\n                                        (transferAddressValid && !permissionSend) ||\n                                        notEnoughMoney)\n                                \"\n                                class=\"form__field--input\"\n                                id=\"alias-transfer\"\n                                name=\"alias-transfer\"\n                                placeholder=\"{{ 'TRANSFER_ALIAS.ADDRESS.PLACEHOLDER' | translate }}\"\n                                type=\"text\"\n                            />\n                            <div\n                                *ngIf=\"\n                                    transferAddress.length > 0 &&\n                                    (transferAddressAlias ||\n                                        !transferAddressValid ||\n                                        (transferAddressValid && !permissionSend) ||\n                                        notEnoughMoney)\n                                \"\n                                class=\"error\"\n                            >\n                                <div *ngIf=\"!transferAddressValid\">\n                                    {{ 'TRANSFER_ALIAS.FORM_ERRORS.WRONG_ADDRESS' | translate }}\n                                </div>\n                                <div *ngIf=\"transferAddressAlias || (transferAddressValid && !permissionSend)\">\n                                    {{ 'TRANSFER_ALIAS.FORM_ERRORS.ALIAS_EXISTS' | translate }}\n                                </div>\n                                <div *ngIf=\"notEnoughMoney && transferAddressValid && !transferAddressAlias\">\n                                    {{ 'TRANSFER_ALIAS.FORM_ERRORS.NO_MONEY' | translate }}\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"alias-cost mb-2\">\n                            {{\n                                'TRANSFER_ALIAS.COST'\n                                    | translate\n                                        : {\n                                              value: variablesService.default_fee,\n                                              currency: variablesService.defaultTicker\n                                          }\n                            }}\n                        </div>\n\n                        <button\n                            (click)=\"transferAlias()\"\n                            [disabled]=\"transferAddressAlias || !transferAddressValid || notEnoughMoney\"\n                            class=\"primary big w-100\"\n                            type=\"button\"\n                        >\n                            {{ 'TRANSFER_ALIAS.BUTTON_TRANSFER' | translate }}\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                overflow: hidden;\n            }\n        `,\n    ],\n})\nexport class TransferAliasComponent implements OnInit {\n    wallet: Wallet;\n\n    alias_info: AliasInfo;\n\n    breadcrumbItems: BreadcrumbItems = [\n        {\n            routerLink: '/wallet/history',\n            title: this.variablesService.current_wallet.name,\n        },\n        {\n            title: 'BREADCRUMBS.TRANSFER_ALIAS',\n        },\n    ];\n\n    transferAddress = '';\n\n    transferAddressValid: boolean;\n\n    transferAddressAlias: boolean;\n\n    permissionSend: boolean;\n\n    notEnoughMoney: boolean;\n\n    requestProcessing = false;\n\n    historyState: { alias_info?: AliasInfo; navigationId?: number };\n\n    constructor(\n        public variablesService: VariablesService,\n        private router: Router,\n        private backend: BackendService,\n        private modalService: ModalService,\n        private ngZone: NgZone\n    ) {\n        this.historyState = history.state || {};\n    }\n\n    ngOnInit(): void {\n        this.wallet = this.variablesService.current_wallet;\n        this.alias_info = { ...(this.historyState.alias_info ? this.historyState.alias_info : this.wallet.alias_info) };\n        const unlocked_balance = new BigNumber(this.wallet.getBalanceByTicker('ZANO')?.unlocked || 0);\n        this.notEnoughMoney = unlocked_balance.isLessThan(this.variablesService.default_fee_big);\n    }\n\n    changeAddress(): void {\n        this.backend.validateAddress(this.transferAddress, (status) => {\n            this.transferAddressValid = status;\n            if (status) {\n                this.backend.getPoolInfo((statusPool, dataPool) => {\n                    if (hasOwnProperty(dataPool, 'aliases_que') && dataPool.aliases_que.length) {\n                        this.setStatus(!dataPool.aliases_que.some((el) => el.address === this.transferAddress));\n                    } else {\n                        this.setStatus(status);\n                    }\n                });\n            } else {\n                this.setStatus(false);\n            }\n        });\n    }\n\n    setStatus(statusSet): void {\n        this.permissionSend = statusSet;\n        if (statusSet) {\n            this.backend.getAliasInfoByAddress(this.transferAddress, (status) => {\n                this.ngZone.run(() => {\n                    if (status) {\n                        this.transferAddressAlias = true;\n                        this.permissionSend = false;\n                    } else {\n                        this.transferAddressAlias = false;\n                    }\n                });\n            });\n        } else {\n            this.ngZone.run(() => {\n                this.transferAddressAlias = false;\n            });\n        }\n    }\n\n    transferAlias(): void {\n        if (this.requestProcessing || !this.permissionSend || !this.transferAddressValid || this.notEnoughMoney) {\n            return;\n        }\n        this.requestProcessing = true;\n        this.backend.updateAlias(\n            this.wallet.wallet_id,\n            { ...this.alias_info, address: this.transferAddress },\n            this.variablesService.default_fee,\n            (status, data) => {\n                if (status && hasOwnProperty(data, 'success') && data.success) {\n                    this.modalService.prepareModal('info', 'TRANSFER_ALIAS.REQUEST_SEND_REG');\n                    this.ngZone.run(() => {\n                        this.router.navigate(['/wallet/']);\n                    });\n                }\n                this.requestProcessing = false;\n            }\n        );\n    }\n}\n","import { Component, inject, NgZone } from '@angular/core';\nimport { NonNullableFormBuilder, Validators } from '@angular/forms';\nimport { BackendService } from '@api/services/backend.service';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { Router } from '@angular/router';\nimport { hasOwnProperty } from '@parts/functions/has-own-property';\nimport { REG_EXP_PASSWORD, ZanoValidators } from '@parts/utils/zano-validators';\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\n\n@Component({\n    selector: 'app-wallet-details',\n    template: `\n        <div class=\"page-container\">\n            <div class=\"toolbar mb-2\">\n                <div class=\"left\">\n                    <app-back-button></app-back-button>\n                    <h1 class=\"ml-2\">{{ 'BREADCRUMBS.WALLET_DETAILS' | translate }}</h1>\n                </div>\n                <div class=\"right\"></div>\n            </div>\n\n            <div class=\"page-content\">\n                <app-breadcrumbs class=\"mb-2\" [items]=\"breadcrumbItems\"></app-breadcrumbs>\n\n                <div class=\"scrolled-content\">\n                    <div fxFlexFill fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n                        <form (ngSubmit)=\"beforeSubmitDetails()\" [formGroup]=\"detailsForm\" class=\"form\">\n                            <div class=\"form__field\">\n                                <label for=\"wallet-name\">{{ 'WALLET_DETAILS.LABEL_NAME' | translate }}</label>\n                                <input\n                                    (contextmenu)=\"variablesService.onContextMenu($event)\"\n                                    [maxLength]=\"variablesService.maxWalletNameLength\"\n                                    [placeholder]=\"'PLACEHOLDERS.WALLET_NAME_PLACEHOLDER' | translate\"\n                                    class=\"form__field--input\"\n                                    formControlName=\"name\"\n                                    id=\"wallet-name\"\n                                    type=\"text\"\n                                />\n                                <div\n                                    *ngIf=\"\n                                        detailsForm.controls.name.invalid &&\n                                        (detailsForm.controls.name.dirty || detailsForm.controls.name.touched)\n                                    \"\n                                    class=\"error\"\n                                >\n                                    <div *ngIf=\"detailsForm.controls.name.errors['duplicate']\">\n                                        {{ 'WALLET_DETAILS.FORM_ERRORS.NAME_DUPLICATE' | translate }}\n                                    </div>\n                                    <div *ngIf=\"detailsForm.controls.name.value.length >= variablesService.maxWalletNameLength\">\n                                        {{ 'WALLET_DETAILS.FORM_ERRORS.MAX_LENGTH' | translate }}\n                                    </div>\n                                    <div *ngIf=\"detailsForm.controls.name.hasError('required')\">\n                                        {{ 'WALLET_DETAILS.FORM_ERRORS.NAME_REQUIRED' | translate }}\n                                    </div>\n                                </div>\n                            </div>\n                            <div fxLayout=\"row nowrap\" fxLayoutAlign=\"start center\" fxLayoutGap=\"1rem\">\n                                <button [disabled]=\"detailsForm.invalid\" class=\"primary big max-w-19-rem w-100 mb-1\" type=\"submit\">\n                                    {{ 'SETTINGS.MASTER_PASSWORD.BUTTON' | translate }}\n                                </button>\n                                <p *ngIf=\"ifSaved\" class=\"color-aqua\">Saved!</p>\n                            </div>\n                            <div class=\"form__field\">\n                                <label for=\"wallet-location\">{{ 'WALLET_DETAILS.LABEL_FILE_LOCATION' | translate }}</label>\n                                <input\n                                    (contextmenu)=\"variablesService.onContextMenuOnlyCopy($event, detailsForm.controls.path.value)\"\n                                    class=\"form__field--input cursor-default\"\n                                    formControlName=\"path\"\n                                    id=\"wallet-location\"\n                                    readonly\n                                    type=\"text\"\n                                />\n                            </div>\n                        </form>\n\n                        <ng-container\n                            *ngIf=\"!variablesService.current_wallet?.is_auditable || !variablesService.current_wallet?.is_watch_only\"\n                        >\n                            <ng-container *ngIf=\"!showSeed; else seedPhraseContent\">\n                                <form\n                                    (ngSubmit)=\"beforeSubmitPasswordSeedPhrase()\"\n                                    [formGroup]=\"passwordSeedPhraseForm\"\n                                    class=\"form form__card pb-2\"\n                                    fxFlex=\"0 0 auto\"\n                                    fxLayout=\"column\"\n                                    fxLayoutAlign=\"start center\"\n                                >\n                                    <div class=\"form__field\">\n                                        <label for=\"create-password\">{{ 'WALLET_DETAILS.CREATE_PASSWORD_SECURE' | translate }}</label>\n                                        <input\n                                            class=\"form__field--input\"\n                                            formControlName=\"password\"\n                                            id=\"create-password\"\n                                            placeholder=\"{{ 'PLACEHOLDERS.PASSWORD_PLACEHOLDER' | translate }}\"\n                                            type=\"password\"\n                                        />\n                                        <div\n                                            *ngIf=\"\n                                                passwordSeedPhraseForm.controls.password.invalid &&\n                                                (passwordSeedPhraseForm.controls['password'].dirty ||\n                                                    passwordSeedPhraseForm.controls['password'].touched)\n                                            \"\n                                            class=\"error\"\n                                        >\n                                            <ng-container *ngIf=\"passwordSeedPhraseForm.controls['password'].hasError('pattern')\">\n                                                {{ 'ERRORS.REGEXP_INVALID_PASSWORD' | translate }}\n                                            </ng-container>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"form__field\">\n                                        <label for=\"confirm-password\">{{ 'WALLET_DETAILS.FORM.CONFIRM_PASSWORD' | translate }}</label>\n                                        <input\n                                            [class.invalid]=\"\n                                                passwordSeedPhraseForm.invalid &&\n                                                passwordSeedPhraseForm.get('confirmPassword').value.length > 0\n                                            \"\n                                            class=\"form__field--input\"\n                                            formControlName=\"confirmPassword\"\n                                            id=\"confirm-password\"\n                                            placeholder=\"{{ 'PLACEHOLDERS.PLACEHOLDER_CONFIRM' | translate }}\"\n                                            type=\"password\"\n                                        />\n                                        <div\n                                            *ngIf=\"\n                                                passwordSeedPhraseForm.invalid &&\n                                                (passwordSeedPhraseForm.controls['confirmPassword'].dirty ||\n                                                    passwordSeedPhraseForm.controls['confirmPassword'].touched)\n                                            \"\n                                            class=\"error\"\n                                        >\n                                            <div\n                                                *ngIf=\"\n                                                    passwordSeedPhraseForm.invalid &&\n                                                    passwordSeedPhraseForm.get('confirmPassword').value.length > 0\n                                                \"\n                                            >\n                                                {{ 'WALLET_DETAILS.FORM_ERRORS.PASSWORDS_DONT_MATCH' | translate }}\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <button [disabled]=\"!passwordSeedPhraseForm.valid\" class=\"primary big w-100 mb-2\" type=\"submit\">\n                                        <mat-icon svgIcon=\"zano-check-shield\" class=\"mr-1\"></mat-icon>\n                                        {{ 'WALLET_DETAILS.FORM.GENERATE_SECURE_SEED' | translate }}\n                                    </button>\n\n                                    <p class=\"color-primary\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n                                        <mat-icon svgIcon=\"zano-info\" class=\"mr-1\"></mat-icon>\n                                        {{ 'WALLET_DETAILS.FORM.SECURED_SEED_WILL_REQUIRE' | translate }}\n                                    </p>\n                                </form>\n                            </ng-container>\n\n                            <ng-template #seedPhraseContent>\n                                <div class=\"seed-phrase form__card pb-2\" fxFlex=\"0 0 auto\" fxLayout=\"column\">\n                                    <div class=\"header mb-2\" fxFlex=\"0 0 auto\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n                                        <div class=\"left\">\n                                            <span>{{ 'WALLET_DETAILS.LABEL_SEED_PHRASE' | translate }}</span>\n                                        </div>\n                                        <div class=\"right\">\n                                            <span\n                                                *ngIf=\"passwordSeedPhraseForm.controls.password.value.length === 0\"\n                                                class=\"status color-red\"\n                                                fxLayout=\"row\"\n                                                fxLayoutAlign=\"start center\"\n                                            >\n                                                {{ 'WALLET_DETAILS.SEED_IS_UNSECURED' | translate }}\n                                                <mat-icon svgIcon=\"zano-unsecured\" class=\"ml-1\"></mat-icon>\n                                            </span>\n                                            <span\n                                                *ngIf=\"passwordSeedPhraseForm.controls.password.value.length > 0\"\n                                                class=\"status color-aqua\"\n                                                fxLayout=\"row\"\n                                                fxLayoutAlign=\"start center\"\n                                            >\n                                                {{ 'WALLET_DETAILS.SEED_IS_SECURED' | translate }}\n                                                <mat-icon svgIcon=\"zano-secured\" class=\"ml-1\"></mat-icon>\n                                            </span>\n                                        </div>\n                                    </div>\n                                    <div\n                                        (contextmenu)=\"variablesService.onContextMenuOnlyCopy($event, seedPhrase)\"\n                                        class=\"content mb-1\"\n                                        fxLayout=\"row wrap\"\n                                    >\n                                        <ng-container *ngFor=\"let word of seedPhrase.split(' '); let index = index\">\n                                            <div\n                                                class=\"item p-1 mr-1 mb-1 border-radius-0_8-rem\"\n                                                fxLayout=\"row nowrap\"\n                                                fxLayoutAlign=\"start center\"\n                                            >\n                                                <div class=\"number p-1 mr-1\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n                                                    {{ index + 1 }}\n                                                </div>\n                                                <span class=\"word\" fxLayout=\"row\">{{ word }}</span>\n                                            </div>\n                                        </ng-container>\n                                    </div>\n                                    <div class=\"footer max-w-50-rem w-100\" fxLayout=\"column\">\n                                        <button (click)=\"copySeedPhrase()\" class=\"outline big w-100 mb-2\" type=\"button\">\n                                            <ng-container *ngIf=\"!seedPhraseCopied\">\n                                                <mat-icon svgIcon=\"zano-copy\" class=\"mr-1\"></mat-icon>\n                                                {{ 'SEED_PHRASE.BUTTON_COPY' | translate }}\n                                            </ng-container>\n                                            <ng-container *ngIf=\"seedPhraseCopied\">\n                                                <mat-icon svgIcon=\"zano-check\" class=\"mr-1\"></mat-icon>\n                                                {{ 'SEED_PHRASE.BUTTON_COPIED' | translate }}\n                                            </ng-container>\n                                        </button>\n                                        <p *ngIf=\"passwordSeedPhraseForm.controls.password.value.length > 0\" class=\"text-align-center\">\n                                            <mat-icon svgIcon=\"zano-info\" class=\"mr-1\"></mat-icon>\n                                            <span class=\"color-primary\">{{ 'WALLET_DETAILS.REMEMBER_YOU_WILL_REQUIRE' | translate }}</span>\n                                        </p>\n                                    </div>\n                                </div>\n                            </ng-template>\n                        </ng-container>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n})\nexport class WalletDetailsComponent {\n    breadcrumbItems: BreadcrumbItems = [\n        {\n            routerLink: '/wallet/history',\n            title: this.variablesService.current_wallet.name,\n        },\n        {\n            title: 'BREADCRUMBS.WALLET_DETAILS',\n        },\n    ];\n\n    seedPhrase = '';\n\n    showSeed = false;\n\n    seedPhraseCopied = false;\n\n    ifSaved = false;\n\n    fb = inject(NonNullableFormBuilder);\n\n    detailsForm = this.fb.group({\n        name: this.fb.control('', [Validators.required, ZanoValidators.duplicate(this.variablesService.walletNamesForComparisons)]),\n        path: this.fb.control(''),\n    });\n\n    passwordSeedPhraseForm = this.fb.group(\n        {\n            password: this.fb.control('', Validators.pattern(REG_EXP_PASSWORD)),\n            confirmPassword: this.fb.control(''),\n        },\n        {\n            validators: [ZanoValidators.formMatch('password', 'confirmPassword')],\n        }\n    );\n\n    constructor(\n        public variablesService: VariablesService,\n        private router: Router,\n        private backend: BackendService,\n        private ngZone: NgZone\n    ) {\n        const { current_wallet } = this.variablesService;\n        const { name, path } = current_wallet;\n        this.detailsForm.patchValue(\n            {\n                name,\n                path,\n            },\n            {\n                emitEvent: false,\n            }\n        );\n    }\n\n    beforeSubmitPasswordSeedPhrase(): void {\n        if (this.passwordSeedPhraseForm.invalid) {\n            this.passwordSeedPhraseForm.updateValueAndValidity();\n            this.passwordSeedPhraseForm.markAllAsTouched();\n            return;\n        }\n\n        this.submitPasswordSeedPhrase();\n    }\n\n    submitPasswordSeedPhrase(): void {\n        const { wallet_id } = this.variablesService.current_wallet;\n        const { password: seed_password } = this.passwordSeedPhraseForm.getRawValue();\n        this.backend.getSmartWalletInfo({ wallet_id, seed_password }, (status, data) => {\n            if (hasOwnProperty(data, 'seed_phrase')) {\n                this.ngZone.run(() => {\n                    this.showSeed = true;\n                    this.seedPhrase = data['seed_phrase'].trim();\n                });\n            }\n        });\n    }\n\n    beforeSubmitDetails(): void {\n        if (this.detailsForm.invalid) {\n            this.detailsForm.updateValueAndValidity();\n            this.detailsForm.markAllAsTouched();\n            return;\n        }\n\n        this.submitDetails();\n    }\n\n    submitDetails(): void {\n        const getRawValue = this.detailsForm.getRawValue();\n        const { name } = getRawValue;\n        this.variablesService.current_wallet.name = name;\n        this.detailsForm.reset(getRawValue);\n        this.refreshDetailsFormValidators();\n        this.ifSaved = true;\n        setTimeout(() => {\n            this.ifSaved = false;\n        }, 3000);\n    }\n\n    copySeedPhrase(): void {\n        this.backend.setClipboard(this.seedPhrase, () => {\n            this.ngZone.run(() => {\n                setTimeout(() => {\n                    this.seedPhraseCopied = false;\n                }, 4000);\n                this.seedPhraseCopied = true;\n            });\n        });\n    }\n\n    private refreshDetailsFormValidators(): void {\n        const walletNamesForComparisons = this.variablesService.walletNamesForComparisons;\n        const validatorsForName = [Validators.required, ZanoValidators.duplicate(walletNamesForComparisons)];\n        this.detailsForm.controls.name.clearValidators();\n        this.detailsForm.controls.name.setValidators(validatorsForName);\n        this.detailsForm.controls.name.updateValueAndValidity();\n    }\n}\n","import { Component, inject, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { Subject } from 'rxjs';\nimport { AssetBalance, ParamsRemoveCustomAssetId } from '@api/models/assets.model';\nimport { PaginatePipeArgs } from 'ngx-pagination';\nimport { takeUntil } from 'rxjs/operators';\nimport { AssetDetailsComponent } from '@parts/modals/asset-details/asset-details.component';\nimport { BackendService } from '@api/services/backend.service';\nimport { ConfirmModalComponent, ConfirmModalData } from '@parts/modals/confirm-modal/confirm-modal.component';\nimport { WalletsService } from '@parts/services/wallets.service';\nimport { BigNumber } from 'bignumber.js';\nimport { LOCKED_BALANCE_HELP_PAGE } from '@parts/data/constants';\nimport { IntToMoneyPipe } from '@parts/pipes';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ZANO_ASSET_INFO } from '@parts/data/assets';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { intToMoney } from '@parts/functions/int-to-money';\n\n@Component({\n    selector: 'app-assets',\n    templateUrl: `./assets.component.html`,\n})\nexport class AssetsComponent implements OnInit, OnDestroy {\n    paginatePipeArgs: PaginatePipeArgs = {\n        id: 'pagination-assets-id',\n        itemsPerPage: 10,\n        currentPage: 1,\n    };\n\n    private readonly _destroy$ = new Subject<void>();\n\n    private readonly _matDialog: MatDialog = inject(MatDialog);\n\n    public readonly variablesService: VariablesService = inject(VariablesService);\n\n    private readonly _backendService: BackendService = inject(BackendService);\n\n    private readonly _walletsService: WalletsService = inject(WalletsService);\n\n    private readonly _intToMoneyPipe: IntToMoneyPipe = inject(IntToMoneyPipe);\n\n    private readonly _translateService: TranslateService = inject(TranslateService);\n\n    private readonly _ngZone: NgZone = inject(NgZone);\n\n    private readonly _router: Router = inject(Router);\n\n    get isShowPagination(): boolean {\n        const { current_wallet } = this.variablesService;\n        if (current_wallet) {\n            const { balances } = current_wallet;\n            return (balances?.length || 0) > this.paginatePipeArgs.itemsPerPage;\n        }\n        return false;\n    }\n\n    ngOnInit(): void {\n        this._listenChangeWallet();\n    }\n\n    ngOnDestroy(): void {\n        this._destroy$.next();\n        this._destroy$.complete();\n    }\n\n    getFiatValue(balance: AssetBalance): string | undefined {\n        const priceData = this.variablesService.currentPriceForAssets[balance.asset_info.asset_id]?.data;\n        if (!priceData || typeof priceData === 'string') return;\n\n        const currency = this.variablesService.settings.currency;\n        const fiatPrice = priceData.fiat_prices?.[currency];\n\n        if (!fiatPrice) return;\n\n        const amount = intToMoney(balance.total, balance.asset_info.decimal_point);\n        const fiatValue = BigNumber(amount).multipliedBy(fiatPrice).toFixed(BigNumber(fiatPrice).decimalPlaces() ?? 10);\n\n        return `${fiatValue}`;\n    }\n\n\n    getFiatPrice(balance: AssetBalance): {\n        value: string | number;\n        currency: string;\n        change?: string;\n        changeClass?: string;\n        showChange?: boolean;\n    } | null {\n        const currentPrice = this.variablesService.currentPriceForAssets[balance.asset_info.asset_id];\n\n        if (!currentPrice || typeof currentPrice.data === 'string') return null;\n\n        const currency = this.variablesService.settings.currency;\n        const fiatPrice = currentPrice.data.fiat_prices[currency] ?? 0;\n\n        const result = {\n            value: fiatPrice,\n            currency: currency.toUpperCase(),\n            showChange: false,\n        };\n\n        if (currency === 'usd') {\n            const change = currentPrice.data.usd_24h_change ?? 0;\n            return {\n                ...result,\n                showChange: change > 0 || change < 0,\n                change: change.toFixed(2),\n                changeClass: change > 0 ? 'color-aqua' : change < 0 ? 'color-red' : '',\n            };\n        }\n\n        return result;\n    }\n\n    trackByAssets(index: number, { asset_info: { asset_id } }: AssetBalance): number | string {\n        return asset_id || index;\n    }\n\n    trackByPages(index: number): number | string {\n        return index;\n    }\n\n    assetDetails(balance: AssetBalance): void {\n        const { asset_info } = balance;\n        const config: MatDialogConfig = {\n            data: {\n                asset_info,\n            },\n        };\n        this._matDialog.open(AssetDetailsComponent, config);\n    }\n\n    beforeRemoveAsset(balance: AssetBalance): void {\n        const { full_name } = balance.asset_info;\n        const config: MatDialogConfig<ConfirmModalData> = {\n            data: {\n                title: this._translateService.instant('ASSETS.MODALS.CONFIRM_MODAL.TITLE', { full_name }),\n            },\n        };\n\n        this._matDialog\n            .open<ConfirmModalComponent, ConfirmModalData, boolean>(ConfirmModalComponent, config)\n            .afterClosed()\n            .pipe(takeUntil(this._destroy$))\n            .subscribe({\n                next: (confirmed) => confirmed && this._removeAsset(balance),\n            });\n    }\n\n    private _removeAsset(balance: AssetBalance): void {\n        const { current_wallet, verifiedAssetIdWhitelist } = this.variablesService;\n        const { wallet_id, transfer_form_value } = current_wallet;\n        const {\n            asset_info: { asset_id },\n        } = balance;\n\n        const isVerifiedAsset: boolean = verifiedAssetIdWhitelist.includes(asset_id);\n\n        if (isVerifiedAsset) {\n            current_wallet.addAssetToLocalBlacklistVerifiedAssets(asset_id);\n        } else {\n            const params: ParamsRemoveCustomAssetId = {\n                wallet_id,\n                asset_id,\n            };\n\n            this._backendService.removeCustomAssetId(params, () => {\n                this._ngZone.run(() => {\n                    if (transfer_form_value?.asset_id === asset_id) {\n                        this._walletsService.currentWallet.transfer_form_value.asset_id = ZANO_ASSET_INFO.asset_id;\n                    }\n\n                    this._walletsService.updateWalletInfo(current_wallet);\n                });\n            });\n        }\n    }\n\n    getBalanceTooltip(balance: AssetBalance): HTMLDivElement {\n        const tooltip = document.createElement('div');\n        const scrollWrapper = document.createElement('div');\n        const visibilityBalance = this.variablesService.visibilityBalance$.value;\n\n        if (!balance) {\n            return null;\n        }\n\n        scrollWrapper.classList.add('balance-scroll-list');\n        [balance].forEach(({ unlocked, total, asset_info: { ticker, decimal_point } }: AssetBalance) => {\n            const available = document.createElement('span');\n            available.setAttribute('class', 'available');\n            available.innerText = `${this._translateService.instant('WALLET.AVAILABLE_BALANCE')} `;\n            const availableB = document.createElement('b');\n            availableB.innerText = visibilityBalance\n                ? `${this._intToMoneyPipe.transform(unlocked, decimal_point)} ${ticker || '---'}`\n                : '******';\n            available.appendChild(availableB);\n            scrollWrapper.appendChild(available);\n\n            const locked = document.createElement('span');\n            locked.setAttribute('class', 'locked');\n            locked.innerText = `${this._translateService.instant('WALLET.LOCKED_BALANCE')} `;\n            const lockedB = document.createElement('b');\n            lockedB.innerText = visibilityBalance\n                ? `${this._intToMoneyPipe.transform(new BigNumber(total).minus(unlocked), decimal_point)} ${ticker || '---'}`\n                : '******';\n            locked.appendChild(lockedB);\n            scrollWrapper.appendChild(locked);\n        });\n        tooltip.appendChild(scrollWrapper);\n        const link = document.createElement('span');\n        link.setAttribute('class', 'link');\n        link.innerHTML = this._translateService.instant('WALLET.LOCKED_BALANCE_LINK');\n        link.addEventListener('click', () => {\n            this._backendService.openUrlInBrowser(LOCKED_BALANCE_HELP_PAGE);\n        });\n        tooltip.appendChild(link);\n        return tooltip;\n    }\n\n    isShowDeleteAsset(balance: AssetBalance): boolean {\n        const {\n            asset_info: { asset_id },\n        } = balance;\n        /** You can't delete zano */\n        return ![ZANO_ASSET_INFO.asset_id].includes(asset_id);\n    }\n\n    private _listenChangeWallet(): void {\n        const { currentWalletChangedEvent } = this.variablesService;\n        currentWalletChangedEvent.pipe(takeUntil(this._destroy$)).subscribe({\n            next: () => {\n                this.paginatePipeArgs.currentPage = 0;\n            },\n        });\n    }\n\n    isWalletReady(): boolean {\n        const { current_wallet, daemon_state } = this.variablesService;\n        const isWalletLoaded: boolean = current_wallet.loaded;\n        const isDaemonReady: boolean = daemon_state === 2;\n        const isWalletUsable = !current_wallet.is_watch_only;\n\n        return isWalletLoaded && isDaemonReady && isWalletUsable;\n    }\n\n    navigateToSend(asset: AssetBalance): void {\n        if (this.isWalletReady()) {\n            this._router.navigate(['/wallet/send'], { state: { asset } }).then();\n        }\n    }\n}\n","<div fxFlexFill fxLayout=\"column\">\n    <div [class.mb-2]=\"isShowPagination\" class=\"scrolled-content\" fxFlex=\"1 1 auto\">\n        <table class=\"zano-table assets-table\">\n            <thead>\n                <tr>\n                    <th>\n                        <div class=\"bg title\">\n                            {{ 'ASSETS.TABLE.LABELS.NAME' | translate }}\n                        </div>\n                    </th>\n                    <th>\n                        <div class=\"bg title\">\n                            {{ 'ASSETS.TABLE.LABELS.BALANCE' | translate }}\n                        </div>\n                    </th>\n                    <th>\n                        <div class=\"bg title\">\n                            {{ 'ASSETS.TABLE.LABELS.VALUE' | translate }}\n                        </div>\n                    </th>\n                    <th>\n                        <div class=\"bg title\">\n                            {{ 'ASSETS.TABLE.LABELS.PRICE' | translate }}\n                        </div>\n                    </th>\n                    <th>\n                        <div class=\"bg title\">&nbsp;</div>\n                    </th>\n                </tr>\n                <div class=\"row-divider\"></div>\n            </thead>\n            <tbody>\n                <ng-container\n                    *ngFor=\"\n                        let balance of variablesService.current_wallet.balances$ | async | paginate : paginatePipeArgs;\n                        trackBy: trackByAssets\n                    \"\n                >\n                    <tr\n                        (click)=\"navigateToSend(balance)\"\n                        [delay]=\"100\"\n                        [placement]=\"'bottom'\"\n                        [timeDelay]=\"1500\"\n                        [tooltipClass]=\"'balance-tooltip'\"\n                        [tooltip]=\"getBalanceTooltip(balance)\"\n                    >\n                        <td>\n                            <div class=\"text-ellipsis\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"2rem\">\n                                <div [innerHTML]=\"balance.asset_info | getLogoByAssetInfo\" class=\"token-logo mr-1\"></div>\n                                <b class=\"text-ellipsis\">{{ balance.asset_info.full_name }}</b>\n                            </div>\n                        </td>\n                        <td>\n                            <div class=\"text-ellipsis\">\n                                <b *appVisibilityBalance>\n                                    {{ balance.total | intToMoney : balance.asset_info.decimal_point }}\n                                    {{ balance.asset_info.ticker }}\n                                </b>\n                            </div>\n                        </td>\n\n                        <td>\n                            <div class=\"text-ellipsis\">\n                                <b *appVisibilityBalance>\n                                    <ng-container *ngIf=\"!!getFiatValue(balance)\">\n                                        {{ getFiatValue(balance) }} {{ variablesService.settings.currency.toUpperCase() }}\n                                    </ng-container>\n                                </b>\n                            </div>\n                        </td>\n\n                        <td>\n                            <div class=\"text-ellipsis\">\n                                <ng-container *ngIf=\"getFiatPrice(balance) as price\">\n                                    <b class=\"mr-1\">{{ price.value }} {{ price.currency }}</b>\n                                    <span *ngIf=\"price.showChange\" [ngClass]=\"price.changeClass\"> {{ price.change }} % </span>\n                                </ng-container>\n                            </div>\n                        </td>\n\n                        <td class=\"text-align-end\">\n                            <button\n                                (click)=\"$event.stopPropagation()\"\n                                [matMenuTriggerFor]=\"menu\"\n                                class=\"btn-icon circle row-options small\"\n                                type=\"button\"\n                            >\n                                <mat-icon class=\"small\" svgIcon=\"zano-row-options\"></mat-icon>\n                            </button>\n\n                            <mat-menu #menu=\"matMenu\" class=\"zano-mat-menu\">\n                                <button (click)=\"assetDetails(balance)\" mat-menu-item>\n                                    <mat-icon svgIcon=\"zano-info-v2\"></mat-icon>\n                                    <span>{{ 'ASSETS.DROP_DOWN_MENU.ASSET_DETAILS' | translate }}</span>\n                                </button>\n                                <ng-container *ngIf=\"isWalletReady()\">\n                                    <button (click)=\"navigateToSend(balance)\" mat-menu-item>\n                                        <mat-icon svgIcon=\"zano-send\"></mat-icon>\n                                        <span>{{ 'ASSETS.DROP_DOWN_MENU.SEND' | translate }}</span>\n                                    </button>\n\n                                    <ng-container *ngIf=\"variablesService.is_hardfok_active$ | async\">\n                                        <button [state]=\"{ asset: balance }\" mat-menu-item routerLink=\"/wallet/create-swap\">\n                                            <mat-icon svgIcon=\"zano-swap\"></mat-icon>\n                                            <span>{{ 'ASSETS.DROP_DOWN_MENU.SWAP' | translate }}</span>\n                                        </button>\n                                    </ng-container>\n\n                                    <ng-container *ngIf=\"isShowDeleteAsset(balance)\">\n                                        <button (click)=\"beforeRemoveAsset(balance)\" mat-menu-item>\n                                            <mat-icon svgIcon=\"zano-delete\"></mat-icon>\n                                            <span>{{ 'ASSETS.DROP_DOWN_MENU.REMOVE_ASSET' | translate }}</span>\n                                        </button>\n                                    </ng-container>\n                                </ng-container>\n                            </mat-menu>\n                        </td>\n                    </tr>\n                    <tr class=\"row-divider\"></tr>\n                </ng-container>\n            </tbody>\n        </table>\n    </div>\n\n    <pagination-template\n        #p=\"paginationApi\"\n        (pageChange)=\"paginatePipeArgs.currentPage = $event\"\n        *ngIf=\"isShowPagination\"\n        [id]=\"paginatePipeArgs.id\"\n        class=\"ngx-pagination custom-pagination\"\n    >\n        <button (click)=\"p.previous()\" [disabled]=\"p.isFirstPage()\" class=\"pagination-previous btn-icon circle small mr-0_5\">\n            <mat-icon svgIcon=\"zano-arrow-left\"></mat-icon>\n        </button>\n\n        <div *ngFor=\"let page of p.pages; trackBy: trackByPages\" [class.current]=\"p.getCurrent() === page.value\" class=\"mr-0_5\">\n            <a (click)=\"p.setCurrent(page.value)\" *ngIf=\"p.getCurrent() !== page.value\">\n                <span>{{ page.label }}</span>\n            </a>\n            <div *ngIf=\"p.getCurrent() === page.value\">\n                <span>{{ page.label }}</span>\n            </div>\n        </div>\n\n        <button (click)=\"p.next()\" [disabled]=\"p.isLastPage()\" class=\"pagination-next btn-icon circle small\">\n            <mat-icon svgIcon=\"zano-arrow-right\"></mat-icon>\n        </button>\n    </pagination-template>\n</div>\n","import { Component, inject, NgZone } from '@angular/core';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { NonNullableFormBuilder, ValidationErrors, Validators } from '@angular/forms';\nimport { AssetBalance, AssetInfo } from '@api/models/assets.model';\nimport BigNumber from 'bignumber.js';\nimport { intToMoney } from '@parts/functions/int-to-money';\nimport { insufficientFunds } from '@parts/utils/zano-errors';\nimport { BackendService } from '@api/services/backend.service';\nimport { moneyToInt } from '@parts/functions/money-to-int';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MAXIMUM_VALUE } from '@parts/data/constants';\n\n@Component({\n    selector: 'app-burn-custom-asset',\n    templateUrl: './burn-custom-asset.component.html',\n    styleUrls: ['./burn-custom-asset.component.scss'],\n})\nexport class BurnCustomAssetComponent {\n    public readonly variablesService: VariablesService = inject(VariablesService);\n\n    public readonly data: { asset_info: AssetInfo } = inject(MAT_DIALOG_DATA);\n\n    public readonly matDialogRef: MatDialogRef<BurnCustomAssetComponent> = inject(MatDialogRef);\n\n    private readonly _fb: NonNullableFormBuilder = inject(NonNullableFormBuilder);\n\n    public readonly form = this._fb.group({\n        amount: this._fb.control('', [\n            Validators.required,\n            (control): ValidationErrors | null => {\n                const { value: amount } = control;\n                const {\n                    asset_info: { asset_id },\n                } = this.data;\n                const { current_wallet } = this.variablesService;\n                const prepared_amount = new BigNumber(amount);\n                const assetBalance: AssetBalance | undefined = current_wallet.getBalanceByAssetId(asset_id);\n\n                if (!assetBalance) {\n                    return {\n                        asset_not_found: true,\n                    };\n                }\n\n                const {\n                    unlocked,\n                    asset_info: { decimal_point },\n                } = assetBalance;\n\n                const maximum_amount_by_decimal_point = intToMoney(MAXIMUM_VALUE, decimal_point);\n                if (prepared_amount.isGreaterThan(maximum_amount_by_decimal_point)) {\n                    return { greater_max: { max: maximum_amount_by_decimal_point } };\n                }\n\n                const preparedUnlocked = intToMoney(unlocked, decimal_point);\n                return prepared_amount.isGreaterThan(preparedUnlocked) ? { insufficientFunds } : null;\n            },\n        ]),\n    });\n\n    private readonly _backendService: BackendService = inject(BackendService);\n\n    private readonly _ngZone: NgZone = inject(NgZone);\n\n    public submit(): void {\n        const { amount } = this.form.getRawValue();\n        const {\n            current_wallet: { wallet_id },\n        } = this.variablesService;\n        const {\n            asset_info: { asset_id, decimal_point },\n        } = this.data;\n\n        const params = {\n            burn_amount: moneyToInt(amount, decimal_point).toString(),\n            asset_id,\n        };\n\n        this._backendService.asyncCall2a(\n            'call_wallet_rpc',\n            wallet_id,\n            {\n                jsonrpc: '2.0',\n                id: 0,\n                method: 'burn_asset',\n                params,\n            },\n            (job_id: number): void => {\n                this._ngZone.run(() => {\n                    this.matDialogRef.close(job_id);\n                });\n            }\n        );\n    }\n}\n","<form (ngSubmit)=\"submit()\" [formGroup]=\"form\">\n    <h3 mat-dialog-title>\n        {{ 'Burn' | translate }}\n    </h3>\n\n    <mat-dialog-content>\n        <div class=\"form__field mb-0\">\n            <label for=\"amount\">\n                {{ 'Amount' | translate }}\n                <span class=\"color-red\">*</span>\n            </label>\n\n            <input\n                (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                [class.invalid]=\"form.controls.amount.touched && form.controls.amount.invalid\"\n                [decimalPoint]=\"data.asset_info.decimal_point\"\n                [placeholder]=\"'1000000' | translate\"\n                appInputValidate=\"money\"\n                autofocus\n                class=\"form__field--input\"\n                formControlName=\"amount\"\n                id=\"amount\"\n                name=\"amount\"\n                type=\"text\"\n            />\n\n            <div *ngIf=\"form.controls.amount.invalid && (form.controls.amount.touched || form.controls.amount.dirty)\" class=\"error\">\n                <div *ngIf=\"form.controls.amount.hasError('required')\">\n                    {{ 'ERRORS.REQUIRED' | translate }}\n                </div>\n                <div *ngIf=\"form.controls.amount.hasError('insufficientFunds')\">\n                    {{ form.controls.amount.errors['insufficientFunds'].errorText | translate }}\n                </div>\n                <div *ngIf=\"form.controls.amount.hasError('asset_not_found')\">\n                    {{ 'ERRORS.ASSET_NOT_FOUND' | translate }}\n                </div>\n                <div *ngIf=\"form.controls.amount.hasError('greater_max')\">\n                    {{ 'ERRORS.MAX' | translate : { max: form.controls.amount.errors['greater_max'].max } }}\n                </div>\n            </div>\n        </div>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <div fxFlex=\"1 1 auto\" fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\n            <button mat-dialog-close class=\"outline big w-100\" type=\"button\">\n                {{ 'Cancel' | translate }}\n            </button>\n            <button [disabled]=\"form.invalid\" class=\"primary big w-100\" type=\"submit\">\n                {{ 'Confirm' | translate }}\n            </button>\n        </div>\n    </mat-dialog-actions>\n</form>\n","import { Component, inject } from '@angular/core';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { NonNullableFormBuilder } from '@angular/forms';\nimport { ZanoValidators } from '@parts/utils/zano-validators';\nimport { DeployAssetParams } from '@api/models/custom-asstest.model';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-confirm-create-custom-asset',\n    templateUrl: './confirm-create-custom-asset.component.html',\n    styleUrls: ['./confirm-create-custom-asset.component.scss'],\n})\nexport class ConfirmCreateCustomAssetComponent {\n    public readonly variablesService: VariablesService = inject(VariablesService);\n\n    public readonly data: { asset_descriptor: DeployAssetParams['asset_descriptor'] } = inject(MAT_DIALOG_DATA);\n\n    private readonly fb: NonNullableFormBuilder = inject(NonNullableFormBuilder);\n\n    public readonly confirmForm = this.fb.group(\n        {\n            password: this.fb.control(''),\n            appPass: this.fb.control(this.variablesService.appPass || ''),\n        },\n        { validators: [ZanoValidators.formMatch('password', 'appPass', 'passwordNotMatch')] }\n    );\n}\n","<form [formGroup]=\"confirmForm\">\n    <h3 mat-dialog-title>\n        {{ 'CONFIRM_CREATE_CUSTOM_ASSET.TITLE' | translate }}\n    </h3>\n\n    <mat-dialog-content>\n        <div class=\"table-info mb-2\">\n            <div class=\"row\">\n                <div class=\"label max-w-19-rem w-100\">\n                    {{ 'CONFIRM_CREATE_CUSTOM_ASSET.TABLE.LABEL1' | translate }}\n                </div>\n                <div class=\"text\">\n                    {{ data.asset_descriptor.ticker }}\n                </div>\n            </div>\n\n            <hr class=\"separator\" />\n\n            <div class=\"row\">\n                <div class=\"label max-w-19-rem w-100\">\n                    {{ 'CONFIRM_CREATE_CUSTOM_ASSET.TABLE.LABEL2' | translate }}\n                </div>\n                <div class=\"text\">\n                    {{ data.asset_descriptor.full_name }}\n                </div>\n            </div>\n\n            <hr class=\"separator\" />\n\n            <div class=\"row\">\n                <div class=\"label max-w-19-rem w-100\">\n                    {{ 'CONFIRM_CREATE_CUSTOM_ASSET.TABLE.LABEL3' | translate }}\n                </div>\n                <div class=\"text\">\n                    {{ data.asset_descriptor.total_max_supply | intToMoney : data.asset_descriptor.decimal_point }}\n                </div>\n            </div>\n\n            <hr class=\"separator\" />\n\n            <div class=\"row\">\n                <div class=\"label max-w-19-rem w-100\">\n                    {{ 'CONFIRM_CREATE_CUSTOM_ASSET.TABLE.LABEL4' | translate }}\n                </div>\n                <div class=\"text\">\n                    {{ data.asset_descriptor.current_supply | intToMoney : data.asset_descriptor.decimal_point }}\n                </div>\n            </div>\n\n            <hr class=\"separator\" />\n\n            <div class=\"row\">\n                <div class=\"label max-w-19-rem w-100\">\n                    {{ 'CONFIRM_CREATE_CUSTOM_ASSET.TABLE.LABEL5' | translate }}\n                </div>\n                <div class=\"text\">\n                    {{ data.asset_descriptor.decimal_point }}\n                </div>\n            </div>\n\n            <hr class=\"separator\" />\n\n            <div class=\"row\">\n                <div class=\"label max-w-19-rem w-100\">\n                    {{ 'CONFIRM_CREATE_CUSTOM_ASSET.TABLE.LABEL6' | translate }}\n                </div>\n                <div class=\"text\">\n                    {{ data.asset_descriptor.meta_info }}\n                </div>\n            </div>\n        </div>\n\n        <div *ngIf=\"variablesService.appPass\" class=\"form__field mb-0\">\n            <label for=\"password\">\n                {{ 'LOGIN.MASTER_PASS' | translate }}\n                <span class=\"color-red\">*</span>\n            </label>\n            <input\n                (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                [class.invalid]=\"confirmForm.touched && confirmForm.invalid\"\n                [placeholder]=\"'PLACEHOLDERS.MASTER_PASS_PLACEHOLDER' | translate\"\n                autofocus\n                class=\"form__field--input\"\n                formControlName=\"password\"\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n            />\n            <div *ngIf=\"confirmForm.touched && confirmForm.invalid\" class=\"error\">\n                <div *ngIf=\"confirmForm.hasError('passwordNotMatch')\">\n                    {{ 'LOGIN.FORM_ERRORS.WRONG_PASSWORD' | translate }}\n                </div>\n                <div *ngIf=\"confirmForm.controls.password.hasError('required')\">\n                    {{ 'LOGIN.FORM_ERRORS.PASS_REQUIRED' | translate }}\n                </div>\n            </div>\n        </div>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <div fxFlex=\"1 1 auto\" fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\n            <button [mat-dialog-close]=\"false\" class=\"outline big w-100\" type=\"button\">\n                {{ 'CONFIRM_CREATE_CUSTOM_ASSET.BUTTONS.BUTTON1' | translate }}\n            </button>\n            <button [mat-dialog-close]=\"true\" [disabled]=\"confirmForm.invalid\" class=\"primary big w-100\" type=\"submit\">\n                {{ 'CONFIRM_CREATE_CUSTOM_ASSET.BUTTONS.BUTTON2' | translate }}\n            </button>\n        </div>\n    </mat-dialog-actions>\n</form>\n","import { Component, inject, NgZone } from '@angular/core';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { NonNullableFormBuilder, ValidationErrors, Validators } from '@angular/forms';\nimport { AssetInfo } from '@api/models/assets.model';\nimport { EmitParams } from '@api/models/custom-asstest.model';\nimport { BackendService } from '@api/services/backend.service';\nimport { intToMoney } from '@parts/functions/int-to-money';\nimport BigNumber from 'bignumber.js';\nimport { moneyToInt } from '@parts/functions/money-to-int';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-emit-custom-asset',\n    templateUrl: './emit-custom-asset.component.html',\n    styleUrls: ['./emit-custom-asset.component.scss'],\n})\nexport class EmitCustomAssetComponent {\n    public readonly variablesService: VariablesService = inject(VariablesService);\n\n    public readonly data: { asset_info: AssetInfo } = inject(MAT_DIALOG_DATA);\n\n    public readonly matDialogRef: MatDialogRef<EmitCustomAssetComponent> = inject(MatDialogRef);\n\n    private readonly _backendService: BackendService = inject(BackendService);\n\n    private readonly _fb: NonNullableFormBuilder = inject(NonNullableFormBuilder);\n\n    public readonly form = this._fb.group({\n        amount: this._fb.control('', [\n            Validators.required,\n            (control): ValidationErrors | null => {\n                const {\n                    asset_info: { total_max_supply, current_supply, decimal_point },\n                } = this.data;\n                const { value: amount } = control;\n\n                const prepared_total_max_supply: BigNumber = new BigNumber(intToMoney(total_max_supply, decimal_point));\n                const prepared_current_supply: BigNumber = new BigNumber(intToMoney(current_supply, decimal_point));\n                if (prepared_current_supply.plus(amount).isGreaterThan(prepared_total_max_supply)) {\n                    return { greater_than_total_max_supply: { max: prepared_total_max_supply.toString() } };\n                }\n                return null;\n            },\n        ]),\n    });\n\n    private _ngZone: NgZone = inject(NgZone);\n\n    public submit(): void {\n        const {\n            current_wallet: { wallet_id, address },\n        } = this.variablesService;\n        const {\n            asset_info: { asset_id, decimal_point },\n        } = this.data;\n        const { amount } = this.form.getRawValue();\n        const params: EmitParams = {\n            asset_id,\n            destinations: [\n                {\n                    address,\n                    amount: moneyToInt(amount, decimal_point).toString(),\n                    asset_id: '0000000000000000000000000000000000000000000000000000000000000000',\n                },\n            ],\n        };\n\n        this._backendService.asyncCall2a(\n            'call_wallet_rpc',\n            wallet_id,\n            {\n                jsonrpc: '2.0',\n                id: 0,\n                method: 'emit_asset',\n                params,\n            },\n            (job_id: number) => {\n                this._ngZone.run(() => {\n                    this.matDialogRef.close(job_id);\n                });\n            }\n        );\n    }\n}\n","<form (ngSubmit)=\"submit()\" [formGroup]=\"form\">\n    <h3 mat-dialog-title>\n        {{ 'Emit' | translate }}\n    </h3>\n\n    <mat-dialog-content>\n        <div class=\"form__field mb-0\">\n            <label for=\"amount\">\n                {{ 'Amount' | translate }}\n                <span class=\"color-red\">*</span>\n            </label>\n            <input\n                (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                [class.invalid]=\"form.controls.amount.touched && form.controls.amount.invalid\"\n                [decimalPoint]=\"data.asset_info.decimal_point\"\n                [placeholder]=\"'1000000' | translate\"\n                appInputValidate=\"money\"\n                autofocus\n                class=\"form__field--input\"\n                formControlName=\"amount\"\n                id=\"amount\"\n                name=\"amount\"\n                type=\"text\"\n            />\n            <div *ngIf=\"form.controls.amount.touched && form.controls.amount.invalid\" class=\"error\">\n                <div *ngIf=\"form.controls.amount.hasError('required')\">\n                    {{ 'ERRORS.REQUIRED' | translate }}\n                </div>\n                <div *ngIf=\"form.controls.amount.hasError('greater_than_total_max_supply')\">\n                    {{ 'ERRORS.GREATER_THAN_TOTAL_MAX_SUPPLY' | translate }}\n                </div>\n            </div>\n        </div>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <div fxFlex=\"1 1 auto\" fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\n            <button mat-dialog-close class=\"outline big w-100\" type=\"button\">\n                {{ 'Cancel' | translate }}\n            </button>\n            <button [disabled]=\"form.invalid\" class=\"primary big w-100\" type=\"submit\">\n                {{ 'Confirm' | translate }}\n            </button>\n        </div>\n    </mat-dialog-actions>\n</form>\n","import { Component, ElementRef, inject, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { AsyncCommandResults, BackendService } from '@api/services/backend.service';\nimport { Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BLOCK_EXPLORER_TN_TX_URL_PREFIX, BLOCK_EXPLORER_TX_URL_PREFIX } from '@parts/data/constants';\nimport { VariablesService } from '@parts/services/variables.service';\n\n@Component({\n    selector: 'app-transaction-details-for-custom-assets',\n    templateUrl: './transaction-details-for-custom-assets.component.html',\n    styleUrls: ['./transaction-details-for-custom-assets.component.scss'],\n})\nexport class TransactionDetailsForCustomAssetsComponent implements OnInit, OnDestroy {\n    public status: 'loading' | 'success' | 'error' = 'loading';\n\n    public data: { job_id: number } = inject(MAT_DIALOG_DATA);\n\n    public details: { new_asset_id: string; result_tx: string };\n\n    public error: any;\n\n    @ViewChild('elDetailsList', { static: true }) elDetailsList: ElementRef;\n\n    public isShowDetailsState = false;\n\n    public variablesService: VariablesService = inject(VariablesService);\n\n    private _backendService: BackendService = inject(BackendService);\n\n    private _destroy$: Subject<void> = new Subject<void>();\n\n    ngOnInit(): void {\n        this._backendService.dispatchAsyncCallResult$\n            .pipe(\n                filter(Boolean),\n                filter(({ job_id }: AsyncCommandResults) => this.data.job_id === job_id),\n                takeUntil(this._destroy$)\n            )\n            .subscribe({\n                next: ({ response }) => {\n                    if (response.error) {\n                        this.status = 'error';\n                        this.error = response.error;\n                    } else {\n                        this.status = 'success';\n                        this.details = response.result;\n                    }\n                },\n            });\n    }\n\n    ngOnDestroy(): void {\n        this._destroy$.next();\n        this._destroy$.complete();\n    }\n\n    toggleDetails(): void {\n        this.isShowDetailsState = !this.isShowDetailsState;\n        setTimeout(() => this.scrollToBottomDetailsList(), 100);\n    }\n\n    private scrollToBottomDetailsList(): void {\n        if (this.elDetailsList) {\n            const { nativeElement } = this.elDetailsList;\n            nativeElement.scrollTop = nativeElement.scrollHeight;\n        }\n    }\n\n    openInBrowser(hash: string): void {\n        this._backendService.openUrlInBrowser(\n            (this.variablesService.testnet ? BLOCK_EXPLORER_TN_TX_URL_PREFIX : BLOCK_EXPLORER_TX_URL_PREFIX) + hash\n        );\n    }\n}\n","<h3 mat-dialog-title>\n    {{ 'SEND_DETAILS_MODAL.TITLE1' | translate }}\n</h3>\n\n<mat-dialog-content fxLayout=\"column\">\n    <div class=\"status mb-2\" fxFlex=\"0 0 auto\" fxLayout=\"column\" fxLayoutAlign=\" center\">\n        <div *ngIf=\"status === 'success'\" class=\"image\">\n            <img alt=\"success\" src=\"assets/icons/aqua/transaction_success.svg\" />\n        </div>\n\n        <div *ngIf=\"status === 'error'\" class=\"image\">\n            <img alt=\"failed\" class=\"image\" src=\"assets/icons/red/transaction_failed.svg\" />\n        </div>\n\n        <div *ngIf=\"status === 'loading'\" class=\"loader\"></div>\n\n        <p class=\"color-primary mt-2\">\n            {{\n                {\n                    success: 'TOR_LIB_STATE.STATE_SENT_SUCCESS',\n                    error: 'TOR_LIB_STATE.STATE_SEND_FAILED',\n                    loading: 'Loading...'\n                }[status] | translate\n            }}\n        </p>\n    </div>\n\n    <div *ngIf=\"details || error\" class=\"details border-radius-0_8-rem overflow-hidden\" fxFlex=\"0 0 auto\" fxLayout=\"column\">\n        <div\n            (click)=\"toggleDetails()\"\n            class=\"header overflow-hidden py-1 px-2 w-100 cursor-pointer\"\n            fxLayout=\"row\"\n            fxLayoutAlign=\"space-between center\"\n        >\n            <p class=\"title text-ellipsis mr-2\">\n                {{ 'SEND_DETAILS_MODAL.TITLE2' | translate }}\n            </p>\n            <button fxLayout=\"row\" fxLayoutAlign=\"center center\">\n                <mat-icon\n                    [ngClass]=\"{\n                        'rotate-180': isShowDetailsState\n                    }\"\n                    class=\"ml-1\"\n                    svgIcon=\"zano-dropdown-arrow-down\"\n                ></mat-icon>\n            </button>\n        </div>\n        <div\n            [class.px-2]=\"isShowDetailsState\"\n            [class.py-1]=\"isShowDetailsState\"\n            [fxHide]=\"!isShowDetailsState\"\n            class=\"details-wrapper\"\n            fxFlex=\"1 1 auto\"\n            fxLayout=\"row\"\n        >\n            <ul #elDetailsList class=\"details-list scrolled-content\">\n                <ng-container *ngIf=\"details\">\n                    <ng-container *ngIf=\"details.new_asset_id as new_asset_id\">\n                        <li class=\"item mb-1 color-primary\" fxLayout=\"row nowrap\" fxLayoutAlign=\"start center\">\n                            <span class=\"text word-break-break-all\"> New asset id: {{ new_asset_id || '---' }} </span>\n                            <app-copy-button [value]=\"new_asset_id\" class=\"ml-1\"> </app-copy-button>\n                        </li>\n                    </ng-container>\n                    <ng-container *ngIf=\"details.result_tx as result_tx\">\n                        <li class=\"item mb-1 color-primary\" fxLayout=\"row nowrap\" fxLayoutAlign=\"start center\">\n                            <span (click)=\"openInBrowser(result_tx)\" class=\"text word-break-break-all cursor-pointer\">\n                                Result tx: {{ result_tx }}\n                            </span>\n                            <app-copy-button [value]=\"result_tx\" class=\"ml-1\"> </app-copy-button>\n                        </li>\n                    </ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"error\">\n                    <li class=\"item mb-1 color-red\" fxLayout=\"row nowrap\" fxLayoutAlign=\"start center\">\n                        <span class=\"text word-break-break-all\">\n                            Error: {{ error.message ? ('ERRORS' + '.' + error.message | translate) : 'Ops... Unknown error...' }}\n                        </span>\n                    </li>\n                </ng-container>\n            </ul>\n        </div>\n    </div>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n    <div fxFlex=\"1 1 auto\" fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\n        <button [mat-dialog-close]=\"status === 'success'\" class=\"outline big w-100\" type=\"button\">\n            {{ 'MODALS.OK' | translate }}\n        </button>\n    </div>\n</mat-dialog-actions>\n","import { Component, inject, NgZone } from '@angular/core';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { NonNullableFormBuilder, ValidationErrors, Validators } from '@angular/forms';\nimport { AssetInfo } from '@api/models/assets.model';\nimport { BackendService } from '@api/services/backend.service';\nimport { UpdateAssetParams } from '@api/models/custom-asstest.model';\nimport { REG_EXP_HEX } from '@parts/utils/zano-validators';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-update-custom-asset',\n    templateUrl: './update-custom-asset.component.html',\n    styleUrls: ['./update-custom-asset.component.scss'],\n})\nexport class UpdateCustomAssetComponent {\n    public readonly variablesService: VariablesService = inject(VariablesService);\n    public readonly data: { asset_info: AssetInfo } = inject(MAT_DIALOG_DATA);\n    public readonly matDialogRef: MatDialogRef<UpdateCustomAssetComponent> = inject(MatDialogRef);\n    private readonly _backendService: BackendService = inject(BackendService);\n    private readonly fb: NonNullableFormBuilder = inject(NonNullableFormBuilder);\n    private _ngZone: NgZone = inject(NgZone);\n    public readonly form = this.fb.group({\n        owner: this.fb.control('', [\n            Validators.required,\n            (control): ValidationErrors | null => {\n                if (control.value.length === 64) {\n                    if (!REG_EXP_HEX.test(control.value)) {\n                        return { hex_not_valid: true };\n                    } else {\n                        return null;\n                    }\n                }\n\n                if (control.value) {\n                    this._backendService.validateAddress(control.value, (status) => {\n                        this._ngZone.run(() => {\n                            if (status === false) {\n                                control.setErrors(Object.assign({ address_not_valid: true }, control.errors));\n                            } else {\n                                if (control.hasError('address_not_valid')) {\n                                    delete control.errors['address_not_valid'];\n                                    if (Object.keys(control.errors).length === 0) {\n                                        control.setErrors(null);\n                                    }\n                                }\n                            }\n                        });\n                    });\n                    return control.hasError('address_not_valid') ? { address_not_valid: true } : null;\n                }\n\n                return null;\n            },\n        ]),\n    });\n\n    public submit(): void {\n        const { wallet_id } = this.variablesService.current_wallet;\n        const { asset_id } = this.data.asset_info;\n        const { owner } = this.form.getRawValue();\n        const params: UpdateAssetParams = {\n            asset_id,\n            asset_descriptor: {\n                owner,\n            },\n        };\n\n        this._backendService.asyncCall2a(\n            'call_wallet_rpc',\n            wallet_id,\n            {\n                jsonrpc: '2.0',\n                id: 0,\n                method: 'update_asset',\n                params,\n            },\n            (job_id: number) => {\n                this._ngZone.run(() => {\n                    this.matDialogRef.close(job_id);\n                });\n            }\n        );\n    }\n}\n","<form (ngSubmit)=\"submit()\" [formGroup]=\"form\">\n    <h3 mat-dialog-title>\n        {{ 'Update asset' | translate }}\n    </h3>\n    <mat-dialog-content>\n        <div class=\"form__field mb-0\">\n            <label for=\"owner\">\n                {{ 'Owner' | translate }}\n                <span class=\"color-red\">*</span>\n            </label>\n            <input\n                (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                [class.invalid]=\"form.controls.owner.touched && form.controls.owner.invalid\"\n                [placeholder]=\"'Owner' | translate\"\n                autofocus\n                class=\"form__field--input\"\n                formControlName=\"owner\"\n                id=\"owner\"\n                name=\"owner\"\n                type=\"text\"\n            />\n            <div *ngIf=\"form.controls.owner.invalid && (form.controls.owner.touched || form.controls.owner.dirty)\" class=\"error\">\n                <div *ngIf=\"form.controls.owner.hasError('required')\">\n                    {{ 'ERRORS.REQUIRED' | translate }}\n                </div>\n                <div *ngIf=\"form.controls.owner.hasError('hex_not_valid')\">\n                    {{ 'ERRORS.HEX_NOT_VALID' | translate }}\n                </div>\n                <div *ngIf=\"form.controls.owner.hasError('address_not_valid')\">\n                    {{ 'ERRORS.ADDRESS_NOT_VALID' | translate }}\n                </div>\n            </div>\n        </div>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <div fxFlex=\"1 1 auto\" fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\n            <button mat-dialog-close class=\"outline big w-100\" type=\"button\">\n                {{ 'Cancel' | translate }}\n            </button>\n            <button [disabled]=\"form.invalid\" class=\"primary big w-100\" type=\"submit\">\n                {{ 'Confirm' | translate }}\n            </button>\n        </div>\n    </mat-dialog-actions>\n</form>\n","import { Component, inject, NgZone } from '@angular/core';\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { AbstractControl, FormControl, FormGroup, NonNullableFormBuilder, ValidationErrors, Validators } from '@angular/forms';\nimport { ConfirmCreateCustomAssetComponent } from '../../modals/confirm-create-custom-asset/confirm-create-custom-asset.component';\nimport { AssetDescriptor, DeployAssetParams, Destinations } from '@api/models/custom-asstest.model';\nimport { filter, take } from 'rxjs/operators';\nimport { BackendService } from '@api/services/backend.service';\nimport { Router } from '@angular/router';\nimport { BigNumber } from 'bignumber.js';\nimport { intToMoney } from '@parts/functions/int-to-money';\nimport { moneyToInt } from '@parts/functions/money-to-int';\nimport { TransactionDetailsForCustomAssetsComponent } from '../../modals/transaction-details-for-custom-assets/transaction-details-for-custom-assets.component';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MAXIMUM_VALUE } from '@parts/data/constants';\n\ntype CreateNewAssetFrom = FormGroup<{\n    ticker: FormControl<string>;\n    full_name: FormControl<string>;\n    total_max_supply: FormControl<string>;\n    current_supply: FormControl<string>;\n    decimal_point: FormControl<string>;\n    meta_info: FormControl<string>;\n    hidden_supply: FormControl<boolean>;\n}>;\n\n@Component({\n    selector: 'app-create-new-asset',\n    templateUrl: './create-new-asset.component.html',\n    styleUrls: ['./create-new-asset.component.scss'],\n})\nexport class CreateNewAssetComponent {\n    public readonly breadcrumbItems: BreadcrumbItems = [\n        {\n            routerLink: '/custom-assets',\n            title: 'CREATE_NEW_ASSETS.BREADCRUMBS.BREADCRUMB1',\n        },\n        {\n            title: 'CREATE_NEW_ASSETS.BREADCRUMBS.BREADCRUMB2',\n        },\n    ];\n\n    public readonly variablesService: VariablesService = inject(VariablesService);\n\n    private readonly _backendService: BackendService = inject(BackendService);\n\n    private readonly _fb: NonNullableFormBuilder = inject(NonNullableFormBuilder);\n\n    public form: CreateNewAssetFrom = this._fb.group(\n        {\n            ticker: this._fb.control<string>('', [\n                Validators.required,\n                Validators.pattern(/^[A-Za-z0-9]+$/),\n                Validators.minLength(1),\n                Validators.maxLength(14),\n            ]),\n            full_name: this._fb.control<string>('', [\n                Validators.pattern(/^[A-Za-z0-9.,:!\\-() ]+$/),\n                Validators.minLength(0),\n                Validators.maxLength(400),\n            ]),\n            total_max_supply: this._fb.control<string>(undefined, [Validators.required]),\n            current_supply: this._fb.control<string>(undefined, [Validators.required]),\n            decimal_point: this._fb.control<string>('12', [Validators.required, Validators.min(0), Validators.max(18)]),\n            meta_info: this._fb.control<string>('', [Validators.maxLength(255)]),\n            hidden_supply: this._fb.control<boolean>(false),\n        },\n        {\n            validators: [\n                (control: AbstractControl): ValidationErrors => {\n                    const error = {\n                        current_supply: 'ERRORS.CANNOT_BE_GREATER_THAN_TOTAL_MAX_SUPPLY',\n                    };\n                    const total_max_supply = new BigNumber(control.get('total_max_supply').value);\n                    const current_supply = new BigNumber(control.get('current_supply').value);\n\n                    if (total_max_supply.isLessThan(current_supply)) {\n                        return error;\n                    }\n\n                    return null;\n                },\n                (control: AbstractControl): ValidationErrors => {\n                    const { value: decimal_point } = control.get('decimal_point');\n                    const { value: total_max_supply } = control.get('total_max_supply');\n\n                    const prepared_total_max_supply = new BigNumber(total_max_supply);\n                    const max = new BigNumber(intToMoney(MAXIMUM_VALUE, +decimal_point || 0));\n                    const error = { greater_than_max: { max: max.toString() } };\n\n                    if (prepared_total_max_supply.isGreaterThan(max)) {\n                        return error;\n                    }\n\n                    return null;\n                },\n            ],\n        }\n    );\n\n    private readonly _router: Router = inject(Router);\n\n    private readonly _matDialog: MatDialog = inject(MatDialog);\n\n    private readonly _ngZone: NgZone = inject(NgZone);\n\n    details(job_id: number): void {\n        const config: MatDialogConfig = {\n            data: {\n                job_id,\n            },\n            disableClose: true,\n        };\n        this._matDialog\n            .open(TransactionDetailsForCustomAssetsComponent, config)\n            .afterClosed()\n            .pipe(filter(Boolean), take(1))\n            .subscribe({\n                next: async () => {\n                    await this._ngZone.run(async () => {\n                        await this._router.navigate(['/wallet/custom-assets']);\n                    });\n                },\n            });\n    }\n\n    submit(): void {\n        const { address, wallet_id } = this.variablesService.current_wallet;\n        const { ticker, full_name, meta_info, hidden_supply, current_supply, total_max_supply, decimal_point } = this.form.getRawValue();\n\n        let countDestination = 1;\n        let destinationAmount: string = moneyToInt(current_supply, decimal_point).toString();\n        const halfDestinationAmount: string = new BigNumber(destinationAmount).div(2).toString();\n\n        if (\n            !halfDestinationAmount.includes('.') &&\n            new BigNumber(halfDestinationAmount).plus(halfDestinationAmount).eq(destinationAmount)\n        ) {\n            countDestination = 2;\n            destinationAmount = halfDestinationAmount;\n        }\n\n        const asset_descriptor: AssetDescriptor = {\n            ticker,\n            full_name,\n            meta_info,\n            hidden_supply,\n            decimal_point: new BigNumber(decimal_point).toNumber(),\n            total_max_supply: moneyToInt(total_max_supply, decimal_point).toString(),\n        };\n        const destinations: Destinations = [];\n\n        for (let i = 0; i < countDestination; i++) {\n            destinations.push({\n                address,\n                amount: destinationAmount,\n                asset_id: '0000000000000000000000000000000000000000000000000000000000000000',\n            });\n        }\n\n        const params: DeployAssetParams = {\n            asset_descriptor,\n            destinations,\n        };\n\n        const config: MatDialogConfig = {\n            disableClose: true,\n            data: {\n                asset_descriptor: {\n                    ...asset_descriptor,\n                    current_supply: moneyToInt(current_supply, decimal_point).toString(),\n                },\n            },\n        };\n        this._matDialog\n            .open(ConfirmCreateCustomAssetComponent, config)\n            .afterClosed()\n            .pipe(filter(Boolean), take(1))\n            .subscribe({\n                next: () => {\n                    this._backendService.asyncCall2a(\n                        'call_wallet_rpc',\n                        wallet_id,\n                        {\n                            jsonrpc: '2.0',\n                            id: 0,\n                            method: 'deploy_asset',\n                            params,\n                        },\n                        (job_id: number) => {\n                            this._ngZone.run(() => this.details(job_id));\n                        }\n                    );\n                },\n            });\n    }\n}\n","<div class=\"scrolled-content\" fxFlex=\"1 1 auto\" fxLayout=\"column\">\n    <app-breadcrumbs [items]=\"breadcrumbItems\" class=\"mb-2\"></app-breadcrumbs>\n\n    <form (ngSubmit)=\"submit()\" [formGroup]=\"form\" class=\"form\" fxFlex=\"0 1 50rem\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n        <!-- ticker -->\n        <div class=\"form__field--row\">\n            <div class=\"form__field\">\n                <label for=\"ticker\">\n                    {{ 'CREATE_NEW_ASSETS.FORM.LABELS.LABEL1' | translate }}\n                    <span class=\"color-red\">*</span>\n                </label>\n                <input\n                    (contextmenu)=\"variablesService.onContextMenu($event)\"\n                    [placeholder]=\"'CT' | translate\"\n                    class=\"form__field--input\"\n                    formControlName=\"ticker\"\n                    id=\"ticker\"\n                    type=\"text\"\n                />\n                <div *ngIf=\"form.controls.ticker.invalid && (form.controls.ticker.dirty || form.controls.ticker.touched)\" class=\"error\">\n                    <div *ngIf=\"form.controls.ticker.errors['required']\">\n                        {{ 'ERRORS.REQUIRED' | translate }}\n                    </div>\n\n                    <div *ngIf=\"form.controls.ticker.errors['minlength'] as err\">\n                        {{ 'ERRORS.MIN_LENGTH' | translate : { requiredLength: err.requiredLength } }}\n                    </div>\n\n                    <div *ngIf=\"form.controls.ticker.errors['maxlength'] as err\">\n                        {{ 'ERRORS.MAX_LENGTH' | translate : { requiredLength: err.requiredLength } }}\n                    </div>\n\n                    <div *ngIf=\"form.controls.ticker.errors['pattern'] as err\">\n                        {{ 'ERRORS.INVALID_TICKER_PATTERN' | translate }}\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"form__field\">\n                <label for=\"full_name\">\n                    {{ 'CREATE_NEW_ASSETS.FORM.LABELS.LABEL2' | translate }}\n                    <span class=\"color-red\">*</span>\n                </label>\n                <input\n                    (contextmenu)=\"variablesService.onContextMenu($event)\"\n                    [placeholder]=\"'CREATE_NEW_ASSETS.FORM.PLACEHOLDERS.PLACEHOLDER1' | translate\"\n                    class=\"form__field--input\"\n                    formControlName=\"full_name\"\n                    id=\"full_name\"\n                    type=\"text\"\n                />\n                <div\n                    *ngIf=\"form.controls.full_name.invalid && (form.controls.full_name.dirty || form.controls.full_name.touched)\"\n                    class=\"error\"\n                >\n                    <div *ngIf=\"form.controls.full_name.errors['required']\">\n                        {{ 'ERRORS.REQUIRED' | translate }}\n                    </div>\n\n                    <div *ngIf=\"form.controls.full_name.errors['minlength'] as err\">\n                        {{ 'ERRORS.MIN_LENGTH' | translate : { requiredLength: err.requiredLength } }}\n                    </div>\n\n                    <div *ngIf=\"form.controls.full_name.errors['maxLength'] as err\">\n                        {{ 'ERRORS.MAX_LENGTH' | translate : { requiredLength: err.requiredLength } }}\n                    </div>\n\n                    <div *ngIf=\"form.controls.full_name.errors['pattern'] as err\">\n                        {{ 'ERRORS.INVALID_FULL_NAME_ASSET_PATTERN' | translate }}\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- total_max_supply -->\n        <div class=\"form__field--row\">\n            <div class=\"form__field\">\n                <label for=\"total_max_supply\">\n                    {{ 'CREATE_NEW_ASSETS.FORM.LABELS.LABEL3' | translate }}\n                    <!--<span class=\"color-red\">*</span>-->\n                </label>\n                <input\n                    (contextmenu)=\"variablesService.onContextMenu($event)\"\n                    [placeholder]=\"'1000000000' | translate\"\n                    appInputValidate=\"money\"\n                    [decimalPoint]=\"+form.controls.decimal_point.value\"\n                    class=\"form__field--input\"\n                    formControlName=\"total_max_supply\"\n                    id=\"total_max_supply\"\n                    type=\"text\"\n                />\n                <div\n                    *ngIf=\"\n                        form.controls.total_max_supply.invalid &&\n                        (form.controls.total_max_supply.dirty || form.controls.total_max_supply.touched)\n                    \"\n                    class=\"error\"\n                >\n                    <span *ngIf=\"form.controls.total_max_supply.errors['required']\">\n                        {{ 'ERRORS.REQUIRED' | translate }}\n                    </span>\n                </div>\n\n                <div *ngIf=\"form.hasError('greater_than_max') && (form.dirty || form.touched)\" class=\"error\">\n                    {{ 'ERRORS.TO_BIG_TOTAL_SUPPLY' | translate }}\n                    {{ 'ERRORS.MAX' | translate : { max: form.errors['greater_than_max'].max } }}\n                </div>\n            </div>\n\n            <!-- current_supply -->\n            <div class=\"form__field\">\n                <label for=\"current_supply\">\n                    {{ 'CREATE_NEW_ASSETS.FORM.LABELS.LABEL4' | translate }}\n                    <span class=\"color-red\">*</span>\n                </label>\n                <input\n                    (contextmenu)=\"variablesService.onContextMenu($event)\"\n                    [placeholder]=\"'1000000000' | translate\"\n                    appInputValidate=\"money\"\n                    [decimalPoint]=\"+form.controls.decimal_point.value\"\n                    class=\"form__field--input\"\n                    formControlName=\"current_supply\"\n                    id=\"current_supply\"\n                    type=\"text\"\n                />\n                <div\n                    *ngIf=\"\n                        form.controls.current_supply.invalid && (form.controls.current_supply.dirty || form.controls.current_supply.touched)\n                    \"\n                    class=\"error\"\n                >\n                    <div *ngIf=\"form.controls.current_supply.errors['required']\">\n                        {{ 'ERRORS.REQUIRED' | translate }}\n                    </div>\n                </div>\n                <div *ngIf=\"form.hasError('current_supply') && (form.dirty || form.touched)\" class=\"error\">\n                    {{ form.errors['current_supply'] | translate }}\n                </div>\n            </div>\n        </div>\n\n        <!-- decimal_point -->\n        <div class=\"form__field\">\n            <label for=\"decimal_point\">\n                {{ 'CREATE_NEW_ASSETS.FORM.LABELS.LABEL5' | translate }}\n                <span class=\"color-red\">*</span>\n            </label>\n            <input\n                (contextmenu)=\"variablesService.onContextMenu($event)\"\n                [placeholder]=\"'12' | translate\"\n                appInputValidate=\"integer\"\n                class=\"form__field--input\"\n                formControlName=\"decimal_point\"\n                id=\"decimal_point\"\n                type=\"text\"\n            />\n            <div\n                *ngIf=\"form.controls.decimal_point.invalid && (form.controls.decimal_point.dirty || form.controls.decimal_point.touched)\"\n                class=\"error\"\n            >\n                <div *ngIf=\"form.controls.decimal_point.errors['required']\">\n                    {{ 'ERRORS.REQUIRED' | translate }}\n                </div>\n\n                <div *ngIf=\"form.controls.decimal_point.errors['min'] as error\">\n                    {{ 'ERRORS.MIN' | translate : { min: error.min } }}\n                </div>\n\n                <div *ngIf=\"form.controls.decimal_point.errors['max'] as error\">\n                    {{ 'ERRORS.MAX' | translate : { max: error.max } }}\n                </div>\n            </div>\n        </div>\n\n        <!-- meta_info -->\n        <div class=\"form__field textarea\">\n            <label for=\"meta_info\">\n                {{ 'CREATE_NEW_ASSETS.FORM.LABELS.LABEL6' | translate }}\n            </label>\n            <textarea\n                [placeholder]=\"'CREATE_NEW_ASSETS.FORM.PLACEHOLDERS.PLACEHOLDER2' | translate\"\n                formControlName=\"meta_info\"\n                id=\"meta_info\"\n            ></textarea>\n\n            <div\n                *ngIf=\"form.controls.meta_info.invalid && (form.controls.meta_info.dirty || form.controls.meta_info.touched)\"\n                class=\"error\"\n            >\n                <div *ngIf=\"form.controls.meta_info.errors['maxlength'] as err\">\n                    {{ 'ERRORS.MAX_LENGTH' | translate : { requiredLength: err.requiredLength } }}\n                </div>\n            </div>\n        </div>\n\n        <button [disabled]=\"form.invalid\" class=\"primary big max-w-19-rem w-100\" type=\"submit\">\n            {{ 'CREATE_NEW_ASSETS.FORM.BUTTONS.BUTTON1' | translate }}\n        </button>\n    </form>\n</div>\n","import { Component, inject, OnInit } from '@angular/core';\nimport { PaginatePipeArgs } from 'ngx-pagination';\nimport { CdkOverlayOrigin, ConnectedPosition } from '@angular/cdk/overlay';\nimport { AssetInfo } from '@api/models/assets.model';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { WalletsService } from '@parts/services/wallets.service';\nimport { AssetDetailsComponent } from '@parts/modals/asset-details/asset-details.component';\nimport { UpdateCustomAssetComponent } from '../../modals/update-custom-asset/update-custom-asset.component';\nimport { BurnCustomAssetComponent } from '../../modals/burn-custom-asset/burn-custom-asset.component';\nimport { EmitCustomAssetComponent } from '../../modals/emit-custom-asset/emit-custom-asset.component';\nimport { filter, switchMap } from 'rxjs/operators';\nimport { TransactionDetailsForCustomAssetsComponent } from '../../modals/transaction-details-for-custom-assets/transaction-details-for-custom-assets.component';\nimport { Observable, take } from 'rxjs';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-custom-assets',\n    templateUrl: './custom-assets.component.html',\n    styleUrls: ['./custom-assets.component.scss'],\n})\nexport class CustomAssetsComponent implements OnInit {\n    paginationId = 'pagination-custom-assets-id';\n\n    triggerOrigin: CdkOverlayOrigin | undefined;\n\n    currentAssetInfo: AssetInfo | undefined;\n\n    isOpenDropDownMenu = false;\n\n    connectedOverlayPositions: ConnectedPosition[] = [\n        {\n            originX: 'end',\n            originY: 'top',\n            overlayX: 'end',\n            overlayY: 'top',\n            offsetY: 30,\n        },\n    ];\n    paginateArgs: PaginatePipeArgs = {\n        id: this.paginationId,\n        itemsPerPage: 10,\n        currentPage: 1,\n    };\n\n    public variablesService: VariablesService = inject(VariablesService);\n\n    private readonly _matDialog: MatDialog = inject(MatDialog);\n\n    private readonly _walletsService: WalletsService = inject(WalletsService);\n\n    get assets(): AssetInfo[] {\n        return this._walletsService.currentWallet?.assetsInfoWhitelist?.own_assets ?? [];\n    }\n\n    get isShowPagination(): boolean {\n        const { current_wallet } = this.variablesService;\n        if (!current_wallet) {\n            return false;\n        }\n        const {\n            assetsInfoWhitelist: { own_assets },\n        } = current_wallet;\n        return own_assets?.length > this.paginateArgs.itemsPerPage;\n    }\n\n    ngOnInit(): void {\n        this._loadAssets();\n    }\n\n    toggleDropDownMenu(trigger: CdkOverlayOrigin, asset: AssetInfo): void {\n        this.isOpenDropDownMenu = !this.isOpenDropDownMenu;\n        this.triggerOrigin = trigger;\n        this.currentAssetInfo = asset;\n    }\n\n    closeDropDownMenu(): void {\n        this.isOpenDropDownMenu = false;\n    }\n\n    trackByAssets(index: number): number | string {\n        return index;\n    }\n\n    trackByPages(index: number): number | string {\n        return index;\n    }\n\n    openDialog(type: 'assetDetails' | 'emit' | 'burn' | 'update'): void {\n        const config: MatDialogConfig = {\n            data: {\n                asset_info: this.currentAssetInfo,\n            },\n        };\n\n        let closed: Observable<number | undefined>;\n\n        switch (type) {\n            case 'assetDetails': {\n                this._matDialog.open(AssetDetailsComponent, config);\n                return;\n            }\n            case 'emit': {\n                closed = this._matDialog\n                    .open<EmitCustomAssetComponent, any, number | undefined>(EmitCustomAssetComponent, config)\n                    .afterClosed();\n                break;\n            }\n            case 'burn': {\n                closed = this._matDialog\n                    .open<BurnCustomAssetComponent, any, number | undefined>(BurnCustomAssetComponent, config)\n                    .afterClosed();\n                break;\n            }\n            case 'update': {\n                closed = this._matDialog\n                    .open<UpdateCustomAssetComponent, any, number | undefined>(UpdateCustomAssetComponent, config)\n                    .afterClosed();\n                break;\n            }\n        }\n\n        closed\n            .pipe(\n                filter((job_id) => typeof job_id === 'number'),\n                switchMap((job_id) => {\n                    const config2: MatDialogConfig = {\n                        data: {\n                            job_id,\n                        },\n                    };\n                    return this._matDialog\n                        .open<TransactionDetailsForCustomAssetsComponent, any, boolean>(TransactionDetailsForCustomAssetsComponent, config2)\n                        .afterClosed();\n                }),\n                filter(Boolean),\n                take(1)\n            )\n            .subscribe({\n                next: () => this._loadAssets(),\n            });\n    }\n\n    private _loadAssets(): void {\n        const { currentWallet } = this._walletsService;\n        this._walletsService.loadAssetsInfoWhitelist(currentWallet);\n    }\n}\n","<div [ngClass]=\"{ center: !assets.length }\" class=\"container\">\n    <ng-container *ngIf=\"assets.length; else emptyTemplate\">\n        <div class=\"scrolled-content mb-2\" fxFlex=\"1 1 auto\">\n            <table class=\"zano-table\">\n                <thead>\n                    <tr>\n                        <th>\n                            <div class=\"bg title\">\n                                {{ 'CUSTOM_ASSETS.TABLE.LABELS.LABEL1' | translate }}\n                            </div>\n                        </th>\n                        <th>\n                            <div class=\"bg title\">\n                                {{ 'CUSTOM_ASSETS.TABLE.LABELS.LABEL2' | translate }}\n                            </div>\n                        </th>\n                        <th>\n                            <div class=\"bg title\">\n                                {{ 'CUSTOM_ASSETS.TABLE.LABELS.LABEL3' | translate }}\n                            </div>\n                        </th>\n                        <th>\n                            <div class=\"bg title\">\n                                {{ 'CUSTOM_ASSETS.TABLE.LABELS.LABEL4' | translate }}\n                            </div>\n                        </th>\n                        <th>\n                            <div class=\"bg title\">\n                                {{ 'CUSTOM_ASSETS.TABLE.LABELS.LABEL5' | translate }}\n                            </div>\n                        </th>\n                        <th>\n                            <div class=\"bg title\">\n                                {{ 'CUSTOM_ASSETS.TABLE.LABELS.LABEL6' | translate }}\n                            </div>\n                        </th>\n                        <th>\n                            <div class=\"bg title\">&nbsp;</div>\n                        </th>\n                    </tr>\n                    <div class=\"row-divider\"></div>\n                </thead>\n                <tbody>\n                    <ng-container *ngFor=\"let asset of assets | paginate : paginateArgs; trackBy: trackByAssets\">\n                        <tr>\n                            <td (contextmenu)=\"variablesService.onContextMenuOnlyCopy($event, asset.asset_id)\">\n                                {{ asset.asset_id | zanoShortString }}\n                            </td>\n                            <td>{{ asset.ticker }}</td>\n                            <td>{{ asset.full_name }}</td>\n                            <td>{{ asset.total_max_supply | intToMoney : asset.decimal_point }}</td>\n                            <td>{{ asset.current_supply | intToMoney : asset.decimal_point }}</td>\n                            <td>{{ asset.decimal_point }}</td>\n                            <td>\n                                <div fxLayout=\"row\" fxLayoutAlign=\"end center\">\n                                    <button\n                                        #trigger=\"cdkOverlayOrigin\"\n                                        (click)=\"$event.stopPropagation(); toggleDropDownMenu(trigger, asset)\"\n                                        [disabled]=\"false\"\n                                        cdkOverlayOrigin\n                                        class=\"btn-icon circle row-options small ml-auto\"\n                                        type=\"button\"\n                                    >\n                                        <mat-icon class=\"small\" svgIcon=\"zano-row-options\"></mat-icon>\n                                    </button>\n                                </div>\n                            </td>\n                        </tr>\n                        <tr class=\"row-divider\"></tr>\n                    </ng-container>\n                </tbody>\n            </table>\n\n            <a class=\"btn create-new-asset primary big\" routerLink=\"/wallet/create-new-asset\">{{\n                'CUSTOM_ASSETS.BUTTONS.BUTTON1' | translate\n            }}</a>\n        </div>\n\n        <pagination-template\n            #p=\"paginationApi\"\n            (pageChange)=\"paginateArgs.currentPage = $event\"\n            *ngIf=\"isShowPagination\"\n            [id]=\"paginationId\"\n            class=\"ngx-pagination custom-pagination\"\n        >\n            <button (click)=\"p.previous()\" [disabled]=\"p.isFirstPage()\" class=\"pagination-previous btn-icon circle small mr-0_5\">\n                <mat-icon svgIcon=\"zano-arrow-left\"></mat-icon>\n            </button>\n\n            <div *ngFor=\"let page of p.pages; trackBy: trackByPages\" [class.current]=\"p.getCurrent() === page.value\" class=\"mr-0_5\">\n                <a (click)=\"p.setCurrent(page.value)\" *ngIf=\"p.getCurrent() !== page.value\">\n                    <span>{{ page.label }}</span>\n                </a>\n                <div *ngIf=\"p.getCurrent() === page.value\">\n                    <span>{{ page.label }}</span>\n                </div>\n            </div>\n\n            <button (click)=\"p.next()\" [disabled]=\"p.isLastPage()\" class=\"pagination-next btn-icon circle small\">\n                <mat-icon svgIcon=\"zano-arrow-right\"></mat-icon>\n            </button>\n        </pagination-template>\n    </ng-container>\n\n    <ng-template #emptyTemplate>\n        <p class=\"mb-2\">{{ 'CUSTOM_ASSETS.TEXT.EMPTY' | translate }}</p>\n        <a class=\"btn create-new-asset primary big\" routerLink=\"/wallet/create-new-asset\">{{\n            'CUSTOM_ASSETS.BUTTONS.BUTTON1' | translate\n        }}</a>\n    </ng-template>\n</div>\n\n<ng-template\n    (backdropClick)=\"$event.stopPropagation(); closeDropDownMenu()\"\n    [cdkConnectedOverlayBackdropClass]=\"'opacity-0'\"\n    [cdkConnectedOverlayHasBackdrop]=\"true\"\n    [cdkConnectedOverlayOpen]=\"isOpenDropDownMenu\"\n    [cdkConnectedOverlayOrigin]=\"triggerOrigin\"\n    [cdkConnectedOverlayPositions]=\"connectedOverlayPositions\"\n    cdkConnectedOverlay\n>\n    <ul (click)=\"closeDropDownMenu()\" class=\"list\">\n        <li class=\"item\">\n            <button (click)=\"openDialog('assetDetails')\" class=\"w-100 px-2 py-1\" type=\"button\">\n                <mat-icon svgIcon=\"zano-info-v2\" class=\"mr-1\"></mat-icon>\n                <span>{{ 'CUSTOM_ASSETS.DROP_MENU.LABELS.LABEL1' | translate }}</span>\n            </button>\n        </li>\n        <li class=\"item\">\n            <button (click)=\"openDialog('emit')\" class=\"w-100 px-2 py-1\" type=\"button\">\n                <mat-icon svgIcon=\"zano-emit\" class=\"mr-1\"></mat-icon>\n                <span>{{ 'CUSTOM_ASSETS.DROP_MENU.LABELS.LABEL2' | translate }}</span>\n            </button>\n        </li>\n        <li class=\"item\">\n            <button [disabled]=\"true\" (click)=\"openDialog('update')\" class=\"w-100 px-2 py-1\" type=\"button\">\n                <mat-icon svgIcon=\"zano-update\" class=\"mr-1\"></mat-icon>\n                <span>{{ 'CUSTOM_ASSETS.DROP_MENU.LABELS.LABEL3' | translate }}</span>\n            </button>\n        </li>\n        <li class=\"item\">\n            <button (click)=\"openDialog('burn')\" class=\"w-100 px-2 py-1\" type=\"button\">\n                <mat-icon svgIcon=\"zano-burn\" class=\"mr-1\"></mat-icon>\n                <span>{{ 'CUSTOM_ASSETS.DROP_MENU.LABELS.LABEL4' | translate }}</span>\n            </button>\n        </li>\n    </ul>\n</ng-template>\n","import { Component, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { PaginationService } from '@store/pagination/pagination.service';\nimport { PaginationStore } from '@store/pagination/pagination.store';\nimport { Wallet } from '@api/models/wallet.model';\nimport { BackendService } from '@api/services/backend.service';\nimport { Subject } from 'rxjs';\nimport { hasOwnProperty } from '@parts/functions/has-own-property';\nimport { collapseOnLeaveAnimation, expandOnEnterAnimation } from 'angular-animations';\nimport { ZANO_ASSET_INFO, ZanoAssetInfo } from '@parts/data/assets';\nimport { filter, takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-history',\n    templateUrl: './history.component.html',\n    styleUrls: ['./history.component.scss'],\n    animations: [expandOnEnterAnimation(), collapseOnLeaveAnimation()],\n})\nexport class HistoryComponent implements OnInit, OnDestroy {\n    public zanoAssetInfo: ZanoAssetInfo = ZANO_ASSET_INFO;\n\n    public opened_transaction_details: string | undefined;\n\n    public stop_paginate = false;\n\n    public mining = false;\n\n    public wallet: Wallet;\n\n    private _destroy$: Subject<void> = new Subject<void>();\n\n    constructor(\n        public variablesService: VariablesService,\n        private _pagination: PaginationService,\n        private _backendService: BackendService,\n        private _ngZone: NgZone,\n        private _paginationStore: PaginationStore\n    ) {}\n\n    get currentWallet(): Wallet {\n        return this.variablesService.current_wallet;\n    }\n\n    ngOnInit(): void {\n        this.init();\n\n        this.variablesService.currentWalletChangedEvent.pipe(filter(Boolean), takeUntil(this._destroy$)).subscribe({\n            next: (wallet: Wallet) => {\n                this.getRecentTransfers();\n                this.mining = wallet.exclude_mining_txs;\n            },\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.opened_transaction_details = undefined;\n\n        this._destroy$.next();\n        this._destroy$.complete();\n    }\n\n    init(): void {\n        let restore = false;\n        if (hasOwnProperty(this.variablesService.after_sync_request, String(this.variablesService.current_wallet.wallet_id))) {\n            restore = this.variablesService.after_sync_request[this.variablesService.current_wallet.wallet_id];\n        }\n        if (!this.variablesService.sync_started && restore && this.variablesService.current_wallet.wallet_id) {\n            this.wallet = this.variablesService.getNotLoadedWallet();\n            if (this.wallet) {\n                this.tick();\n            }\n            // if this is was restore wallet, and it was selected on moment when sync completed\n            this.getRecentTransfers();\n            this.variablesService.after_sync_request[this.variablesService.current_wallet.wallet_id] = false;\n        }\n        let after_sync_request = false;\n        if (hasOwnProperty(this.variablesService.after_sync_request, String(this.variablesService.current_wallet.wallet_id))) {\n            after_sync_request = this.variablesService.after_sync_request[this.variablesService.current_wallet.wallet_id];\n        }\n        if (after_sync_request && !this.variablesService.sync_started) {\n            // if user click on the wallet at the first time after restore.\n            this.getRecentTransfers();\n        }\n\n        if (hasOwnProperty(this.variablesService.stop_paginate, String(this.variablesService.current_wallet.wallet_id))) {\n            this.stop_paginate = this.variablesService.stop_paginate[this.variablesService.current_wallet.wallet_id];\n        } else {\n            this.stop_paginate = false;\n        }\n        // this will hide pagination a bit earlier\n        this.wallet = this.variablesService.getNotLoadedWallet();\n        if (this.wallet) {\n            this.tick();\n        }\n    }\n\n    resetPaginationValues(): void {\n        this._ngZone.run(() => {\n            const total_history_item = this.variablesService.current_wallet.total_history_item;\n            const count = this.variablesService.count;\n            this.variablesService.current_wallet.totalPages = Math.ceil(total_history_item / count);\n            this.variablesService.current_wallet.exclude_mining_txs = this.mining;\n            this.variablesService.current_wallet.currentPage = 1;\n\n            if (!this.variablesService.current_wallet.totalPages) {\n                this.variablesService.current_wallet.totalPages = 1;\n            }\n            this.variablesService.current_wallet.totalPages > this.variablesService.maxPages\n                ? (this.variablesService.current_wallet.pages = new Array(5).fill(1).map((value, index) => value + index))\n                : (this.variablesService.current_wallet.pages = new Array(this.variablesService.current_wallet.totalPages)\n                      .fill(1)\n                      .map((value, index) => value + index));\n        });\n    }\n\n    setPage(pageNumber: number): void {\n        // this is will allow pagination for wallets that was open from existed wallets'\n        if (pageNumber === this.variablesService.current_wallet.currentPage) {\n            return;\n        }\n        if (this.variablesService.current_wallet.open_from_exist && !this.variablesService.current_wallet.updated) {\n            this.variablesService.get_recent_transfers = false;\n            this.variablesService.current_wallet.updated = true;\n        }\n        // if not running get_recent_transfers callback\n        if (!this.variablesService.get_recent_transfers) {\n            this.variablesService.current_wallet.currentPage = pageNumber;\n        }\n        if (!this.variablesService.get_recent_transfers) {\n            this.getRecentTransfers();\n        }\n    }\n\n    toggleMiningTransactions(): void {\n        if (!this.variablesService.sync_started && !this.wallet) {\n            const value = this._paginationStore.value;\n            if (!value) {\n                this._paginationStore.setPage(1, 0, this.variablesService.current_wallet.wallet_id); // add back page for the first page\n            } else {\n                const pages = value.filter((item) => item.walletID === this.variablesService.current_wallet.wallet_id);\n                if (pages.length === 0) {\n                    this._paginationStore.setPage(1, 0, this.variablesService.current_wallet.wallet_id); // add back page for the first page\n                }\n            }\n            this.mining = !this.mining;\n            this.resetPaginationValues();\n            this.getRecentTransfers();\n        }\n    }\n\n    getRecentTransfers(): void {\n        const offset = this._pagination.getOffset(this.variablesService.current_wallet.wallet_id);\n        const value = this._paginationStore.value;\n        const pages = value ? value.filter((item) => item.walletID === this.variablesService.current_wallet.wallet_id) : [];\n        this._backendService.getRecentTransfers(\n            this.variablesService.current_wallet.wallet_id,\n            offset,\n            this.variablesService.count,\n            this.variablesService.current_wallet.exclude_mining_txs,\n            (status, data) => {\n                const isForward = this._paginationStore.isForward(pages, this.variablesService.current_wallet.currentPage);\n                if (this.mining && isForward && pages && pages.length === 1) {\n                    this.variablesService.current_wallet.currentPage = 1; // set init page after navigation back\n                }\n\n                const history = data && data.history;\n                this.variablesService.stop_paginate[this.variablesService.current_wallet.wallet_id] =\n                    (history && history.length < this.variablesService.count) || !history;\n                this.stop_paginate = this.variablesService.stop_paginate[this.variablesService.current_wallet.wallet_id];\n                if (!this.variablesService.stop_paginate[this.variablesService.current_wallet.wallet_id]) {\n                    const page = this.variablesService.current_wallet.currentPage + 1;\n                    if (isForward && this.mining && history && history.length === this.variablesService.count) {\n                        this._paginationStore.setPage(page, data.last_item_index, this.variablesService.current_wallet.wallet_id); // add back page for current page\n                    }\n                }\n\n                this._pagination.calcPages(data);\n                this._pagination.prepareHistory(data, status);\n\n                this._ngZone.run(() => {\n                    this.variablesService.get_recent_transfers = false;\n                    if (hasOwnProperty(this.variablesService.after_sync_request, String(this.variablesService.current_wallet.wallet_id))) {\n                        // this is will complete get_recent_transfers request\n                        // this will switch of\n                        this.variablesService.after_sync_request[this.variablesService.current_wallet.wallet_id] = false;\n                    }\n                });\n            }\n        );\n    }\n\n    tick(): void {\n        const walletInterval = setInterval(() => {\n            this.wallet = this.variablesService.getNotLoadedWallet();\n            if (!this.wallet) {\n                clearInterval(walletInterval);\n            }\n        }, 1000);\n    }\n\n    toggleTransactionDetails(tx_hash: string): void {\n        if (tx_hash === this.opened_transaction_details) {\n            this.opened_transaction_details = undefined;\n        } else {\n            this.opened_transaction_details = tx_hash;\n        }\n    }\n}\n","<div class=\"history-wrap\" fxFlexFill fxLayout=\"column\">\n    <div class=\"wrap-table scrolled-content mb-2\" fxFlex=\"1 1 auto\">\n        <table class=\"zano-table history-table\">\n            <thead>\n                <tr>\n                    <th>\n                        <div class=\"bg title\">{{ 'HISTORY.STATUS' | translate }}</div>\n                    </th>\n                    <th>\n                        <div class=\"bg title\">{{ 'HISTORY.AMOUNT' | translate }}</div>\n                    </th>\n                    <th>\n                        <div class=\"bg title\">{{ 'HISTORY.FEE' | translate }}</div>\n                    </th>\n                    <th>\n                        <div class=\"bg title\">{{ 'HISTORY.ADDRESS' | translate }}</div>\n                    </th>\n                    <th>\n                        <div class=\"bg title\">{{ 'HISTORY.DATE' | translate }}</div>\n                    </th>\n                </tr>\n                <div class=\"row-divider\"></div>\n            </thead>\n            <tbody>\n                <ng-container *ngFor=\"let transaction of variablesService.current_wallet.history\">\n                    <tr\n                        (click)=\"toggleTransactionDetails(transaction.tx_hash)\"\n                        [class.locked-transaction]=\"!transaction.is_mining && transaction.unlock_time > 0\"\n                    >\n                        <!-- Status -->\n                        <td>\n                            <app-transaction-status [transaction]=\"transaction\"></app-transaction-status>\n                        </td>\n\n                        <!-- Amount -->\n                        <td>\n                            <ng-container *ngFor=\"let item of transaction | getAmountItems : currentWallet\">\n                                <div *appVisibilityBalance class=\"cell-amount\">\n                                    <div class=\"amount\">{{ item.amount }}</div>\n                                    <span class=\"ticker\">{{ item.ticker }}</span>\n                                </div>\n                            </ng-container>\n                        </td>\n\n                        <!-- Fee -->\n                        <td>\n                            <div *ngIf=\"transaction | isVisibleFee\" class=\"cell-fee\">\n                                <ng-container *ngIf=\"transaction?.subtransfers?.length\">\n                                    <ng-container *ngIf=\"transaction.fee; else noFeeTemplate\">\n                                        <mat-icon class=\"mr-1\" style=\"opacity: 50\" svgIcon=\"zano-fire\"></mat-icon>\n\n                                        {{ transaction.fee | intToMoney }}\n                                        {{ variablesService.defaultTicker }}\n                                    </ng-container>\n\n                                    <ng-template #noFeeTemplate>\n                                        <span>{{ 'HISTORY.NO_FEE' | translate }}</span>\n                                    </ng-template>\n                                </ng-container>\n                            </div>\n                        </td>\n\n                        <!-- Address -->\n                        <td class=\"remote-address\">\n                            <ng-container [ngSwitch]=\"true\">\n                                <!-- Message -->\n                                <ng-container *ngSwitchCase=\"!(transaction.tx_type === 0)\">\n                                    <div class=\"text-ellipsis\">\n                                        {{ transaction | historyTypeMessages }}\n                                    </div>\n                                </ng-container>\n\n                                <ng-container *ngSwitchCase=\"transaction.tx_type === 0\">\n                                    <!-- Address -->\n                                    <ng-container\n                                        *ngIf=\"transaction.remote_addresses && transaction.remote_addresses[0] &&\n                                        !transaction.remote_aliases?.[0]?.trim()?.length\"\n                                    >\n                                        <div class=\"text-ellipsis\">\n                                            <span\n                                                (contextmenu)=\"\n                                                    variablesService.onContextMenuOnlyCopy($event, transaction.remote_addresses[0])\n                                                \"\n                                            >\n                                                {{ transaction.remote_addresses[0] | zanoShortString }}\n                                            </span>\n                                        </div>\n                                    </ng-container>\n\n                                    <!-- Alias -->\n                                    <ng-container *ngIf=\"transaction.remote_aliases?.[0]?.trim()?.length\">\n                                        <div fxLayout=\"row nowrap\" fxLayoutAlign=\"start center\">\n                                            <ng-container *ngIf=\"transaction.remote_aliases as remote_aliases\">\n                                                <ng-container *ngIf=\"remote_aliases[0] as firstAlias\">\n                                                    <div\n                                                        [class.available]=\"firstAlias.length >= 1 && firstAlias.length <= 5\"\n                                                        class=\"alias-container\"\n                                                    >\n                                                        <!-- First Alias -->\n                                                        <div\n                                                            (contextmenu)=\"variablesService.onContextMenuOnlyCopy($event, '@' + firstAlias)\"\n                                                            class=\"alias\"\n                                                        >\n                                                            {{ '@' + firstAlias }}\n                                                        </div>\n                                                    </div>\n\n                                                    <!-- Other Aliases -->\n                                                    <ng-container *ngIf=\"remote_aliases.length > 1\">\n                                                        <div\n                                                            [delay]=\"150\"\n                                                            [placement]=\"'bottom'\"\n                                                            [timeout]=\"0\"\n                                                            [tooltipClass]=\"'table-tooltip'\"\n                                                            [tooltip]=\"remoteAliasListTemplate\"\n                                                            class=\"alias-history-count\"\n                                                        >\n                                                            +{{ remote_aliases.length - 1 }}\n                                                        </div>\n                                                    </ng-container>\n\n                                                    <ng-template #remoteAliasListTemplate>\n                                                        <div class=\"alias-history-list\">\n                                                            <ng-container *ngFor=\"let alias of remote_aliases; let first = first\">\n                                                                <!-- Do not display the first alias as it is displayed in the banner -->\n                                                                <ng-container *ngIf=\"!first\">\n                                                                    <p>{{ '@' + alias }}</p>\n                                                                </ng-container>\n                                                            </ng-container>\n                                                        </div>\n                                                    </ng-template>\n                                                </ng-container>\n                                            </ng-container>\n                                        </div>\n                                    </ng-container>\n                                </ng-container>\n\n                                <!-- Hidden -->\n                                <ng-container\n                                    *ngSwitchCase=\"\n                                        !(transaction.remote_addresses?.length || transaction.remote_aliases?.length) &&\n                                        transaction.tx_type === 0\n                                    \"\n                                >\n                                    {{ 'HISTORY.HIDDEN' | translate }}\n                                </ng-container>\n                            </ng-container>\n                        </td>\n\n                        <!-- Date -->\n                        <td>\n                            <div class=\"text-ellipsis\">\n                                {{ transaction.timestamp * 1000 | date : 'dd-MM-yyyy HH:mm' }}\n                            </div>\n                        </td>\n                    </tr>\n\n                    <div class=\"row-divider\"></div>\n\n                    <tr>\n                        <td [ngStyle]=\"{ padding: '0', 'border-radius': '0.8rem' }\" colspan=\"5\">\n                            <app-transaction-details\n                                *ngIf=\"transaction.tx_hash === opened_transaction_details\"\n                                @collapseOnLeave\n                                @expandOnEnter\n                                [transaction]=\"transaction\"\n                            ></app-transaction-details>\n                        </td>\n                    </tr>\n\n                    <tr\n                        *ngIf=\"transaction.tx_hash === opened_transaction_details as state\"\n                        [@collapseOnLeave]=\"{\n                            value: state,\n                            params: { duration: 400 }\n                        }\"\n                        [@expandOnEnter]=\"{ value: state, params: { duration: 150 } }\"\n                        class=\"row-divider\"\n                    ></tr>\n                </ng-container>\n            </tbody>\n        </table>\n    </div>\n\n    <div class=\"pagination-wrapper\">\n        <div class=\"pagination\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n            <div class=\"left\" fxLayout=\"row\" fxLayoutAlign=\" center\">\n                <button\n                    (click)=\"setPage(variablesService.current_wallet.currentPage - 1)\"\n                    [disabled]=\"\n                        variablesService.current_wallet.currentPage === 1 ||\n                        variablesService.isCurrentWalletSync ||\n                        !variablesService.isCurrentWalletLoaded\n                    \"\n                    class=\"btn-icon circle small mr-1\"\n                >\n                    <mat-icon svgIcon=\"zano-arrow-left\"></mat-icon>\n                </button>\n\n                <ng-container *ngIf=\"!mining\">\n                    <button\n                        (click)=\"setPage(page)\"\n                        *ngFor=\"let page of variablesService.current_wallet.pages\"\n                        [class.color-primary]=\"variablesService.current_wallet.currentPage === page\"\n                        [disabled]=\"variablesService.isCurrentWalletSync || !variablesService.isCurrentWalletLoaded\"\n                        class=\"mr-0_5\"\n                    >\n                        {{ page }}\n                    </button>\n                </ng-container>\n\n                <ng-container *ngIf=\"mining\">\n                    <button\n                        (click)=\"setPage(variablesService.current_wallet.currentPage)\"\n                        [disabled]=\"stop_paginate || variablesService.isCurrentWalletSync || !variablesService.isCurrentWalletLoaded\"\n                        [ngClass]=\"{\n                            'color-primary': variablesService.current_wallet.currentPage,\n                            disabled: variablesService.isCurrentWalletSync || !variablesService.isCurrentWalletLoaded\n                        }\"\n                        class=\"mr-0_5\"\n                    >\n                        {{ variablesService.current_wallet.currentPage }}\n                    </button>\n                </ng-container>\n\n                <button\n                    (click)=\"setPage(variablesService.current_wallet.currentPage + 1)\"\n                    [disabled]=\"stop_paginate || variablesService.isCurrentWalletSync || !variablesService.isCurrentWalletLoaded\"\n                    class=\"btn-icon circle small ml-0_5\"\n                >\n                    <mat-icon svgIcon=\"zano-arrow-right\"></mat-icon>\n                </button>\n            </div>\n            <div class=\"right\" fxLayout=\"row\" fxLayoutAlign=\" center\">\n                <span class=\"switch-text mr-2\">Hide mining transactions</span>\n                <app-switch\n                    (emitChange)=\"toggleMiningTransactions()\"\n                    [disabled]=\"variablesService.isCurrentWalletSync || !variablesService.isCurrentWalletLoaded\"\n                    [value]=\"mining\"\n                ></app-switch>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport QRCode from 'qrcode';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { RCV_ADDR_QR_SCALE } from '@parts/data/constants';\n\n@Component({\n    selector: 'app-receive',\n    template: `\n        <div class=\"container overflow-auto\" fxFlexFill fxLayout=\"column\" fxLayoutAlign=\"center center\">\n            <div class=\"wrap-qr mb-2\">\n                <img alt=\"qr-code\" [src]=\"qrImageSrc\" />\n            </div>\n\n            <div\n                class=\"address border-radius-0_8-rem overflow-hidden pl-1 pr-0_5 pt-0_5 pb-0_5\"\n                fxFlex=\"0 0 auto\"\n                fxLayout=\"row\"\n                fxLayoutAlign=\"space-between center\"\n            >\n                <span\n                    [delay]=\"150\"\n                    [placement]=\"'bottom'\"\n                    [timeout]=\"0\"\n                    [tooltipClass]=\"'table-tooltip'\"\n                    [tooltip]=\"variablesService.current_wallet.address\"\n                    class=\"text-ellipsis mr-1\"\n                    >{{ variablesService.current_wallet.address | zanoShortString : 9 : 9 }}</span\n                >\n                <app-copy-button [value]=\"variablesService.current_wallet.address\"></app-copy-button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class ReceiveComponent implements OnInit {\n    qrImageSrc: string;\n\n    constructor(public variablesService: VariablesService) {}\n\n    ngOnInit(): void {\n        QRCode.toDataURL(this.variablesService.current_wallet.address, {\n            width: 200 * RCV_ADDR_QR_SCALE,\n            height: 200 * RCV_ADDR_QR_SCALE,\n        })\n            .then((url) => {\n                this.qrImageSrc = url;\n            })\n            .catch((err) => {\n                console.error(err);\n            });\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@Component({\n    selector: 'zano-add-another-destination-button',\n    standalone: true,\n    imports: [CommonModule, MatIconModule, TranslateModule, MatTooltipModule],\n    templateUrl: './add-another-destination-button.component.html',\n    styleUrls: ['./add-another-destination-button.component.scss'],\n})\nexport class AddAnotherDestinationButtonComponent {\n    @Input() disabled = false;\n}\n","<button [disabled]=\"disabled\" type=\"button\" class=\"add-another-destination-button\">\n    <mat-icon svgIcon=\"zano-plus\"></mat-icon>\n    {{ 'ADD_ANOTHER_DESTINATION.TEXT1' | translate }}\n    <mat-icon svgIcon=\"zano-info\" [matTooltip]=\"'ADD_ANOTHER_DESTINATION.TEXT2' | translate\"></mat-icon>\n</button>\n","import { Component, inject, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IsVisibleControlErrorPipe } from '@parts/pipes/is-visible-control-error.pipe';\nimport { LoaderComponent } from '@parts/components/loader.component';\nimport { LowerCaseDirective } from '@parts/directives';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatOptionModule } from '@angular/material/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ShortStringPipe } from '@parts/pipes';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { BehaviorSubject, merge, Observable, Subject } from 'rxjs';\nimport { debounceTime, map, startWith, takeUntil, tap } from 'rxjs/operators';\nimport { WalletsService } from '@parts/services/wallets.service';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { DestinationsForm } from '../../send.component';\nimport { CdkVirtualScrollViewport, ScrollingModule } from '@angular/cdk/scrolling';\n\n@Component({\n    selector: 'zano-address-field',\n    standalone: true,\n    imports: [\n        CommonModule,\n        IsVisibleControlErrorPipe,\n        LoaderComponent,\n        LowerCaseDirective,\n        MatAutocompleteModule,\n        MatOptionModule,\n        ReactiveFormsModule,\n        ShortStringPipe,\n        TranslateModule,\n        ScrollingModule,\n    ],\n    templateUrl: './address-field.component.html',\n    styleUrls: ['./address-field.component.scss'],\n})\nexport class AddressFieldComponent implements OnInit, OnDestroy {\n    @ViewChild(CdkVirtualScrollViewport)\n    cdkVirtualScrollViewPort: CdkVirtualScrollViewport;\n\n    @Input() control_ref: DestinationsForm;\n\n    variables_service: VariablesService = inject(VariablesService);\n\n    address_items$: Observable<string[]>;\n\n    loading_address_items$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\n\n    lower_case_disabled$: BehaviorSubject<boolean> = new BehaviorSubject(true);\n\n    error_messages: { [key: string]: string } = {\n        address: '',\n    };\n\n    private readonly _wallets_service: WalletsService = inject(WalletsService);\n\n    private readonly _opened_wallet_items: string[] = this._wallets_service.opened_wallet_items;\n\n    private readonly _alias_items: string[] = this.variables_service.all_aliases\n        .filter(Boolean)\n        .map((alias_info) => '@' + alias_info.alias);\n\n    private readonly _destroy$: Subject<void> = new Subject<void>();\n\n    ngOnInit(): void {\n        this.address_items$ = this.control_ref.controls.address.valueChanges.pipe(\n            startWith(this.control_ref.controls.address.value),\n            tap((value) => {\n                const condition = value.startsWith('@');\n                this.lower_case_disabled$.next(!condition);\n                this.loading_address_items$.next(condition);\n            }),\n            debounceTime(800),\n            map((value) => {\n                if (!value?.length) {\n                    return this._opened_wallet_items;\n                }\n                if (value.startsWith('@')) {\n                    return this._alias_items.filter((alias) => {\n                        return alias.includes(value);\n                    });\n                }\n                return [];\n            }),\n            tap(() => this.loading_address_items$.next(false))\n        );\n\n        merge(\n            this.control_ref.controls.address.statusChanges,\n            this.control_ref.controls.address.valueChanges,\n            this.control_ref.statusChanges,\n            this.control_ref.valueChanges\n        )\n            .pipe(takeUntil(this._destroy$))\n            .subscribe((): void => this.updateAddressErrorMessage());\n    }\n\n    ngOnDestroy(): void {\n        this._destroy$.next();\n        this._destroy$.complete();\n    }\n\n    pasteListenAddressField(event: ClipboardEvent): void {\n        event.preventDefault();\n        const address = this.control_ref.controls.address;\n        const { clipboardData } = event;\n        let value: string = clipboardData.getData('Text') ?? '';\n        this.lower_case_disabled$.next(value.indexOf('@') !== 0);\n\n        if (value.indexOf('@') === 0) {\n            value = value.toLowerCase();\n        }\n\n        address.patchValue(value);\n    }\n\n    trackByFn(index: number, value: string): number | string {\n        return value ?? index;\n    }\n\n    updateAddressErrorMessage(): void {\n        const address = this.control_ref.controls.address;\n        let message = '';\n\n        switch (true) {\n            case address.hasError('address_not_valid'): {\n                message = 'SEND.FORM_ERRORS.ADDRESS_NOT_VALID';\n                break;\n            }\n            case address.hasError('alias_not_found'): {\n                message = 'SEND.FORM_ERRORS.ALIAS_NOT_FOUND';\n                break;\n            }\n            case address.hasError('alias_not_valid'): {\n                message = 'SEND.FORM_ERRORS.ALIAS_NOT_VALID';\n                break;\n            }\n            case address.hasError('required'): {\n                message = 'ERRORS.REQUIRED';\n                break;\n            }\n        }\n        this.error_messages['address'] = message;\n    }\n\n    openAutocomplete() {\n        this.cdkVirtualScrollViewPort?.scrollToIndex(0);\n        this.cdkVirtualScrollViewPort?.checkViewportSize();\n    }\n}\n","<ng-container\n    *ngIf=\"{\n        items: address_items$ | async,\n        loading: loading_address_items$ | async,\n        lowerCaseDisabled: lower_case_disabled$ | async\n    } as vm\"\n>\n    <div class=\"form__field\">\n        <label for=\"address\">\n            {{ 'SEND.ADDRESS' | translate }}\n            <span class=\"color-red\">*</span>\n        </label>\n\n        <input\n            (blur)=\"updateAddressErrorMessage()\"\n            (contextmenu)=\"variables_service.onContextMenu($event)\"\n            (paste)=\"pasteListenAddressField($event)\"\n            [formControl]=\"control_ref.controls.address\"\n            [lowerCaseDisabled]=\"vm.lowerCaseDisabled\"\n            [matAutocomplete]=\"auto\"\n            [placeholder]=\"'PLACEHOLDERS.ADDRESS_PLACEHOLDER' | translate\"\n            class=\"form__field--input\"\n            id=\"address\"\n            lowerCase\n            matAutocompletePosition=\"auto\"\n            type=\"text\"\n        />\n\n        <mat-autocomplete (opened)=\"openAutocomplete()\" #auto=\"matAutocomplete\" class=\"zano-autocomplete-panel\">\n\n            <ng-container *ngIf=\"!variables_service.is_remote_node\">\n                <mat-option *ngIf=\"vm.loading\" class=\"loading\" disabled>\n                    <zano-loader class=\"mx-auto\" style=\"display: block; width: fit-content\"></zano-loader>\n                </mat-option>\n\n                <mat-option\n                    *ngIf=\"control_ref.controls.address.value.startsWith('@') && vm.items?.length === 0 && !vm.loading\"\n                    disabled\n                >\n                    <span class=\"pl-1\"> Not found aliases </span>\n                </mat-option>\n            </ng-container>\n\n            <ng-container *ngIf=\"!vm.loading\">\n                <cdk-virtual-scroll-viewport [style.height.px]=\"5 * 40\" itemSize=\"40\">\n                    <mat-option *cdkVirtualFor=\"let item of vm.items; trackBy: trackByFn\" [value]=\"item\">\n                        <!-- Alias -->\n                        <ng-container *ngIf=\"item.startsWith('@'); else itemAddressTemplate\">\n                            <div\n                                [ngClass]=\"{\n                                    available: item.length >= 1 && item.length <= 6,\n                                    'pl-1': item.length > 6\n                                }\"\n                                class=\"alias-container\"\n                            >\n                                <div class=\"alias\">\n                                    {{ item }}\n                                </div>\n                            </div>\n                        </ng-container>\n\n                        <!-- Address -->\n                        <ng-template #itemAddressTemplate>\n                            <span class=\"pl-1\">{{ item | zanoShortString }}</span>\n                        </ng-template>\n                    </mat-option>\n                </cdk-virtual-scroll-viewport>\n            </ng-container>\n        </mat-autocomplete>\n\n        <div *ngIf=\"control_ref.controls.address | isVisibleControlError\" class=\"error\">\n            {{ error_messages['address'] | translate }}\n        </div>\n\n        <ng-container *ngIf=\"control_ref.controls.is_visible_wrap_info.value\">\n            <ng-container *ngIf=\"variables_service.is_wrap_info_service_inactive$ | async\">\n                <div class=\"error\">\n                    {{ 'ERRORS.WRAP_SERVICE_IS_INACTIVE' | translate }}\n                </div>\n            </ng-container>\n        </ng-container>\n\n        <div *ngIf=\"control_ref.controls.alias_address.value\" class=\"info text-ellipsis\">\n            <span>{{ control_ref.controls.alias_address.value | zanoShortString }}</span>\n        </div>\n    </div>\n</ng-container>\n","import { Component, inject, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { InputValidateModule, TooltipModule } from '@parts/directives';\nimport { IsVisibleControlErrorPipe } from '@parts/pipes/is-visible-control-error.pipe';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { PriceInfo } from '@api/models/assets.model';\nimport { combineLatest, Subject } from 'rxjs';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { distinctUntilChanged, map, startWith, takeUntil } from 'rxjs/operators';\nimport { BigNumber } from 'bignumber.js';\nimport { DestinationsForm } from '../../send.component';\nimport { ZANO_ASSET_INFO } from '@parts/data/assets';\n\ninterface  AmountInputParams {\n    decimalPoint: number;\n    inputTicker: string;\n    hintTicker: string;\n    hintAmount: string;\n    toggleInputModeDisabled: boolean;\n}\n\nconst default_price_info: PriceInfo = {\n    success: false,\n    data: 'Asset not found',\n};\n\n@Component({\n    selector: 'zano-amount-field',\n    standalone: true,\n    imports: [\n        CommonModule,\n        FormsModule,\n        InputValidateModule,\n        IsVisibleControlErrorPipe,\n        MatIconModule,\n        ReactiveFormsModule,\n        TranslateModule,\n        TooltipModule,\n    ],\n    templateUrl: './amount-field.component.html',\n    styleUrls: ['./amount-field.component.scss'],\n})\nexport class AmountFieldComponent implements OnInit, OnDestroy, OnChanges {\n    @Input() control_ref: DestinationsForm;\n\n    @Input()\n    price_info: PriceInfo = default_price_info;\n\n    price_info$ = new Subject<PriceInfo>();\n\n    variables_service = inject(VariablesService);\n\n    amount_input_params: AmountInputParams = {\n        decimalPoint: ZANO_ASSET_INFO.decimal_point,\n        inputTicker: ZANO_ASSET_INFO.ticker,\n        hintTicker: '',\n        hintAmount: '',\n        toggleInputModeDisabled: true,\n    };\n\n    private readonly _destroy$ = new Subject<void>();\n\n    ngOnInit(): void {\n        const { controls } = this.control_ref;\n\n        combineLatest([\n            controls.asset_id.valueChanges.pipe(startWith(controls.asset_id.value)),\n            controls.is_currency_input_mode.valueChanges.pipe(startWith(controls.is_currency_input_mode.value), distinctUntilChanged()),\n            controls.amount.valueChanges.pipe(startWith(controls.amount.value)),\n            this.price_info$,\n        ])\n            .pipe(\n                map(([asset_id, is_currency_input_mode, amount, priceInfo]) =>\n                    this._buildAmountInputParams(asset_id, is_currency_input_mode, amount, priceInfo)\n                ),\n                takeUntil(this._destroy$)\n            )\n            .subscribe((params) => {\n                this.amount_input_params = params;\n                this.control_ref.updateValueAndValidity();\n            });\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.price_info) {\n            setTimeout(() => {\n                this.price_info$.next(changes.price_info.currentValue);\n            }, 150);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this._destroy$.next();\n        this._destroy$.complete();\n    }\n\n    toggleInputMode(): void {\n        const { is_currency_input_mode } = this.control_ref.getRawValue();\n        this.control_ref.controls.is_currency_input_mode.patchValue(!is_currency_input_mode);\n    }\n\n    private _buildAmountInputParams(\n        asset_id: string,\n        is_currency_input_mode: boolean,\n        amount: number | string,\n        priceInfo: PriceInfo\n    ): AmountInputParams {\n        const { current_wallet, settings } = this.variables_service;\n        const asset = current_wallet.getBalanceByAssetId(asset_id)?.asset_info;\n        const decimalPoint = asset?.decimal_point ?? ZANO_ASSET_INFO.decimal_point;\n        const assetTicker = asset?.ticker ?? ZANO_ASSET_INFO.ticker;\n        const currencyTicker = settings.currency.toUpperCase();\n\n        const params: AmountInputParams = {\n            decimalPoint,\n            inputTicker: assetTicker,\n            hintTicker: currencyTicker,\n            hintAmount: '0',\n            toggleInputModeDisabled: false,\n        };\n\n        if (!priceInfo.success) {\n            params.toggleInputModeDisabled = true;\n            this.control_ref.controls.is_currency_input_mode.patchValue(false);\n            return params;\n        }\n\n        const currency_price =\n            typeof priceInfo.data === 'object' && priceInfo.data !== null\n                ? priceInfo.data.fiat_prices?.[settings.currency] ?? 0\n                : 0;\n\n        const fiatDecimalPlaces = BigNumber(currency_price).decimalPlaces() ?? 3;\n        if (is_currency_input_mode) {\n\n            const converted = BigNumber(+amount || 0).dividedBy(currency_price).decimalPlaces(decimalPoint);\n\n            return {\n                ...params,\n                decimalPoint: fiatDecimalPlaces,\n                inputTicker: currencyTicker,\n                hintTicker: assetTicker,\n                hintAmount: `~ ${converted.toString()}`,\n            };\n        } else {\n            const hintValue = BigNumber(currency_price)\n                .multipliedBy(+amount || 0)\n                .decimalPlaces(fiatDecimalPlaces)\n                .toString();\n\n            return {\n                ...params,\n                decimalPoint,\n                inputTicker: assetTicker,\n                hintTicker: currencyTicker,\n                hintAmount: `~ ${hintValue}`,\n            };\n        }\n    }\n}\n","<div class=\"form__field amount\">\n    <label for=\"send-amount\">\n        {{ 'SEND.AMOUNT' | translate }}\n        <span class=\"color-red\">*</span>\n    </label>\n\n    <input\n        (contextmenu)=\"variables_service.onContextMenu($event)\"\n        [decimalPoint]=\"amount_input_params.decimalPoint\"\n        [formControl]=\"control_ref.controls.amount\"\n        [placeholder]=\"'0'\"\n        appInputValidate=\"money\"\n        class=\"form__field--input\"\n        id=\"send-amount\"\n        type=\"text\"\n    />\n\n    <button (click)=\"toggleInputMode()\" [disabled]=\"amount_input_params.toggleInputModeDisabled\" class=\"btn-reverse\" type=\"button\">\n        <mat-icon class=\"small\" svgIcon=\"zano-swap\"></mat-icon>\n    </button>\n\n    <div\n        [delay]=\"150\"\n        [placement]=\"'bottom'\"\n        [timeDelay]=\"1000\"\n        [timeout]=\"0\"\n        [tooltipClass]=\"'table-tooltip'\"\n        [tooltip]=\"amount_input_params.inputTicker\"\n        class=\"ticker\"\n    >\n        <div class=\"text-ellipsis\">\n            {{ amount_input_params.inputTicker }}\n        </div>\n    </div>\n\n    <ng-container *ngIf=\"control_ref.controls.amount | isVisibleControlError; else errorList2Template\">\n        <ng-container *ngIf=\"control_ref.controls.amount.hasError('zero'); else error2Template\">\n            <div class=\"error\">\n                {{ 'SEND.FORM_ERRORS.AMOUNT_ZERO' | translate }}\n            </div>\n        </ng-container>\n\n        <ng-template #error2Template>\n            <ng-container *ngIf=\"control_ref.controls.amount.hasError('required')\">\n                <div class=\"error\">\n                    {{ 'ERRORS.REQUIRED' | translate }}\n                </div>\n            </ng-container>\n        </ng-template>\n    </ng-container>\n\n    <ng-template #errorList2Template>\n        <ng-container *ngIf=\"control_ref | isVisibleControlError\">\n            <ng-container *ngIf=\"control_ref.hasError('greater_max'); else error3Template\">\n                <div class=\"error\">\n                    {{ 'ERRORS.MAX' | translate : { max: control_ref.errors['greater_max'].max } }}\n                </div>\n            </ng-container>\n\n            <ng-template #error3Template>\n                <ng-container *ngIf=\"control_ref.hasError('insufficientFunds'); else error4Template\">\n                    <div class=\"error\">\n                        {{ this.control_ref.errors['insufficientFunds'].errorText | translate }}\n                    </div>\n                </ng-container>\n            </ng-template>\n\n            <ng-template #error4Template>\n                <ng-container *ngIf=\"control_ref.hasError('great_than_unwraped_coins'); else error5Template\">\n                    <div class=\"error\">\n                        {{ 'SEND.FORM_ERRORS.GREAT_THAN_UNWRAPPED_COINS' | translate }}\n                    </div>\n                </ng-container>\n            </ng-template>\n\n            <ng-template #error5Template>\n                <ng-container *ngIf=\"control_ref.hasError('less_than_zano_needed'); else error6Template\">\n                    <div class=\"error\">\n                        {{ 'SEND.FORM_ERRORS.LESS_THAN_ZANO_NEEDED' | translate }}\n                    </div>\n                </ng-container>\n            </ng-template>\n\n            <ng-template #error6Template>\n                <ng-container *ngIf=\"control_ref.hasError('wrap_info_null'); else error7Template\">\n                    <div class=\"error\">\n                        {{ 'SEND.FORM_ERRORS.WRAP_INFO_NULL' | translate }}\n                    </div>\n                </ng-container>\n            </ng-template>\n\n            <ng-template #error7Template>\n                <ng-container *ngIf=\"control_ref.hasError('asset_not_found')\">\n                    <div class=\"error\">\n                        {{ 'ERRORS.ASSET_NOT_FOUND' | translate }}\n                    </div>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n    </ng-template>\n\n    <ng-container *ngIf=\"!((control_ref.controls.amount | isVisibleControlError) || (control_ref | isVisibleControlError))\">\n        <div class=\"hint text-ellipsis\">\n            {{ amount_input_params.hintAmount }}\n            {{ amount_input_params.hintTicker }}\n        </div>\n    </ng-container>\n</div>\n","import { Component, Input, OnChanges } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { GetLogoByAssetInfoPipe } from '@parts/pipes/get-logo-by-asset-info.pipe';\nimport { IntToMoneyPipeModule } from '@parts/pipes';\nimport { IsVisibleControlErrorPipe } from '@parts/pipes/is-visible-control-error.pipe';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { VisibilityBalanceDirective } from '@parts/directives/visibility-balance.directive';\nimport { AssetBalance } from '@api/models/assets.model';\nimport { ZANO_ASSET_INFO } from '@parts/data/assets';\n\n@Component({\n    selector: 'zano-asset-field',\n    standalone: true,\n    imports: [\n        CommonModule,\n        FormsModule,\n        GetLogoByAssetInfoPipe,\n        IntToMoneyPipeModule,\n        IsVisibleControlErrorPipe,\n        NgSelectModule,\n        ReactiveFormsModule,\n        TranslateModule,\n        VisibilityBalanceDirective,\n    ],\n    templateUrl: './asset-field.component.html',\n    styleUrls: ['./asset-field.component.scss'],\n})\nexport class AssetFieldComponent implements OnChanges {\n    @Input()\n    control_ref: FormControl<string>;\n\n    @Input()\n    balances: AssetBalance[] = [];\n\n    @Input()\n    is_visible_wrap_info = false;\n\n    items: (AssetBalance & { disabled: boolean })[] = [];\n\n    ngOnChanges(): void {\n        const disabled = this.is_visible_wrap_info;\n        this.items = this.balances.map((balance: AssetBalance) => prepareAssetBalanceToItem(balance, disabled));\n    }\n}\n\nconst prepareAssetBalanceToItem = (balance: AssetBalance, disabled: boolean): AssetBalance & { disabled: boolean } => {\n    const {\n        asset_info: { asset_id },\n    } = balance;\n\n    if (asset_id === ZANO_ASSET_INFO.asset_id) {\n        return { ...balance, disabled: false };\n    }\n\n    return { ...balance, disabled };\n};\n","<div class=\"form__field fixed\">\n    <label>\n        {{ 'SEND.ASSET' | translate }}\n        <span class=\"color-red\">*</span>\n    </label>\n    <ng-select\n        [bindValue]=\"'asset_info.asset_id'\"\n        [clearable]=\"false\"\n        [items]=\"items\"\n        [searchable]=\"false\"\n        class=\"custom-select with-circle\"\n        [formControl]=\"control_ref\"\n    >\n        <ng-template let-asset=\"item\" ng-label-tmp ng-option-tmp>\n            <div [innerHTML]=\"asset.asset_info | getLogoByAssetInfo\" class=\"token-logo\"></div>\n            {{ asset.asset_info.full_name ?? '***' }}\n\n            <ng-container *appVisibilityBalance>\n                ({{ asset.total | intToMoney : asset.asset_info.decimal_point }} {{ asset.asset_info.ticker }})\n            </ng-container>\n        </ng-template>\n    </ng-select>\n    <div *ngIf=\"control_ref | isVisibleControlError\" class=\"error\">\n        <div *ngIf=\"control_ref.hasError('required')\">\n            {{ 'ERRORS.REQUIRED' | translate }}\n        </div>\n    </div>\n</div>\n","import { Component, inject, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IsVisibleControlErrorPipe } from '@parts/pipes/is-visible-control-error.pipe';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { VariablesService } from '@parts/services/variables.service';\n\n@Component({\n    selector: 'zano-comment-field',\n    standalone: true,\n    imports: [CommonModule, FormsModule, IsVisibleControlErrorPipe, ReactiveFormsModule, TranslateModule],\n    templateUrl: './comment-field.component.html',\n    styleUrls: ['./comment-field.component.scss'],\n})\nexport class CommentFieldComponent {\n    @Input() control_ref: FormControl<string>;\n\n    variables_service: VariablesService = inject(VariablesService);\n}\n","<div class=\"form__field fixed\">\n    <label for=\"send-comment\">{{ 'SEND.COMMENT' | translate }}</label>\n    <input\n        (contextmenu)=\"variables_service.onContextMenu($event)\"\n        [formControl]=\"control_ref\"\n        [maxLength]=\"variables_service.maxCommentLength\"\n        [placeholder]=\"'PLACEHOLDERS.COMMENT_PLACEHOLDER' | translate\"\n        class=\"form__field--input\"\n        id=\"send-comment\"\n        type=\"text\"\n    />\n    <div *ngIf=\"control_ref | isVisibleControlError\" class=\"error\">\n        <div *ngIf=\"control_ref.hasError('maxLength')\">\n            {{ 'SEND.FORM_ERRORS.MAX_LENGTH' | translate }}\n        </div>\n    </div>\n</div>\n","import { Component, inject, Input, OnDestroy, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { InputValidateModule } from '@parts/directives';\nimport { IsVisibleControlErrorPipe } from '@parts/pipes/is-visible-control-error.pipe';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { intToMoney } from '@parts/functions/int-to-money';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { ZANO_ASSET_INFO } from '@parts/data/assets';\nimport { merge, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { MAXIMUM_VALUE } from '@parts/data/constants';\n\n@Component({\n    selector: 'zano-fee-field',\n    standalone: true,\n    imports: [CommonModule, FormsModule, InputValidateModule, IsVisibleControlErrorPipe, ReactiveFormsModule, TranslateModule],\n    templateUrl: './fee-field.component.html',\n    styleUrls: ['./fee-field.component.scss'],\n})\nexport class FeeFieldComponent implements OnInit, OnDestroy {\n    @Input() control_ref: FormControl<string>;\n\n    private readonly _destroy$: Subject<void> = new Subject<void>();\n\n    variables_service: VariablesService = inject(VariablesService);\n\n    private readonly _translate_service: TranslateService = inject(TranslateService);\n\n    error_messages: { [key: string]: string | undefined } = {\n        fee: undefined,\n    };\n\n    ngOnInit(): void {\n        merge(this.control_ref.statusChanges, this.control_ref.valueChanges)\n            .pipe(takeUntil(this._destroy$))\n            .subscribe((): void => this.updateFeeErrorMessage());\n    }\n\n    ngOnDestroy(): void {\n        this._destroy$.next();\n        this._destroy$.complete();\n    }\n\n    updateFeeErrorMessage(): void {\n        const fee = this.control_ref;\n        let message: string | undefined;\n\n        switch (true) {\n            case fee.hasError('less_min'): {\n                const { default_fee } = this.variables_service;\n                message = this._translate_service.instant('SEND.FORM_ERRORS.FEE_MINIMUM', { fee: default_fee });\n                break;\n            }\n            case fee.hasError('required'): {\n                message = 'SEND.FORM_ERRORS.FEE_REQUIRED';\n                break;\n            }\n            case fee.hasError('greater_max'): {\n                const { decimal_point } = ZANO_ASSET_INFO;\n                const max = intToMoney(MAXIMUM_VALUE, decimal_point);\n                message = this._translate_service.instant('ERRORS.MAX', { max });\n                break;\n            }\n        }\n\n        this.error_messages['fee'] = message;\n    }\n}\n","<div class=\"form__field fixed\">\n    <label for=\"send-fee\">\n        {{ 'SEND.FEE' | translate }}\n        <span class=\"color-red\">*</span>\n    </label>\n    <input\n        (blur)=\"updateFeeErrorMessage()\"\n        (contextmenu)=\"variables_service.onContextMenu($event)\"\n        [placeholder]=\"'PLACEHOLDERS.FEE_PLACEHOLDER' | translate\"\n        appInputValidate=\"money\"\n        class=\"form__field--input\"\n        [formControl]=\"control_ref\"\n        id=\"send-fee\"\n        type=\"text\"\n    />\n    <div *ngIf=\"control_ref | isVisibleControlError\" class=\"error\">\n        {{ error_messages['fee'] | translate }}\n    </div>\n</div>\n","import { Component, inject, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IsVisibleControlErrorPipe } from '@parts/pipes/is-visible-control-error.pipe';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { InputValidateModule } from '@parts/directives';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { VariablesService } from '@parts/services/variables.service';\n\n@Component({\n    selector: 'zano-mixin-field',\n    standalone: true,\n    imports: [CommonModule, IsVisibleControlErrorPipe, ReactiveFormsModule, InputValidateModule, TranslateModule],\n    templateUrl: './mixin-field.component.html',\n    styleUrls: ['./mixin-field.component.scss'],\n})\nexport class MixinFieldComponent {\n    @Input()\n    control_ref: FormControl<number>;\n\n    variablesService: VariablesService = inject(VariablesService);\n}\n","<div class=\"form__field fixed\">\n    <label for=\"send-mixin\">\n        {{ 'SEND.MIXIN' | translate }}\n        <span class=\"color-red\">*</span>\n    </label>\n    <input\n        (contextmenu)=\"variablesService.onContextMenu($event)\"\n        [placeholder]=\"'PLACEHOLDERS.AMOUNT_PLACEHOLDER' | translate\"\n        appInputValidate=\"integer\"\n        class=\"form__field--input\"\n        [formControl]=\"control_ref\"\n        id=\"send-mixin\"\n        maxlength=\"3\"\n        type=\"text\"\n    />\n    <div *ngIf=\"control_ref | isVisibleControlError\" class=\"error\">\n        <div *ngIf=\"control_ref.hasError('required')\">\n            {{ 'ERRORS.REQUIRED' | translate }}\n        </div>\n        <div *ngIf=\"control_ref.hasError('min')\">{{ 'Min' }} {{ control_ref.getError('min')['min'] }}</div>\n        <div *ngIf=\"control_ref.hasError('max')\">{{ 'Max' }} {{ control_ref.getError('max')['max'] }}</div>\n    </div>\n</div>\n","import { Component, inject, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IntToMoneyPipeModule } from '@parts/pipes';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ZANO_ASSET_INFO } from '@parts/data/assets';\nimport { WrapInfo } from '@api/models/wrap-info';\nimport { BigNumber } from 'bignumber.js';\nimport { AssetBalance, PriceInfo } from '@api/models/assets.model';\nimport { moneyToInt } from '@parts/functions/money-to-int';\nimport { VariablesService } from '@parts/services/variables.service';\n\n@Component({\n    selector: 'zano-wrap-information',\n    standalone: true,\n    imports: [CommonModule, IntToMoneyPipeModule, MatIconModule, TranslateModule],\n    templateUrl: './wrap-information.component.html',\n    styleUrls: ['./wrap-information.component.scss'],\n})\nexport class WrapInformationComponent {\n    @Input()\n    wrap_info: WrapInfo;\n\n    @Input()\n    price_info: PriceInfo;\n\n    @Input()\n    hide_received_value: boolean;\n\n    @Input()\n    amount: any;\n\n    @Input()\n    is_currency_input_mode: boolean;\n\n    @Input()\n    asset_id: string;\n\n    private readonly _variables_service = inject(VariablesService);\n\n    readonly zano_asset_info = ZANO_ASSET_INFO;\n\n    getReceivedValue(): number | BigNumber {\n        const convertedAmount = (): string => {\n            let currency_price = 0;\n            const { settings: { currency } } = this._variables_service;\n            if (typeof this.price_info.data === 'object') {\n                const { data } = this.price_info;\n                currency_price = data.fiat_prices[currency] ?? 0;\n            }\n\n            let decimal_point = 0;\n            const { current_wallet } = this._variables_service;\n            const asset: AssetBalance | undefined = current_wallet.getBalanceByAssetId(this.asset_id);\n\n            if (asset) {\n                const { asset_info } = asset;\n                decimal_point = asset_info.decimal_point;\n            }\n\n            const convertedAmount = BigNumber(this.amount || 0).dividedBy(currency_price).decimalPlaces(decimal_point);\n\n            return convertedAmount.toString();\n        };\n        const prepared_amount: BigNumber = moneyToInt(this.is_currency_input_mode ? convertedAmount() : this.amount || '0');\n\n        const {\n            tx_cost: { zano_needed_for_erc20 },\n        } = this.wrap_info;\n        const needed: BigNumber = new BigNumber(zano_needed_for_erc20);\n\n        if (prepared_amount && needed) {\n            return prepared_amount.minus(needed);\n        }\n        return 0;\n    }\n}\n","<div class=\"wrap p-2\">\n    <p class=\"title\">\n        {{ 'SEND.WRAP.TITLE' | translate }}\n        <mat-icon svgIcon=\"zano-info\"></mat-icon>\n    </p>\n\n    <p class=\"text-wrap\">\n        {{ 'SEND.WRAP.MAIN_TEXT' | translate }}\n    </p>\n\n    <p class=\"title\">{{ 'SEND.WRAP.ESTIMATE' | translate }}</p>\n\n    <table class=\"text-wrap\">\n        <tr>\n            <td>{{ 'SEND.WRAP.WILL_RECEIVE' | translate }}</td>\n            <td *ngIf=\"!hide_received_value\">\n                {{ getReceivedValue() | intToMoney }}\n                {{ 'SEND.WRAP.wZANO' | translate }}\n            </td>\n            <td *ngIf=\"hide_received_value\">-</td>\n        </tr>\n        <tr>\n            <td>{{ 'SEND.WRAP.FEE' | translate }}</td>\n            <td>\n                {{ wrap_info?.tx_cost?.zano_needed_for_erc20 | intToMoney : zano_asset_info.decimal_point }}\n                {{ 'SEND.WRAP.ZANO' | translate }}\n                (${{ wrap_info.tx_cost?.usd_needed_for_erc20 }})\n            </td>\n        </tr>\n    </table>\n</div>\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\nimport {\n    AsyncCommandResults,\n    BackendService,\n    CurrentActionState,\n    ResponseAsyncTransfer,\n    StatusCurrentActionState,\n} from '@api/services/backend.service';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { BLOCK_EXPLORER_TN_TX_URL_PREFIX, BLOCK_EXPLORER_TX_URL_PREFIX } from '@parts/data/constants';\n\nconst successfulStatuses: string[] = [\n    StatusCurrentActionState.STATE_SENDING,\n    StatusCurrentActionState.STATE_SENT_SUCCESS,\n    StatusCurrentActionState.STATE_INITIALIZING,\n    StatusCurrentActionState.STATE_DOWNLOADING_CONSENSUS,\n    StatusCurrentActionState.STATE_MAKING_TUNNEL_A,\n    StatusCurrentActionState.STATE_MAKING_TUNNEL_B,\n    StatusCurrentActionState.STATE_CREATING_STREAM,\n    StatusCurrentActionState.STATE_SUCCESS,\n];\n\nconst failedStatuses: string[] = [StatusCurrentActionState.STATE_SEND_FAILED, StatusCurrentActionState.STATE_FAILED];\n\n@Component({\n    selector: 'app-send-details-modal',\n    templateUrl: './send-details-modal.component.html',\n    styleUrls: ['./send-details-modal.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SendDetailsModalComponent implements OnInit, OnDestroy {\n    @HostBinding('class.modal-overlay') modalOverlay = true;\n\n    @Input() job_id: number;\n\n    @Output() event_close = new EventEmitter<boolean>();\n\n    @ViewChild('elDetailsList', { static: true }) elDetailsList: ElementRef;\n\n    responseData$ = new BehaviorSubject<ResponseAsyncTransfer>(null);\n\n    stateDetails$ = new BehaviorSubject<boolean>(false);\n\n    currentActionState$ = new BehaviorSubject<CurrentActionState>(null);\n\n    currentActionStates$ = new BehaviorSubject<CurrentActionState[]>([]);\n\n    success = false;\n\n    private destroy$: Subject<void> = new Subject<void>();\n\n    constructor(private backendService: BackendService, private variablesService: VariablesService, private renderer: Renderer2) {}\n\n    get currentActionState(): CurrentActionState {\n        return this.currentActionState$.value;\n    }\n\n    get currentActionStates(): CurrentActionState[] {\n        return this.currentActionStates$.value;\n    }\n\n    get isSentSuccess(): boolean {\n        return this.currentActionState && this.currentActionState.status === StatusCurrentActionState.STATE_SENT_SUCCESS;\n    }\n\n    get isSentFailed(): boolean {\n        return this.currentActionState && this.currentActionState.status === StatusCurrentActionState.STATE_SEND_FAILED;\n    }\n\n    get isDetailsNotEmpty(): boolean {\n        return !!(this.responseData$.value || this.currentActionStates$.value.length > 0);\n    }\n\n    ngOnInit(): void {\n        this.renderer.addClass(document.body, 'no-scroll');\n        const {\n            current_wallet: { wallet_id },\n            settings: { appUseTor },\n        } = this.variablesService;\n\n        if (appUseTor) {\n            this.backendService.handleCurrentActionState$.pipe(filter(Boolean), takeUntil(this.destroy$)).subscribe({\n                next: (currentActionState: CurrentActionState) => {\n                    this.currentActionState$.next(currentActionState);\n                    this.currentActionStates$.next([...this.currentActionStates, currentActionState]);\n                },\n            });\n        } else {\n            const actionState: CurrentActionState = {\n                status: StatusCurrentActionState.STATE_INITIALIZING,\n                wallet_id,\n            };\n            this.currentActionState$.next(actionState);\n            this.currentActionStates$.next([...this.currentActionStates, actionState]);\n        }\n\n        this.backendService.dispatchAsyncCallResult$\n            .pipe(\n                filter(Boolean),\n                filter(({ job_id, response }: AsyncCommandResults<ResponseAsyncTransfer>) => this.job_id === job_id && !!response),\n                takeUntil(this.destroy$)\n            )\n            .subscribe({\n                next: ({ response }: AsyncCommandResults<ResponseAsyncTransfer>) => {\n                    const { response_data } = response;\n                    const success = response_data?.success ?? false;\n                    this.success = success;\n\n                    const actionState: CurrentActionState = {\n                        status: success ? StatusCurrentActionState.STATE_SENT_SUCCESS : StatusCurrentActionState.STATE_SEND_FAILED,\n                        wallet_id,\n                    };\n                    this.currentActionState$.next(actionState);\n                    this.currentActionStates$.next([...this.currentActionStates, actionState]);\n\n                    this.responseData$.next(response);\n                },\n            });\n    }\n\n    ngOnDestroy(): void {\n        this.renderer.removeClass(document.body, 'no-scroll');\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    toggleDetails(): void {\n        this.stateDetails$.next(!this.stateDetails$.value);\n        setTimeout(() => this.scrollToBottomDetailsList(), 100);\n    }\n\n    trackBy(index: number): number {\n        return index;\n    }\n\n    isSuccess(action: CurrentActionState): boolean {\n        return successfulStatuses.includes(action && action.status);\n    }\n\n    isFailed(action: CurrentActionState): boolean {\n        return failedStatuses.includes(action && action.status);\n    }\n\n    private scrollToBottomDetailsList(): void {\n        if (this.elDetailsList) {\n            const { nativeElement } = this.elDetailsList;\n            nativeElement.scrollTop = nativeElement.scrollHeight;\n        }\n    }\n\n    openInBrowser(hash: string): void {\n        this.backendService.openUrlInBrowser(\n            (this.variablesService.testnet ? BLOCK_EXPLORER_TN_TX_URL_PREFIX : BLOCK_EXPLORER_TX_URL_PREFIX) + hash\n        );\n    }\n}\n","<div class=\"send-details-modal-wrapper\" fxFlex=\"0 1 54rem\">\n    <div class=\"wrapper w-100\" fxFlex fxLayout=\"column\">\n        <h3 class=\"title mb-2\" fxFlex=\"0 0 auto\">\n            {{ 'SEND_DETAILS_MODAL.TITLE1' | translate }}\n        </h3>\n\n        <div class=\"content mb-2 overflow-x-hidden overflow-y-auto\" fxFlex=\"1 1 auto\" fxLayout=\"column\">\n            <div class=\"status mb-2\" fxFlex=\"0 0 auto\" fxLayout=\"column\" fxLayoutAlign=\" center\">\n                <div *ngIf=\"isSentSuccess\" class=\"image\">\n                    <img alt=\"success\" src=\"assets/icons/aqua/transaction_success.svg\" />\n                </div>\n\n                <div *ngIf=\"isSentFailed\" class=\"image\">\n                    <img alt=\"failed\" class=\"image\" src=\"assets/icons/red/transaction_failed.svg\" />\n                </div>\n\n                <div *ngIf=\"!isSentSuccess && !isSentFailed\" class=\"loader\"></div>\n\n                <p class=\"color-primary mt-2 mb-0_5\" *ngIf=\"currentActionState$ | async as currentActionState\">\n                    {{\n                        (currentActionState ? 'TOR_LIB_STATE' + '.' + currentActionState.status : 'TOR_LIB_STATE.STATE_INITIALIZING')\n                            | translate\n                    }}\n                    {{ !isSentSuccess && !isSentFailed ? '...' : '' }}\n                </p>\n\n                <ng-container *ngIf=\"responseData$ | async as data\">\n                    <ng-container\n                        *ngTemplateOutlet=\"\n                            errorCodesTemplate;\n                            context: {\n                                error_code: data.error_code\n                            }\n                        \"\n                    ></ng-container>\n                </ng-container>\n            </div>\n\n            <div class=\"details border-radius-0_8-rem overflow-hidden\" fxFlex=\"0 0 auto\" fxLayout=\"column\">\n                <div\n                    (click)=\"isDetailsNotEmpty && toggleDetails()\"\n                    class=\"header overflow-hidden py-1 px-2 w-100 cursor-pointer\"\n                    fxLayout=\"row\"\n                    fxLayoutAlign=\"space-between center\"\n                >\n                    <p class=\"title text-ellipsis mr-2\">\n                        {{ 'SEND_DETAILS_MODAL.TITLE2' | translate }}\n                    </p>\n                    <button *ngIf=\"isDetailsNotEmpty\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n                        <mat-icon\n                            svgIcon=\"zano-dropdown-arrow-down\"\n                            [ngClass]=\"{\n                                'rotate-180': stateDetails$ | async\n                            }\"\n                        ></mat-icon>\n                    </button>\n                </div>\n                <div\n                    [class.px-2]=\"stateDetails$ | async\"\n                    [class.py-1]=\"stateDetails$ | async\"\n                    [fxHide]=\"!(stateDetails$ | async)\"\n                    class=\"details-wrapper\"\n                    fxFlex=\"1 1 auto\"\n                    fxLayout=\"row\"\n                >\n                    <ul #elDetailsList class=\"details-list scrolled-content\">\n                        <li\n                            *ngFor=\"let action of currentActionStates$ | async; let last = last; trackBy: trackBy\"\n                            class=\"item mb-1 color-primary\"\n                            fxLayout=\"row nowrap\"\n                            fxLayoutAlign=\" center\"\n                        >\n                            <span class=\"text text-ellipsis mr-1\"\n                                >{{ 'TOR_LIB_STATE' + '.' + action?.status | translate\n                                }}{{ last && !isSentSuccess && !isSentFailed ? '...' : '' }}</span\n                            >\n                            <ng-container *ngIf=\"!last\">\n                                <img *ngIf=\"isSuccess(action)\" alt=\"success\" class=\"image\" src=\"assets/icons/blue/check_with_blue_bg.svg\" />\n\n                                <img *ngIf=\"isFailed(action)\" alt=\"failed\" class=\"image\" src=\"assets/icons/red/transaction_failed.svg\" />\n                            </ng-container>\n\n                            <ng-container *ngIf=\"last\">\n                                <img\n                                    *ngIf=\"last && isSentSuccess\"\n                                    alt=\"success\"\n                                    class=\"image\"\n                                    src=\"assets/icons/blue/check_with_blue_bg.svg\"\n                                />\n\n                                <img\n                                    *ngIf=\"last && isSentFailed\"\n                                    alt=\"failed\"\n                                    class=\"image\"\n                                    src=\"assets/icons/red/transaction_failed.svg\"\n                                />\n                            </ng-container>\n                        </li>\n\n                        <ng-container *ngIf=\"responseData$ | async as data\">\n                            <li class=\"item mb-1 color-primary\" fxLayout=\"row nowrap\" fxLayoutAlign=\" center\">\n                                <span class=\"word-break-break-all cursor-pointer\" (click)=\"openInBrowser(data.response_data.tx_hash)\">\n                                    tx id: {{ data.response_data.tx_hash || '---' }}\n                                </span>\n                                <app-copy-button *ngIf=\"data.response_data.tx_hash\" [value]=\"data.response_data.tx_hash\" class=\"ml-1\">\n                                </app-copy-button>\n                            </li>\n                            <li class=\"item mb-1 color-primary\" fxLayout=\"row nowrap\" fxLayoutAlign=\" center\">\n                                <div class=\"word-break-break-all\">\n                                    tx size:\n                                    {{ data.response_data.tx_blob_size }}\n                                    bytes\n                                </div>\n                            </li>\n                            <li *ngIf=\"data.error_code !== 'OK'\" class=\"item\">\n                                <ng-container\n                                    *ngTemplateOutlet=\"\n                                        errorCodesTemplate;\n                                        context: {\n                                            prefix: 'Error:',\n                                            error_code: data.error_code\n                                        }\n                                    \"\n                                ></ng-container>\n                            </li>\n                        </ng-container>\n                    </ul>\n                </div>\n            </div>\n        </div>\n        <div class=\"controls\" fxFlex=\"0 0 auto\">\n            <button (click)=\"event_close.emit(success)\" [disabled]=\"!isSentSuccess && !isSentFailed\" class=\"primary big w-100\">\n                {{ 'Ok' | translate }}\n            </button>\n        </div>\n    </div>\n</div>\n\n<ng-template #errorCodesTemplate let-prefix=\"prefix\" let-error_code=\"error_code\">\n    <ng-container [ngSwitch]=\"error_code\">\n        <ng-container *ngSwitchCase=\"'NOT_ENOUGH_MONEY'\">\n            <p class=\"color-red\">{{ prefix }} {{ 'SEND.ERROR_CODES' + '.' + error_code | translate }}</p>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'OK'\"></ng-container>\n        <ng-container *ngSwitchDefault>\n            <p class=\"color-red\">{{ prefix }} {{ 'ERRORS' + '.' + error_code | translate }}</p>\n        </ng-container>\n    </ng-container>\n</ng-template>\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    HostBinding,\n    inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2,\n} from '@angular/core';\nimport { NonNullableFormBuilder, Validators } from '@angular/forms';\nimport { TransferParams } from '@api/models/transfer.model';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { ZanoValidators } from '@parts/utils/zano-validators';\nimport { PriceInfo } from '@api/models/assets.model';\n\n@Component({\n    selector: 'app-send-modal',\n    templateUrl: './send-modal.component.html',\n    styleUrls: ['./send-modal.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SendModalComponent implements OnInit, OnDestroy {\n    @HostBinding('class.modal-overlay') modalOverlay = true;\n\n    @Input() transfer_params: TransferParams;\n\n    @Input() price_info: PriceInfo;\n\n    @Output() confirmed: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    cdr = inject(ChangeDetectorRef);\n\n    fb = inject(NonNullableFormBuilder);\n\n    form = this.fb.group({\n        password: this.fb.control(''),\n        appPass: this.fb.control(''),\n    });\n\n    constructor(public variablesService: VariablesService, private renderer: Renderer2) {}\n\n    ngOnInit(): void {\n        this.renderer.addClass(document.body, 'no-scroll');\n        const { appPass } = this.variablesService;\n        if (appPass) {\n            this.form.controls.appPass.patchValue(appPass, {\n                emitEvent: false,\n            });\n            this.form.setValidators([ZanoValidators.formMatch('password', 'appPass', 'passwordNotMatch')]);\n            this.form.controls.password.setValidators([Validators.required]);\n            this.form.updateValueAndValidity();\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.renderer.removeClass(document.body, 'no-scroll');\n    }\n\n    beforeSubmit(): void {\n        if (this.form.invalid) {\n            this.form.markAsTouched();\n            this.form.updateValueAndValidity();\n            this.cdr.detectChanges();\n            return;\n        }\n\n        this.submit();\n    }\n\n    submit(): void {\n        this.confirmed.emit(true);\n    }\n\n    onClose(): void {\n        this.confirmed.emit(false);\n    }\n}\n","<div class=\"send-modal-wrapper\" fxLayout=\"row\">\n    <div class=\"wrapper\">\n        <form (ngSubmit)=\"beforeSubmit()\" [formGroup]=\"form\" class=\"overflow-hidden\" fxFlexFill fxLayout=\"column\">\n            <h3 class=\"title mb-2\" fxFlex=\"0 0 auto\">\n                {{ 'CONFIRM.TITLE' | translate }}\n            </h3>\n\n            <div class=\"content w-100 overflow-x-hidden overflow-y-auto\" fxFlex=\"1 1 auto\">\n                <div class=\"table-info mb-2\">\n                    <ng-container *ngFor=\"let destination of transfer_params.destinations; let first = first\">\n                        <ng-container *ngIf=\"!first\">\n                            <hr class=\"separator\" />\n                        </ng-container>\n\n                        <div class=\"row\">\n                            <div class=\"label max-w-19-rem w-100\">\n                                {{ 'CONFIRM.MESSAGE.SEND' | translate }}\n                            </div>\n                            <div class=\"text\">\n                                {{ destination.amount }}\n                                {{ (destination.asset_id | getAssetInfo)?.ticker || '***' }}\n                            </div>\n                        </div>\n\n                        <hr class=\"separator\" />\n\n                        <div class=\"row\">\n                            <div class=\"label max-w-19-rem w-100\">\n                                {{ 'CONFIRM.MESSAGE.FROM' | translate }}\n                            </div>\n                            <div class=\"text\">\n                                {{ variablesService.current_wallet.address }}\n                            </div>\n                        </div>\n\n                        <hr class=\"separator\" />\n\n                        <div class=\"row\">\n                            <div class=\"label max-w-19-rem w-100\">\n                                {{ 'CONFIRM.MESSAGE.TO' | translate }}\n                            </div>\n                            <div class=\"text\">{{ destination.address }}</div>\n                        </div>\n                    </ng-container>\n\n                    <ng-container *ngIf=\"!!transfer_params.comment\">\n                        <hr class=\"separator\" />\n\n                        <div class=\"row\">\n                            <div class=\"label max-w-19-rem w-100\">\n                                {{ 'CONFIRM.MESSAGE.COMMENT' | translate }}\n                            </div>\n                            <div class=\"text\">{{ transfer_params.comment }}</div>\n                        </div>\n                    </ng-container>\n                </div>\n\n                <div *ngIf=\"variablesService.appPass\" class=\"form__field fixed\">\n                    <label for=\"password\">\n                        {{ 'LOGIN.MASTER_PASS' | translate }}\n                        <span class=\"color-red\">*</span>\n                    </label>\n                    <input\n                        (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                        [class.invalid]=\"form.touched && form.invalid\"\n                        [placeholder]=\"'PLACEHOLDERS.MASTER_PASS_PLACEHOLDER' | translate\"\n                        autofocus\n                        class=\"form__field--input\"\n                        formControlName=\"password\"\n                        id=\"password\"\n                        name=\"password\"\n                        type=\"password\"\n                    />\n                    <div *ngIf=\"form.touched && form.invalid\" class=\"error\">\n                        <div *ngIf=\"form.hasError('passwordNotMatch') && !form.controls.password.hasError('required')\">\n                            {{ 'LOGIN.FORM_ERRORS.WRONG_PASSWORD' | translate }}\n                        </div>\n                        <div *ngIf=\"form.controls.password.hasError('required')\">\n                            {{ 'LOGIN.FORM_ERRORS.PASS_REQUIRED' | translate }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"controls w-100\" fxFlex=\"0 0 auto\" fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\n                <button (click)=\"onClose()\" class=\"outline big w-100\" type=\"button\">\n                    {{ 'CONFIRM.BUTTON_CANCEL' | translate }}\n                </button>\n                <button class=\"primary big w-100\" type=\"submit\">\n                    {{ 'CONFIRM.BUTTON_CONFIRM' | translate }}\n                </button>\n            </div>\n        </form>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SendModalComponent } from './send-modal/send-modal.component';\nimport { SendDetailsModalComponent } from './send-details-modal/send-details-modal.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { GetAssetInfoPipe } from '@parts/pipes';\nimport { CopyButtonComponent } from '@parts/components/copy-button.component';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n    declarations: [SendModalComponent, SendDetailsModalComponent],\n    imports: [CommonModule, TranslateModule, FlexLayoutModule, ReactiveFormsModule, GetAssetInfoPipe, CopyButtonComponent, MatIconModule],\n    exports: [SendModalComponent, SendDetailsModalComponent],\n})\nexport class WalletModalsModule {}\n","import { Component, inject, NgZone, OnDestroy } from '@angular/core';\nimport { AbstractControl, FormArray, FormControl, FormGroup, NonNullableFormBuilder, ValidationErrors, Validators } from '@angular/forms';\nimport { BackendService } from '@api/services/backend.service';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { debounceTime, filter, retry, startWith, switchMap, takeUntil } from 'rxjs/operators';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { AssetBalance, PriceInfo } from '@api/models/assets.model';\nimport { REG_EXP_ALIAS_NAME, validateWrapInfo, ZanoValidators } from '@parts/utils/zano-validators';\nimport { TransferDestinationsFormValue, TransferFormValue, TransferParams } from '@api/models/transfer.model';\nimport { ZANO_ASSET_INFO } from '@parts/data/assets';\nimport { ApiService } from '@api/services/api.service';\nimport { BigNumber } from 'bignumber.js';\nimport { intToMoney } from '@parts/functions/int-to-money';\nimport { insufficientFunds } from '@parts/utils/zano-errors';\nimport { MAXIMUM_VALUE } from '@parts/data/constants';\nimport { moneyToInt } from '@parts/functions/money-to-int';\nimport { DeeplinkParams } from '@api/models/wallet.model';\n\nconst DEFAULT_SEND_MONEY_PARAMS: Omit<TransferFormValue, 'wallet_id'> = {\n    asset_id: ZANO_ASSET_INFO.asset_id,\n    destinations: [\n        {\n            address: '',\n            amount: '',\n            is_currency_input_mode: false,\n            asset_id: ZANO_ASSET_INFO.asset_id,\n            is_visible_wrap_info: false,\n            alias_address: '',\n        },\n    ],\n    comment: '',\n    mixin: 0,\n    fee: '0.01',\n    lock_time: 0,\n    push_payer: true,\n    hide_receiver: false,\n};\n\nconst DEFAULT_PRICE_INFO: PriceInfo = {\n    success: false,\n    data: 'Asset not found',\n};\n\nexport type DestinationsForm = FormGroup<{\n    address: FormControl<string>;\n    amount: FormControl<string>;\n    is_currency_input_mode: FormControl<boolean>;\n    asset_id: FormControl<string>;\n    is_visible_wrap_info: FormControl<boolean>;\n    alias_address: FormControl<string>;\n}>;\n\nexport type TransferForm = FormGroup<{\n    wallet_id: FormControl<number>;\n    destinations: FormArray<DestinationsForm>;\n    comment: FormControl<string>;\n    asset_id: FormControl<string>;\n    mixin: FormControl<number>;\n    lock_time: FormControl<number>;\n    fee: FormControl<string>;\n    push_payer: FormControl<boolean>;\n    hide_receiver: FormControl<boolean>;\n}>;\n\n@Component({\n    selector: 'app-send',\n    templateUrl: 'send.component.html',\n    styleUrls: ['./send.component.scss'],\n})\nexport class SendComponent implements OnDestroy {\n    private readonly _backend_service: BackendService = inject(BackendService);\n\n    private readonly _ng_zone: NgZone = inject(NgZone);\n\n    private readonly _fb: NonNullableFormBuilder = inject(NonNullableFormBuilder);\n\n    private readonly _api_service: ApiService = inject(ApiService);\n\n    readonly variables_service: VariablesService = inject(VariablesService);\n\n    job_id: number;\n\n    is_send_modal_state = false;\n\n    is_send_details_modal_state = false;\n\n    is_visible_additional_options_state = false;\n\n    form: TransferForm;\n\n    total_destinations_amount_and_fee = new BigNumber(0);\n\n    price_info: PriceInfo = DEFAULT_PRICE_INFO;\n\n    readonly price_info$: BehaviorSubject<PriceInfo> = new BehaviorSubject<PriceInfo>(DEFAULT_PRICE_INFO);\n\n    private readonly _destroy$: Subject<void> = new Subject<void>();\n\n    constructor() {\n        this._createForm();\n    }\n\n    get is_visible_wrap_info(): boolean {\n        const formValue = this.form?.getRawValue();\n        if (!formValue) {\n            return false;\n        }\n        const { destinations } = formValue;\n        return isVisibleWrapInfoByDestinations(destinations);\n    }\n\n    get is_submit_disabled(): boolean {\n        if (!this.form) {\n            return true;\n        }\n\n        const {\n            current_wallet: { loaded: is_current_wallet_loaded },\n            is_wrap_info_service_inactive$: { value: is_wrap_info_service_inactive },\n        } = this.variables_service;\n\n        const { destinations } = this.form.getRawValue();\n\n        const condition1: boolean = this.form?.invalid ?? true;\n        const condition2 = !is_current_wallet_loaded;\n        const condition3: boolean =\n            destinations.map(({ is_visible_wrap_info }) => is_visible_wrap_info).some(Boolean) && is_wrap_info_service_inactive;\n\n        return condition1 || condition2 || condition3;\n    }\n\n    ngOnDestroy(): void {\n        this._destroy$.next();\n        this._destroy$.complete();\n    }\n\n    private _subscribeToIsWrapInfoServiceInactive(): void {\n        this.variables_service.is_wrap_info_service_inactive$.pipe(takeUntil(this._destroy$)).subscribe({\n            next: () => {\n                this.form.controls.destinations.updateValueAndValidity();\n            },\n        });\n    }\n\n    beforeSubmit(): void {\n        this.is_send_modal_state = true;\n    }\n\n    submit(): void {\n        this._backend_service.sendMoney(this.getTransferParams(), (job_id: number) => {\n            this._ng_zone.run(() => {\n                this.job_id = job_id;\n                this.is_send_details_modal_state = true;\n                this.variables_service.current_wallet.transfer_form_value = null;\n            });\n        });\n    }\n\n    private convertToCurrencyAmount(amount: any, asset: AssetBalance): string {\n        const price_info = this.price_info;\n        const { settings: { currency } } = this.variables_service;\n        const currency_price = typeof price_info.data === 'object' ? price_info.data.fiat_prices[currency] ?? 0 : 0;\n\n        const decimal_point = asset?.asset_info?.decimal_point || 0;\n        return new BigNumber(amount || 0)\n            .dividedBy(currency_price || 1)\n            .decimalPlaces(decimal_point)\n            .toString();\n    }\n\n    getTransferParams(): TransferParams {\n        const transfer_form_value: TransferFormValue = this.form.getRawValue();\n        const { asset_id, hide_receiver } = transfer_form_value;\n        const { current_wallet } = this.variables_service;\n\n        const asset = current_wallet.getBalanceByAssetId(asset_id);\n\n        return {\n            wallet_id: transfer_form_value.wallet_id,\n            destinations: transfer_form_value.destinations.map((v) => ({\n                ...prepareTransferDestinationsFormValueToTransferDestination(v),\n                amount: v.is_currency_input_mode ? this.convertToCurrencyAmount(v.amount, asset) : v.amount,\n            })),\n            mixin: transfer_form_value.mixin,\n            lock_time: transfer_form_value.lock_time,\n            fee: moneyToInt(transfer_form_value.fee, ZANO_ASSET_INFO.decimal_point).toString(),\n            comment: transfer_form_value.comment,\n            push_payer: transfer_form_value.push_payer,\n            hide_receiver: !hide_receiver,\n        };\n    }\n\n    handleConfirmed(confirmed: boolean): void {\n        this.is_send_modal_state = false;\n\n        if (confirmed) {\n            this.submit();\n        }\n    }\n\n    handeCloseSendDetailsModal(success: boolean): void {\n        this.is_send_details_modal_state = false;\n        this.job_id = null;\n\n        if (success) {\n            const { current_wallet } = this.variables_service;\n            const { wallet_id } = current_wallet;\n            current_wallet.transfer_form_value = null;\n\n            this.form.reset({ ...DEFAULT_SEND_MONEY_PARAMS, wallet_id });\n        }\n    }\n\n    addDestination(): void {\n        const {\n            controls: { asset_id, destinations },\n        } = this.form;\n        destinations.push(this._createDestinationFromGroup(asset_id));\n    }\n\n    removeDestination(index: number): void {\n        const {\n            controls: { destinations },\n        } = this.form;\n        destinations.removeAt(index);\n    }\n\n    private _createForm(): void {\n        const { current_wallet, default_fee, maxCommentLength } = this.variables_service;\n        let init_transfer_form_value: TransferFormValue;\n\n        if (current_wallet.transfer_form_value) {\n            init_transfer_form_value = current_wallet.transfer_form_value;\n        } else {\n            init_transfer_form_value = {\n                ...DEFAULT_SEND_MONEY_PARAMS,\n                wallet_id: current_wallet.wallet_id,\n                fee: default_fee,\n            };\n        }\n\n        if (current_wallet.is_auditable && !current_wallet.is_watch_only) {\n            init_transfer_form_value.hide_receiver = true;\n        }\n\n        if (current_wallet.is_auditable) {\n            init_transfer_form_value.mixin = 0;\n        }\n\n        const history_state = history.state || {};\n        const history_asset: AssetBalance = history_state['asset'];\n\n        if (history_asset) {\n            const {\n                asset_info: { asset_id, decimal_point },\n            } = history_asset;\n            init_transfer_form_value.asset_id = asset_id;\n            init_transfer_form_value.destinations.forEach((destination) => {\n                destination.asset_id = asset_id;\n                if (destination.amount) {\n                    destination.amount = intToMoney(moneyToInt(destination.amount, decimal_point), decimal_point);\n                }\n            });\n        }\n\n        const wallet_id_control = this._fb.control<number>(\n            { value: current_wallet.wallet_id, disabled: false },\n            {\n                validators: Validators.compose([Validators.required]),\n            }\n        );\n\n        const asset_id_control = this._fb.control<string>(\n            { value: init_transfer_form_value.asset_id, disabled: false },\n            {\n                validators: Validators.compose([Validators.required]),\n            }\n        );\n\n        const destinations_control = this._fb.array<DestinationsForm>([]);\n        if (init_transfer_form_value.destinations.length) {\n            init_transfer_form_value.destinations.forEach(() => {\n                destinations_control.push(this._createDestinationFromGroup(asset_id_control));\n            });\n        } else {\n            destinations_control.push(this._createDestinationFromGroup(asset_id_control));\n        }\n        const comment_control = this._fb.control<string>(\n            { value: '', disabled: false },\n            {\n                validators: Validators.compose([Validators.maxLength(maxCommentLength)]),\n            }\n        );\n\n        const mixin_control = this._fb.control<number>(\n            { value: 0, disabled: current_wallet.is_auditable },\n            {\n                validators: Validators.compose([Validators.required, Validators.min(0), Validators.max(1000)]),\n            }\n        );\n\n        const lock_time_control = this._fb.control<number>({ value: 0, disabled: false });\n\n        const fee_control = this._fb.control<string>(\n            { value: default_fee, disabled: false },\n            {\n                validators: Validators.compose([\n                    Validators.required,\n                    ZanoValidators.greaterMax(MAXIMUM_VALUE, ZANO_ASSET_INFO.decimal_point),\n                    ZanoValidators.lessMin(default_fee),\n                ]),\n            }\n        );\n\n        const push_payer_control = this._fb.control<boolean>({ value: false, disabled: false });\n\n        const hide_receiver_control = this._fb.control<boolean>({\n            value: false,\n            disabled: current_wallet.is_auditable && !current_wallet.is_watch_only,\n        });\n\n        this.form = this._fb.group({\n            wallet_id: wallet_id_control,\n            destinations: destinations_control,\n            comment: comment_control,\n            asset_id: asset_id_control,\n            mixin: mixin_control,\n            lock_time: lock_time_control,\n            fee: fee_control,\n            push_payer: push_payer_control,\n            hide_receiver: hide_receiver_control,\n        });\n\n        this.form.patchValue(init_transfer_form_value);\n\n        this._listenSendActionData();\n\n        this._saveSendMoneyParams();\n\n        this._formListeners();\n\n        if (current_wallet.transfer_form_value) {\n            this.form.markAllAsTouched();\n            this.form.updateValueAndValidity();\n        }\n\n        this._subscribeToIsWrapInfoServiceInactive();\n    }\n\n    private _validateAddress(control: AbstractControl): ValidationErrors | null {\n        const { value: address, parent } = control;\n        const is_visible_wrap_info_control = parent?.get('is_visible_wrap_info');\n\n        this._backend_service.validateAddress(address, (status: boolean, data: any): void => {\n            this._ng_zone.run(() => {\n                const is_visible_wrap_info = data.error_code === 'WRAP';\n                is_visible_wrap_info_control?.patchValue(is_visible_wrap_info);\n\n                if (is_visible_wrap_info) {\n                    const { asset_id } = ZANO_ASSET_INFO;\n                    this.form.controls.asset_id.patchValue(asset_id);\n                }\n\n                if (!status && !is_visible_wrap_info) {\n                    this._setError(control, 'address_not_valid');\n                } else {\n                    this._clearError(control, 'address_not_valid');\n                }\n            });\n        });\n\n        return control.hasError('address_not_valid') ? { address_not_valid: true } : null;\n    }\n\n    private _validateAlias(control: AbstractControl): ValidationErrors | null {\n        if (!REG_EXP_ALIAS_NAME.test(control.value)) {\n            return { alias_not_valid: true };\n        }\n\n        const name: string = control.value.replace('@', '');\n\n        const { parent } = control;\n        const alias_address_control = parent?.get('alias_address');\n\n        this._backend_service.getAliasInfoByName(name, (status: boolean, data: any) => {\n            this._ng_zone.run(() => {\n                alias_address_control?.patchValue(data.address);\n\n                if (status) {\n                    this._clearError(control, 'alias_not_found');\n                } else {\n                    this._setError(control, 'alias_not_found');\n                }\n            });\n        });\n\n        return control.hasError('alias_not_found') ? { alias_not_found: true } : null;\n    }\n\n    private _setError(control: AbstractControl, errorKey: string): void {\n        const errors = { ...control.errors, [errorKey]: true };\n        control.setErrors(errors);\n    }\n\n    private _clearError(control: AbstractControl, errorKey: string): void {\n        if (control.hasError(errorKey)) {\n            const errors = { ...control.errors };\n            delete errors[errorKey];\n            control.setErrors(Object.keys(errors).length > 0 ? errors : null);\n        }\n    }\n\n    private _validateAddressOrAlias(control: AbstractControl): ValidationErrors | null {\n        const { parent } = control;\n        const is_visible_wrap_info_control = parent?.get('is_visible_wrap_info');\n        const alias_address_control = parent?.get('alias_address');\n\n        alias_address_control?.patchValue('');\n        is_visible_wrap_info_control?.patchValue(false);\n\n        const { value } = control;\n\n        if (!value) {\n            return null;\n        }\n\n        if (value.startsWith('@')) {\n            return this._validateAlias(control);\n        } else {\n            return this._validateAddress(control);\n        }\n    }\n\n    private _formListeners(): void {\n        this._subscribeToAssetIdChanges();\n        this._subscribeToFormChanges();\n        this._subscribeToDescriptionsChanges();\n    }\n\n    private _subscribeToDescriptionsChanges(): void {\n        this.form.controls.destinations.valueChanges\n            .pipe(startWith(this.form.controls.destinations.value), takeUntil(this._destroy$))\n            .subscribe({\n                next: (destinations) => {\n                    if (destinations.length > 1) {\n                        this.form.controls.comment.reset('');\n                        this.form.controls.comment.disable();\n                    } else {\n                        this.form.controls.comment.enable();\n                    }\n                },\n            });\n    }\n\n    private _subscribeToFormChanges(): void {\n        this.form.valueChanges.pipe(takeUntil(this._destroy$)).subscribe({\n            next: () => {\n                let total_destinations_amount_and_fee = new BigNumber(0);\n\n                const { current_wallet } = this.variables_service;\n\n                this.form.controls.destinations.controls.forEach((control) => {\n                    const asset = current_wallet.getBalanceByAssetId(control.controls.asset_id.value);\n\n                    const amount = control.controls.is_currency_input_mode.value\n                        ? this.convertToCurrencyAmount(control.controls.amount.value, asset)\n                        : new BigNumber(control.controls.amount.value);\n                    total_destinations_amount_and_fee = total_destinations_amount_and_fee.plus(new BigNumber(amount || 0));\n                });\n\n                total_destinations_amount_and_fee = total_destinations_amount_and_fee.plus(\n                    new BigNumber(this.form.controls.fee.value || 0)\n                );\n\n                this.total_destinations_amount_and_fee = total_destinations_amount_and_fee;\n\n                this.form.controls.destinations.controls.forEach((control) => {\n                    control.updateValueAndValidity({ emitEvent: false });\n                });\n            },\n        });\n    }\n\n    private _subscribeToAssetIdChanges(): void {\n        this.form.controls.asset_id.valueChanges\n            .pipe(\n                startWith(this.form.controls.asset_id.value),\n                switchMap((assetId) => this._api_service.getCurrentPriceForAsset(assetId).pipe(retry(2))),\n                takeUntil(this._destroy$)\n            )\n            .subscribe({\n                next: (priceInfo: PriceInfo) => {\n                    this.price_info = priceInfo;\n                    this.price_info$.next(priceInfo);\n                },\n            });\n    }\n\n    private _saveSendMoneyParams(): void {\n        const { current_wallet } = this.variables_service;\n        this.form.valueChanges.pipe(debounceTime(800), takeUntil(this._destroy$)).subscribe({\n            next: (): void => {\n                current_wallet.transfer_form_value = this.form.getRawValue();\n            },\n        });\n    }\n\n    private _listenSendActionData(): void {\n        this.variables_service.sendActionData$\n            .pipe(\n                filter((value) => value?.action === 'send'),\n                takeUntil(this._destroy$)\n            )\n            .subscribe({\n                next: (value: DeeplinkParams) => {\n                    // https://docs.zano.org/docs/use/deeplinks/\n                    const { address, amount, comment, comments, fee, hide_sender, hide_receiver } = value;\n                    this.is_visible_additional_options_state = true;\n                    this.form.patchValue({\n                        destinations: [\n                            {\n                                address: address || '',\n                                asset_id: ZANO_ASSET_INFO.asset_id,\n                                amount: amount || '',\n                            },\n                        ],\n                        comment: comment || comments || '',\n                        asset_id: ZANO_ASSET_INFO.asset_id,\n                        fee: fee || this.variables_service.default_fee,\n                        push_payer: hide_sender === 'false',\n                        hide_receiver: hide_receiver === 'false',\n                    });\n                    this.variables_service.sendActionData$.next({});\n                },\n            });\n    }\n\n    private _createDestinationFromGroup(asset_id_control: FormControl<string>): DestinationsForm {\n        const address_control = this._fb.control<string>(\n            { value: '', disabled: false },\n            {\n                validators: Validators.compose([Validators.required, this._validateAddressOrAlias.bind(this)]),\n            }\n        );\n\n        const amount_control = this._fb.control<string>(\n            { value: '', disabled: false },\n            {\n                validators: Validators.compose([Validators.required, ZanoValidators.zeroValue]),\n            }\n        );\n\n        const is_currency_input_mode_control = this._fb.control<boolean>({ value: false, disabled: false });\n\n        const alias_address_control = this._fb.control<string>({ value: '', disabled: false });\n\n        const is_visible_wrap_info_control = this._fb.control<boolean>({ value: false, disabled: false });\n\n        return this._fb.group(\n            {\n                address: address_control,\n                amount: amount_control,\n                is_currency_input_mode: is_currency_input_mode_control,\n                alias_address: alias_address_control,\n                is_visible_wrap_info: is_visible_wrap_info_control,\n                asset_id: asset_id_control,\n            },\n            {\n                validators: [\n                    (form: FormGroup): ValidationErrors | null => {\n                        const { asset_id, is_currency_input_mode, is_visible_wrap_info, amount } = form.getRawValue();\n                        const errors: ValidationErrors = {};\n\n                        const assetBalance: AssetBalance | undefined = this.variables_service.current_wallet.getBalanceByAssetId(asset_id);\n                        const wrapInfo = this.variables_service.wrap_info$.value;\n                        const { settings: { currency } } = this.variables_service;\n                        const priceInfo = this.price_info;\n\n                        const currency_price = typeof priceInfo.data === 'object' ? priceInfo.data.fiat_prices[currency] ?? 0 : 0;\n                        const amountBigNumber = new BigNumber(is_currency_input_mode ? new BigNumber(amount).dividedBy(currency_price) : amount);\n\n                        // 1. Balance not found\n                        if (!assetBalance) {\n                            return { asset_not_found: true };\n                        }\n\n                        const {\n                            unlocked,\n                            asset_info: { decimal_point },\n                        } = assetBalance;\n\n                        const maxAllowed = intToMoney(MAXIMUM_VALUE, decimal_point);\n                        const preparedUnlocked = intToMoney(unlocked, decimal_point);\n\n                        // 2. Greater than maxAllow\n                        if (amountBigNumber.isGreaterThan(maxAllowed)) {\n                            errors.greater_max = { max: maxAllowed };\n                        }\n\n                        // 3. Insufficient Funds\n                        if (\n                            this.total_destinations_amount_and_fee.isGreaterThan(preparedUnlocked) ||\n                            amountBigNumber.isGreaterThan(preparedUnlocked)\n                        ) {\n                            errors.insufficientFunds = insufficientFunds;\n                        }\n\n                        // 4. Validate wrapInfo if needed\n                        if (is_visible_wrap_info) {\n                            if (!wrapInfo) {\n                                errors.wrap_info_null = true;\n                            } else if (!validateWrapInfo(wrapInfo)) {\n                                errors.wrap_info_invalid = true;\n                            } else {\n                                const unwraped = intToMoney(new BigNumber(wrapInfo.unwraped_coins_left));\n                                const needed = intToMoney(new BigNumber(wrapInfo.tx_cost.zano_needed_for_erc20));\n\n                                if (amountBigNumber.isGreaterThan(unwraped)) {\n                                    errors.great_than_unwraped_coins = true;\n                                }\n\n                                if (amountBigNumber.isLessThan(needed)) {\n                                    errors.less_than_zano_needed = true;\n                                }\n                            }\n                        }\n\n                        return Object.keys(errors).length > 0 ? errors : null;\n                    },\n                ],\n            }\n        );\n    }\n}\n\nconst isVisibleWrapInfoByDestinations = (destinations: TransferDestinationsFormValue[]): boolean =>\n    destinations.map(({ is_visible_wrap_info }: TransferDestinationsFormValue) => is_visible_wrap_info).some(Boolean);\n\nconst prepareTransferDestinationsFormValueToTransferDestination = ({\n    address,\n    amount,\n    alias_address,\n    asset_id,\n}: TransferDestinationsFormValue): { address: string; asset_id: string; amount: any } => ({\n    address: address.startsWith('@') ? alias_address : address,\n    asset_id,\n    amount,\n});\n","<div class=\"container scrolled-content\" fxFlex=\"1 1 auto\">\n    <form (ngSubmit)=\"beforeSubmit()\" [formGroup]=\"form\" class=\"form\" fxFlex=\"0 1 50rem\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n        <!-- Asset -->\n        <zano-asset-field\n            [balances]=\"variables_service.current_wallet.balances$ | async\"\n            [control_ref]=\"form.controls.asset_id\"\n            [is_visible_wrap_info]=\"is_visible_wrap_info\"\n        >\n        </zano-asset-field>\n\n        <!-- Destinations -->\n        <ng-container *ngFor=\"let destinationControl of form.controls.destinations.controls; let index = index; let first = first\">\n            <!-- Address and Amount -->\n            <div [formGroup]=\"destinationControl\" class=\"form__field--row destination\">\n                <!-- Address -->\n                <div>\n                    <zano-address-field [control_ref]=\"destinationControl\"></zano-address-field>\n                </div>\n\n                <!-- Amount -->\n                <div>\n                    <zano-amount-field [control_ref]=\"destinationControl\" [price_info]=\"price_info$ | async\"></zano-amount-field>\n\n                    <ng-container *ngIf=\"!first\">\n                        <mat-icon (click)=\"removeDestination(index)\" class=\"remove\" svgIcon=\"zano-close\"></mat-icon>\n                    </ng-container>\n                </div>\n            </div>\n\n            <!-- Wrap information -->\n            <ng-container *ngIf=\"destinationControl.controls.is_visible_wrap_info.value\">\n                <ng-container *ngIf=\"variables_service.wrap_info$ | async\">\n                    <div class=\"mb-2\">\n                        <ng-container *ngIf=\"destinationControl.hasError('wrap_info_invalid'); else zanoWrapInformationTemplate\">\n                            <div class=\"error\">\n                                {{ 'ERRORS.CANT_ESTIMATE_WRAP_OPERATION_COST' | translate }}\n                            </div>\n                        </ng-container>\n\n                        <ng-template #zanoWrapInformationTemplate>\n                            <zano-wrap-information\n                                [amount]=\"destinationControl.controls.amount.value\"\n                                [asset_id]=\"destinationControl.controls.asset_id.value\"\n                                [hide_received_value]=\"destinationControl.controls.amount.invalid\"\n                                [is_currency_input_mode]=\"destinationControl.controls.is_currency_input_mode.value\"\n                                [price_info]=\"price_info$ | async\"\n                                [wrap_info]=\"variables_service.wrap_info$ | async\"\n                            ></zano-wrap-information>\n                        </ng-template>\n                    </div>\n                </ng-container>\n            </ng-container>\n        </ng-container>\n\n        <zano-add-another-destination-button (click)=\"addDestination()\" class=\"mb-2\"></zano-add-another-destination-button>\n\n        <!-- Comment -->\n        <zano-comment-field *ngIf=\"!form.controls.comment.disabled\" [control_ref]=\"form.controls.comment\"></zano-comment-field>\n\n        <!-- Details -->\n        <div class=\"details mb-2\">\n            <button\n                (click)=\"is_visible_additional_options_state = !is_visible_additional_options_state\"\n                [class.border-radius-all]=\"!is_visible_additional_options_state\"\n                class=\"header\"\n                type=\"button\"\n            >\n                <span>{{ 'SEND.DETAILS' | translate }}</span>\n                <mat-icon\n                    [ngClass]=\"{\n                        'rotate-180': is_visible_additional_options_state\n                    }\"\n                    class=\"ml-1\"\n                    svgIcon=\"zano-dropdown-arrow-down\"\n                ></mat-icon>\n            </button>\n\n            <div *ngIf=\"is_visible_additional_options_state\" class=\"content\">\n                <!--<div class=\"form__field&#45;&#45;row\">-->\n                <!-- MIXIN -->\n                <!--<zano-mixin-field [control_ref]=\"form.controls.mixin\"></zano-mixin-field>-->\n\n                <!-- FEE -->\n                <zano-fee-field [control_ref]=\"form.controls.fee\"></zano-fee-field>\n                <!--</div>-->\n\n                <!-- PUSH -->\n                <app-checkbox [label]=\"'SEND.INCLUDE_SENDER_ADDRESS' | translate\" class=\"mt-1\" formControlName=\"push_payer\"></app-checkbox>\n\n                <!-- HIDE -->\n                <app-checkbox [label]=\"'SEND.HIDE' | translate\" class=\"mt-1\" formControlName=\"hide_receiver\"></app-checkbox>\n            </div>\n        </div>\n\n        <button [disabled]=\"is_submit_disabled\" class=\"primary big max-w-19-rem w-100\" type=\"submit\">\n            {{ 'SEND.BUTTON' | translate }}\n        </button>\n    </form>\n</div>\n\n<app-send-modal\n    (confirmed)=\"handleConfirmed($event)\"\n    *ngIf=\"is_send_modal_state\"\n    [price_info]=\"price_info$ | async\"\n    [transfer_params]=\"getTransferParams()\"\n></app-send-modal>\n\n<app-send-details-modal\n    (event_close)=\"handeCloseSendDetailsModal($event)\"\n    *ngIf=\"is_send_details_modal_state\"\n    [job_id]=\"job_id\"\n></app-send-details-modal>\n","import { AfterViewInit, Component, inject, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { Chart } from 'angular-highcharts';\nimport { BackendService } from '@api/services/backend.service';\nimport { IntToMoneyPipe } from '@parts/pipes/int-to-money-pipe/int-to-money.pipe';\nimport { BigNumber } from 'bignumber.js';\nimport { combineLatest, Subject } from 'rxjs';\nimport * as Highcharts from 'highcharts';\nimport { debounceTime, delay, take, takeUntil, tap } from 'rxjs/operators';\nimport { NonNullableFormBuilder } from '@angular/forms';\n\ntype TPeriod = '1 week' | '2 week' | '1 month' | '3 month' | '6 month' | '1 year' | 'All';\n\ntype TGroup = 'day' | 'week' | 'month';\n\ninterface IPeriodItem {\n    title: string;\n    value: TPeriod;\n}\n\ninterface IGroupItem {\n    title: string;\n    value: TGroup;\n}\n\nconst periodItems: IPeriodItem[] = [\n    {\n        title: 'STAKING.PERIOD.WEEK1',\n        value: '1 week',\n    },\n    {\n        title: 'STAKING.PERIOD.WEEK2',\n        value: '2 week',\n    },\n    {\n        title: 'STAKING.PERIOD.MONTH1',\n        value: '1 month',\n    },\n    {\n        title: 'STAKING.PERIOD.MONTH3',\n        value: '3 month',\n    },\n    {\n        title: 'STAKING.PERIOD.MONTH6',\n        value: '6 month',\n    },\n    {\n        title: 'STAKING.PERIOD.YEAR',\n        value: '1 year',\n    },\n    {\n        title: 'STAKING.PERIOD.ALL',\n        value: 'All',\n    },\n];\n\nconst groupItems: IGroupItem[] = [\n    {\n        title: 'STAKING.GROUP.DAY',\n        value: 'day',\n    },\n    {\n        title: 'STAKING.GROUP.WEEK',\n        value: 'week',\n    },\n    {\n        title: 'STAKING.GROUP.MONTH',\n        value: 'month',\n    },\n];\n\n@Component({\n    selector: 'app-staking',\n    templateUrl: './staking.component.html',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: auto;\n            }\n        `,\n    ],\n})\nexport class StakingComponent implements OnInit, AfterViewInit, OnDestroy {\n    public readonly variablesService: VariablesService = inject(VariablesService);\n\n    public chart: Chart;\n\n    public total: BigNumber = new BigNumber(0);\n\n    public pending = {\n        list: [],\n        total: new BigNumber(0),\n    };\n\n    get isShowStagingSwitch(): boolean {\n        const {\n            current_wallet: { is_watch_only, is_auditable },\n        } = this.variablesService;\n        const condition1: boolean = !is_auditable && !is_watch_only;\n        const condition2: boolean = is_auditable && !is_watch_only;\n        return condition1 || condition2;\n    }\n\n    get isShowPointerDetails(): boolean {\n        const { date, amount } = this.pointDetails;\n        return date !== null && amount !== null;\n    }\n\n    public periodItems: IPeriodItem[] = periodItems;\n\n    public groupItems: IGroupItem[] = groupItems;\n\n    private readonly _fb: NonNullableFormBuilder = inject(NonNullableFormBuilder);\n\n    public readonly filtersForm = this._fb.group({\n        group: this._fb.control<TGroup>('day'),\n        period: this._fb.control<TPeriod>('All'),\n    });\n\n    public pointDetails: { date: string; amount: any } = {\n        date: null,\n        amount: null,\n    };\n\n    public originalData = [];\n\n    private readonly _destroy$: Subject<void> = new Subject<void>();\n\n    private readonly _backendService: BackendService = inject(BackendService);\n\n    private readonly _ngZone: NgZone = inject(NgZone);\n\n    private readonly _intToMoneyPipe: IntToMoneyPipe = inject(IntToMoneyPipe);\n\n    private _cacheData: Map<string, { data: any[]; minDate: number }> = new Map();\n\n    ngOnInit(): void {\n        this.chart = new Chart({\n            title: { text: '' },\n            credits: { enabled: false },\n            exporting: { enabled: false },\n            legend: { enabled: false },\n            chart: {\n                type: 'line',\n                backgroundColor: 'transparent',\n            },\n            yAxis: {\n                min: 0,\n                tickAmount: 5,\n                title: {\n                    text: '',\n                },\n                gridLineColor: '#2b3644',\n                gridLineWidth: 2,\n                lineColor: '#2b3644',\n                lineWidth: 2,\n                tickWidth: 2,\n                tickLength: 120,\n                tickColor: '#2b3644',\n                labels: {\n                    y: -8,\n                    align: 'left',\n                    x: -120,\n                    style: {\n                        color: '#e0e0e0',\n                        fontSize: '13px',\n                    },\n                    format: '{value} ' + this.variablesService.defaultTicker,\n                },\n            },\n            xAxis: {\n                type: 'datetime',\n                gridLineColor: '#2b3644',\n                lineColor: '#2b3644',\n                lineWidth: 2,\n                tickWidth: 2,\n                tickLength: 10,\n                tickColor: '#2b3644',\n                labels: {\n                    style: {\n                        color: '#e0e0e0',\n                        fontSize: '13px',\n                    },\n                },\n                minPadding: 0,\n                maxPadding: 0,\n                minRange: 86400000, // tickInterval: 86400000,\n                minTickInterval: 3600000,\n            },\n            tooltip: {\n                enabled: false,\n            },\n            plotOptions: {\n                area: {\n                    fillColor: {\n                        linearGradient: {\n                            x1: 0,\n                            y1: 0,\n                            x2: 0,\n                            y2: 1,\n                        },\n                        stops: [\n                            [0, 'rgba(124,181,236,0.2)'],\n                            [1, 'rgba(124,181,236,0)'],\n                        ],\n                    },\n                    marker: {\n                        enabled: false,\n                        radius: 2,\n                    },\n                    lineWidth: 2,\n                    threshold: null,\n                },\n\n                series: {\n                    point: {\n                        events: {\n                            mouseOver: (obj): void => {\n                                this.pointDetails.date = obj.target['x'];\n                                this.pointDetails.amount = obj.target['y'];\n                            },\n                        },\n                    },\n                    events: {\n                        mouseOut: (): void => {\n                            this.pointDetails.date = null;\n                            this.pointDetails.amount = null;\n                        },\n                    },\n                },\n            },\n            series: [\n                {\n                    type: 'area',\n                    data: [],\n                },\n            ],\n        });\n\n        this._restoreFiltersForm();\n        this._subscribeToHeightAppEvent();\n        this._subscribeToRefreshStakingEvent();\n        this._subscribeToFilterChanges();\n        this._subscribeToThemeChanges();\n    }\n\n    ngAfterViewInit(): void {\n        this.chart.ref$\n            .pipe(\n                delay(50),\n                tap((ref) => ref.reflow()),\n                delay(50),\n                take(1)\n            )\n            .subscribe({\n                next: () => {\n                    this._getMiningHistory();\n                },\n            });\n    }\n\n    ngOnDestroy(): void {\n        this._destroy$.next();\n        this._destroy$.complete();\n    }\n\n    private _restoreFiltersForm(): void {\n        const { stakingFilters } = this.variablesService.settings.filters;\n        if (stakingFilters) {\n            this.filtersForm.patchValue(stakingFilters);\n        }\n    }\n\n    private _subscribeToHeightAppEvent(): void {\n        const { getHeightAppEvent } = this.variablesService;\n\n        getHeightAppEvent.pipe(takeUntil(this._destroy$)).subscribe({\n            next: (newHeight: number) => {\n                if (this.pending.total.isZero()) {\n                    return;\n                }\n\n                this._updatePendingList(newHeight);\n            },\n        });\n    }\n\n    private _updatePendingList(newHeight: number): void {\n        this.pending.list = this.pending.list.filter((item) => newHeight - item.h < 10);\n        this.pending.total = this.pending.list.reduce((total, item) => total.plus(item.a), new BigNumber(0));\n    }\n\n    private _subscribeToRefreshStakingEvent(): void {\n        this.variablesService.refreshStakingEvent$.pipe(takeUntil(this._destroy$)).subscribe({\n            next: () => {\n                this._getMiningHistory();\n                this._changePeriod();\n            },\n        });\n    }\n\n    private _subscribeToFilterChanges(): void {\n        this.filtersForm.valueChanges.pipe(debounceTime(250), takeUntil(this._destroy$)).subscribe({\n            next: () => {\n                this.variablesService.settings.filters.stakingFilters = this.filtersForm.getRawValue();\n                this._changePeriod();\n            },\n        });\n    }\n\n    private _subscribeToThemeChanges(): void {\n        combineLatest([this.chart.ref$, this.variablesService.isDarkTheme$])\n            .pipe(takeUntil(this._destroy$))\n            .subscribe({\n                next: ([ref, isDarkTheme]) => {\n                    const options = isDarkTheme ? this._getDarkThemeOptions() : this._getLightThemeOptions();\n                    ref.update(options, true);\n                },\n            });\n    }\n\n    private _getDarkThemeOptions(): Highcharts.Options {\n        return {\n            plotOptions: {\n                area: {\n                    fillColor: {\n                        linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n                        stops: [\n                            [0, 'rgba(124,181,236,0.2)'],\n                            [1, 'rgba(124,181,236,0)'],\n                        ],\n                    },\n                    marker: { enabled: false, radius: 2 },\n                    lineWidth: 2,\n                    threshold: null,\n                },\n            },\n            yAxis: {\n                gridLineColor: '#2b3644',\n                lineColor: '#2b3644',\n                tickColor: '#2b3644',\n                labels: { style: { color: '#e0e0e0' } },\n            },\n            xAxis: {\n                gridLineColor: '#2b3644',\n                lineColor: '#2b3644',\n                tickColor: '#2b3644',\n                labels: { style: { color: '#e0e0e0' } },\n            },\n        };\n    }\n\n    private _getLightThemeOptions(): Highcharts.Options {\n        return {\n            plotOptions: {\n                area: {\n                    color: '#1F8FEB',\n                    marker: { enabled: false, radius: 2 },\n                    lineWidth: 2,\n                    threshold: null,\n                },\n            },\n            yAxis: {\n                gridLineColor: '#1F8FEB20',\n                lineColor: '#1F8FEB20',\n                tickColor: '#1F8FEB20',\n                labels: { style: { color: '#0C0C3A' } },\n            },\n            xAxis: {\n                gridLineColor: '#1F8FEB20',\n                lineColor: '#1F8FEB20',\n                tickColor: '#1F8FEB20',\n                labels: { style: { color: '#0C0C3A' } },\n            },\n        };\n    }\n\n    private _getMiningHistory(): void {\n        const wallet = this.variablesService.current_wallet;\n\n        const { wallet_id, loaded } = wallet;\n\n        if (!loaded) {\n            return;\n        }\n\n        this._backendService.getMiningHistory(wallet_id, (_, data) => {\n            this._ngZone.run(() => {\n                this._cacheData.clear();\n                this._processMiningHistoryData(data);\n            });\n        });\n    }\n\n    private _processMiningHistoryData(data: any): void {\n        this.total = new BigNumber(0);\n        this.pending.list = [];\n        this.pending.total = new BigNumber(0);\n        this.originalData = [];\n\n        if (!data.mined_entries) {\n            return;\n        }\n\n        data.mined_entries.forEach((item) => {\n            this._processMinedEntry(item);\n        });\n\n        this.originalData.sort((a, b) => a[0] - b[0]);\n        this._changePeriod();\n    }\n\n    private _processMinedEntry(item: any): void {\n        const timestamp = item.t.toString().length === 10 ? item.t * 1000 : item.t;\n        item.t = new Date(timestamp).setUTCMilliseconds(0);\n\n        this.total = this.total.plus(item.a);\n\n        if (this.variablesService.height_app - item.h < 10) {\n            this.pending.list.push(item);\n            this.pending.total = this.pending.total.plus(item.a);\n        }\n\n        this.originalData.push([parseInt(item.t, 10), parseFloat(this._intToMoneyPipe.transform(item.a))]);\n    }\n\n    private _changePeriod(): void {\n        this.chart.ref$.pipe(take(1)).subscribe({\n            next: (ref) => {\n                const formValue = this.filtersForm.getRawValue();\n                const { group, period } = formValue;\n                const currentDate = new Date();\n\n                const periodsConfig = {\n                    '1 week': 7,\n                    '2 week': 14,\n                    '1 month': 30,\n                    '3 month': 90,\n                    '6 month': 180,\n                    '1 year': 365,\n                };\n\n                let data = [];\n                let minDate;\n                const cacheKey = `${group}-${period}`;\n                if (this._cacheData.has(cacheKey)) {\n                    const cacheData = this._cacheData.get(cacheKey);\n                    data = cacheData.data;\n                    minDate = cacheData.minDate;\n                } else {\n                    data = this._getGroupedData(this.originalData, group);\n                    minDate = this._getMinDateForPeriod(period, currentDate, periodsConfig);\n                    this._cacheData.set(cacheKey, { data, minDate });\n                }\n\n                ref.series[0].setData([...data], true);\n                ref.xAxis[0].setExtremes(minDate, null);\n                ref.reflow();\n            },\n        });\n    }\n\n    private _getGroupedData(data: any[], group: TGroup): any[] {\n        const groupedData = [];\n\n        data.forEach((item) => {\n            const time = this._makeGroupTime(group, new Date(item[0]));\n            const existingItem = groupedData.find((newItem) => newItem[0] === time);\n\n            if (existingItem) {\n                existingItem[1] = new BigNumber(existingItem[1]).plus(item[1]).toNumber();\n            } else {\n                groupedData.push([time, item[1]]);\n            }\n        });\n\n        return groupedData;\n    }\n\n    private _makeGroupTime(group: TGroup, date: Date): number {\n        if (group === 'day') {\n            return date.setHours(0, 0, 0, 0);\n        } else if (group === 'week') {\n            return new Date(date.setDate(date.getDate() - date.getDay())).setHours(0, 0, 0, 0);\n        } else {\n            return new Date(date.setDate(1)).setHours(0, 0, 0, 0);\n        }\n    }\n\n    private _getMinDateForPeriod(\n        period: TPeriod,\n        currentDate: Date,\n        periodsConfig: {\n            [key: string]: number;\n        }\n    ): number | null {\n        const daysOffset = periodsConfig[period];\n        if (daysOffset) {\n            return Date.UTC(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate() - daysOffset, 0, 0, 0, 0);\n        }\n        return null;\n    }\n}\n","<div class=\"chart-wrap\" fxFlexFill fxLayout=\"column\">\n    <div class=\"scrolled-content h-100\" fxFlex=\"1 1 auto\" fxLayout=\"column\">\n        <div class=\"chart-header mb-1\" fxFlex=\"0 0 auto\" fxLayout=\"column\">\n            <div class=\"row\" fxFlex=\"0 0 auto\" fxLayout=\"row nowrap\" fxLayoutAlign=\"space-between start\" fxLayoutGap=\"1rem\">\n                <div class=\"left\" fxFlex=\"1 1 calc(50% - 0.5rem)\" fxLayout=\"row wrap\" fxLayoutAlign=\"start center\" fxLayoutGap=\"1rem\">\n                    <div class=\"items\" fxLayout=\"row wrap\" fxLayoutGap=\"1rem\">\n                        <div\n                            *ngIf=\"isShowStagingSwitch\"\n                            class=\"item overflow-hidden p-1 border-radius-0_8-rem mb-1\"\n                            fxLayout=\"row nowrap\"\n                            fxLayoutAlign=\"space-between center\"\n                        >\n                            <div class=\"left overflow-hidden mr-1\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                                {{ 'STAKING.TITLE' | translate }}\n                            </div>\n\n                            <div class=\"right overflow-hidden w-100\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\n                                <app-staking-switch\n                                    [(staking)]=\"variablesService.current_wallet.staking\"\n                                    [wallet_id]=\"variablesService.current_wallet.wallet_id\"\n                                >\n                                </app-staking-switch>\n                            </div>\n                        </div>\n                        <div\n                            class=\"item overflow-hidden p-1 border-radius-0_8-rem mb-1\"\n                            fxLayout=\"row nowrap\"\n                            fxLayoutAlign=\"space-between center\"\n                        >\n                            <div class=\"left overflow-hidden mr-1\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                                {{ 'STAKING.TITLE_PENDING' | translate }}\n                                :\n                            </div>\n                            <div class=\"right overflow-hidden w-100\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\n                                <div class=\"text-ellipsis mr-1\">\n                                    {{ pending.total | intToMoney }}\n                                </div>\n                                {{ variablesService.defaultTicker }}\n                            </div>\n                        </div>\n                        <div\n                            class=\"item overflow-hidden p-1 border-radius-0_8-rem mb-1\"\n                            fxLayout=\"row nowrap\"\n                            fxLayoutAlign=\"space-between center\"\n                        >\n                            <div class=\"left overflow-hidden mr-1\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n                                {{ 'STAKING.TITLE_TOTAL' | translate }}\n                                :\n                            </div>\n                            <div class=\"right overflow-hidden w-100\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\n                                <div class=\"text-ellipsis mr-1\">\n                                    {{ total | intToMoney }}\n                                </div>\n                                {{ variablesService.defaultTicker }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"right\" fxFlex=\"1 1 calc(50% - 0.5rem)\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"1rem\">\n                    <ng-container *ngIf=\"isShowPointerDetails\">\n                        <div class=\"selected overflow-hidden\" fxHide fxShow.lg fxShow.xl>\n                            <div class=\"overflow-hidden\" fxLayout=\"row\">\n                                <div class=\"text-ellipsis\">\n                                    {{ pointDetails.date | date : 'EEEE, MMMM d, y' }}\n                                    {{ pointDetails.amount }}\n                                </div>\n                                <div class=\"ml-0_5\">\n                                    {{ variablesService.defaultTicker }}\n                                </div>\n                            </div>\n                        </div>\n                    </ng-container>\n\n                    <ng-select\n                        [clearable]=\"false\"\n                        [items]=\"groupItems\"\n                        [searchable]=\"false\"\n                        bindLabel=\"title\"\n                        bindValue=\"value\"\n                        [formControl]=\"filtersForm.controls.group\"\n                        class=\"selected-group max-w-19-rem w-100\"\n                    >\n                        <ng-template let-item=\"item\" ng-label-tmp> Sort by {{ (item.title | translate | lowercase) + 's' }} </ng-template>\n                        <ng-template let-index=\"index\" let-item=\"item\" ng-option-tmp>\n                            {{ item.title | translate }}\n                        </ng-template>\n                    </ng-select>\n                </div>\n            </div>\n            <div\n                class=\"row\"\n                fxFlex=\"0 0 2rem\"\n                fxHide.lg\n                fxHide.xl\n                fxLayout=\"row nowrap\"\n                fxLayoutAlign=\"space-between center\"\n                fxLayoutGap=\"1rem\"\n                fxShow\n            >\n                <div class=\"left\"></div>\n                <div class=\"right\" fxLayoutAlign=\"end center\">\n                    <div *ngIf=\"pointDetails && pointDetails.date\" class=\"selected overflow-hidden\">\n                        <div class=\"overflow-hidden\" fxLayout=\"row\">\n                            <div class=\"text-ellipsis\">\n                                {{ pointDetails.date | date : 'EEEE, MMMM d, y' }}\n                                {{ pointDetails.amount }}\n                            </div>\n                            <div class=\"ml-0_5\">\n                                {{ variablesService.defaultTicker }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"chart border-radius-0_8-rem\" fxFlex=\"1 1 auto\" fxLayoutAlign=\" center\">\n            <div [chart]=\"chart\"></div>\n        </div>\n\n        <div class=\"chart-options mt-2\" fxFlex=\"0 0 auto\" fxLayoutAlign=\" center\">\n            <ng-container *ngFor=\"let item of periodItems; let last = last\">\n                <button\n                    (click)=\"filtersForm.controls.period.patchValue(item.value)\"\n                    [class.active]=\"item.value === filtersForm.controls.period.value\"\n                    [class.mr-1]=\"!last\"\n                    [class.outline]=\"!last\"\n                    [class.primary]=\"last\"\n                    class=\"big w-100\"\n                    type=\"button\"\n                >\n                    {{ item.title | translate }}\n                </button>\n            </ng-container>\n        </div>\n    </div>\n</div>\n","import { Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexModule } from '@angular/flex-layout';\nimport { GetAssetInfoPipe, IntToMoneyPipeModule } from '@parts/pipes';\nimport { NonNullableFormBuilder, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { ZanoValidators } from '@parts/utils/zano-validators';\nimport { ProposalDetails } from '@api/models/swap.model';\nimport { MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-swap-confirm-master-password',\n    standalone: true,\n    imports: [CommonModule, FlexModule, ReactiveFormsModule, TranslateModule, IntToMoneyPipeModule, GetAssetInfoPipe, MatDialogModule],\n    templateUrl: './swap-confirm-master-password.component.html',\n    styleUrls: ['./swap-confirm-master-password.component.scss'],\n})\nexport class SwapConfirmMasterPasswordComponent {\n    variablesService: VariablesService = inject(VariablesService);\n\n    fb: NonNullableFormBuilder = inject(NonNullableFormBuilder);\n\n    confirmForm = this.fb.group(\n        {\n            password: this.fb.control(''),\n            appPass: this.fb.control(this.variablesService.appPass || ''),\n        },\n        { validators: [ZanoValidators.formMatch('password', 'appPass', 'passwordNotMatch')] }\n    );\n\n    data: { proposalDetails: ProposalDetails } = inject(MAT_DIALOG_DATA);\n}\n","<form [formGroup]=\"confirmForm\">\n    <h3 mat-dialog-title>\n        {{ 'CONFIRM.TITLE' | translate }}\n    </h3>\n\n    <mat-dialog-content>\n        <div class=\"table-info mb-2\">\n            <div class=\"row\">\n                <div class=\"label max-w-19-rem w-100\">\n                    {{ 'CONFIRM_SWAP.FORM.TABLE.LABELS.LABEL1' | translate }}\n                </div>\n                <div class=\"text\">\n                    <ng-container *ngFor=\"let item of data.proposalDetails.to_initiator\">\n                        {{ item.amount | intToMoney : (item.asset_id | getAssetInfo)?.decimal_point }}\n                        {{ (item.asset_id | getAssetInfo)?.ticker || '***' }}\n                        <br />\n                    </ng-container>\n                </div>\n            </div>\n\n            <hr class=\"separator\" />\n\n            <div class=\"row\">\n                <div class=\"label max-w-19-rem w-100\">\n                    {{ 'CONFIRM_SWAP.FORM.TABLE.LABELS.LABEL2' | translate }}\n                </div>\n                <div class=\"text\">\n                    <ng-container *ngFor=\"let item of data.proposalDetails.to_finalizer\">\n                        {{ item.amount | intToMoney }}\n                        {{ (item.asset_id | getAssetInfo)?.ticker || '***' }}\n                        <br />\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n\n        <div *ngIf=\"variablesService.appPass\" class=\"form__field mb-0\">\n            <label for=\"password\">\n                {{ 'LOGIN.MASTER_PASS' | translate }}\n                <span class=\"color-red\">*</span>\n            </label>\n            <input\n                (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                [class.invalid]=\"confirmForm.touched && confirmForm.invalid\"\n                [placeholder]=\"'PLACEHOLDERS.MASTER_PASS_PLACEHOLDER' | translate\"\n                autofocus\n                class=\"form__field--input\"\n                formControlName=\"password\"\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n            />\n            <div *ngIf=\"confirmForm.touched && confirmForm.invalid\" class=\"error\">\n                <div *ngIf=\"confirmForm.hasError('passwordNotMatch')\">\n                    {{ 'LOGIN.FORM_ERRORS.WRONG_PASSWORD' | translate }}\n                </div>\n                <div *ngIf=\"confirmForm.controls.password.hasError('required')\">\n                    {{ 'LOGIN.FORM_ERRORS.PASS_REQUIRED' | translate }}\n                </div>\n            </div>\n        </div>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <div fxFlex=\"1 1 auto\" fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\n            <button [mat-dialog-close]=\"false\" class=\"outline big w-100\" type=\"button\">\n                {{ 'CONFIRM.BUTTON_CANCEL' | translate }}\n            </button>\n            <button [mat-dialog-close]=\"true\" [disabled]=\"confirmForm.invalid\" class=\"primary big w-100\" type=\"submit\">\n                {{ 'CONFIRM.BUTTON_CONFIRM' | translate }}\n            </button>\n        </div>\n    </mat-dialog-actions>\n</form>\n","import { Component, ElementRef, inject, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { BackendService } from '@api/services/backend.service';\nimport { Subject } from 'rxjs';\nimport { BLOCK_EXPLORER_TN_TX_URL_PREFIX, BLOCK_EXPLORER_TX_URL_PREFIX } from '@parts/data/constants';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FlexLayoutModule, FlexModule } from '@angular/flex-layout';\nimport { MatIconModule } from '@angular/material/icon';\nimport { CopyButtonComponent } from '@parts/components/copy-button.component';\n\n@Component({\n    selector: 'app-swap-details',\n    templateUrl: './swap-details.component.html',\n    styleUrls: ['./swap-details.component.scss'],\n    standalone: true,\n    imports: [CommonModule, MatDialogModule, TranslateModule, FlexModule, MatIconModule, FlexLayoutModule, CopyButtonComponent],\n})\nexport class SwapDetailsComponent implements OnInit, OnDestroy {\n    public status: 'loading' | 'success' | 'error' = 'loading';\n\n    // public data: { job_id: number } = inject(MAT_DIALOG_DATA);\n\n    public data: { response: any } = inject(MAT_DIALOG_DATA);\n\n    public details: { result_tx_id: string };\n\n    public error: any;\n\n    @ViewChild('elDetailsList', { static: true }) elDetailsList: ElementRef;\n\n    public isShowDetailsState = false;\n\n    public variablesService: VariablesService = inject(VariablesService);\n\n    private _backendService: BackendService = inject(BackendService);\n\n    private _destroy$: Subject<void> = new Subject<void>();\n\n    ngOnInit(): void {\n        // this._backendService.dispatchAsyncCallResult$\n        //     .pipe(\n        //         filter(Boolean),\n        //         filter(({ job_id }: AsyncCommandResults) => this.data.job_id === job_id),\n        //         takeUntil(this._destroy$)\n        //     )\n        //     .subscribe({\n        //         next: ({ response }) => {\n        //             if (response.error) {\n        //                 this.status = 'error';\n        //                 this.error = response.error;\n        //             } else {\n        //                 this.status = 'success';\n        //                 this.details = response.result;\n        //             }\n        //         },\n        //     });\n\n        const { response } = this.data;\n        if (response.error) {\n            this.status = 'error';\n            this.error = response.error;\n        } else {\n            this.status = 'success';\n            this.details = response.result;\n        }\n    }\n\n    ngOnDestroy(): void {\n        this._destroy$.next();\n        this._destroy$.complete();\n    }\n\n    toggleDetails(): void {\n        this.isShowDetailsState = !this.isShowDetailsState;\n        setTimeout(() => this.scrollToBottomDetailsList(), 100);\n    }\n\n    private scrollToBottomDetailsList(): void {\n        if (this.elDetailsList) {\n            const { nativeElement } = this.elDetailsList;\n            nativeElement.scrollTop = nativeElement.scrollHeight;\n        }\n    }\n\n    openInBrowser(hash: string): void {\n        this._backendService.openUrlInBrowser(\n            (this.variablesService.testnet ? BLOCK_EXPLORER_TN_TX_URL_PREFIX : BLOCK_EXPLORER_TX_URL_PREFIX) + hash\n        );\n    }\n}\n","<h3 mat-dialog-title>\n    {{ 'SEND_DETAILS_MODAL.TITLE1' | translate }}\n</h3>\n\n<mat-dialog-content fxLayout=\"column\">\n    <div class=\"status mb-2\" fxFlex=\"0 0 auto\" fxLayout=\"column\" fxLayoutAlign=\" center\">\n        <div *ngIf=\"status === 'success'\" class=\"image\">\n            <img alt=\"success\" src=\"assets/icons/aqua/transaction_success.svg\" />\n        </div>\n\n        <div *ngIf=\"status === 'error'\" class=\"image\">\n            <img alt=\"failed\" class=\"image\" src=\"assets/icons/red/transaction_failed.svg\" />\n        </div>\n\n        <div *ngIf=\"status === 'loading'\" class=\"loader\"></div>\n\n        <p class=\"color-primary mt-2\">\n            {{\n                {\n                    success: 'TOR_LIB_STATE.STATE_SENT_SUCCESS',\n                    error: 'TOR_LIB_STATE.STATE_SEND_FAILED',\n                    loading: 'Loading...'\n                }[status] | translate\n            }}\n        </p>\n    </div>\n\n    <div *ngIf=\"details || error\" class=\"details border-radius-0_8-rem overflow-hidden\" fxFlex=\"0 0 auto\" fxLayout=\"column\">\n        <div\n            (click)=\"toggleDetails()\"\n            class=\"header overflow-hidden py-1 px-2 w-100 cursor-pointer\"\n            fxLayout=\"row\"\n            fxLayoutAlign=\"space-between center\"\n        >\n            <p class=\"title text-ellipsis mr-2\">\n                {{ 'SEND_DETAILS_MODAL.TITLE2' | translate }}\n            </p>\n            <button fxLayout=\"row\" fxLayoutAlign=\"center center\">\n                <mat-icon\n                    class=\"ml-1\"\n                    svgIcon=\"zano-dropdown-arrow-down\"\n                    [ngClass]=\"{\n                        'rotate-180': isShowDetailsState\n                    }\"\n                ></mat-icon>\n            </button>\n        </div>\n        <div\n            [class.px-2]=\"isShowDetailsState\"\n            [class.py-1]=\"isShowDetailsState\"\n            [fxHide]=\"!isShowDetailsState\"\n            class=\"details-wrapper\"\n            fxFlex=\"1 1 auto\"\n            fxLayout=\"row\"\n        >\n            <ul #elDetailsList class=\"details-list scrolled-content\">\n                <ng-container *ngIf=\"details\">\n                    <ng-container *ngIf=\"details.result_tx_id as result_tx_id\">\n                        <li class=\"item mb-1 color-primary\" fxLayout=\"row nowrap\" fxLayoutAlign=\"start center\">\n                            <span class=\"text word-break-break-all cursor-pointer\" (click)=\"openInBrowser(result_tx_id)\">\n                                Result tx: {{ result_tx_id }}\n                            </span>\n                            <app-copy-button [value]=\"result_tx_id\" class=\"ml-1\"> </app-copy-button>\n                        </li>\n                    </ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"error\">\n                    <li class=\"item mb-1 color-red\" fxLayout=\"row nowrap\" fxLayoutAlign=\"start center\">\n                        <span class=\"text word-break-break-all\"> Error: {{ error.message || 'Ops... Unknown error...' }} </span>\n                    </li>\n                </ng-container>\n            </ul>\n        </div>\n    </div>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n    <div fxFlex=\"1 1 auto\" fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\n        <button [mat-dialog-close]=\"status === 'success'\" class=\"outline big w-100\" type=\"button\">\n            {{ 'MODALS.OK' | translate }}\n        </button>\n    </div>\n</mat-dialog-actions>\n","import { Component, inject, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BreadcrumbsComponent } from '@parts/components/breadcrumbs/breadcrumbs.component';\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\nimport { Router, RouterLinkWithHref } from '@angular/router';\nimport { InputValidateModule } from '@parts/directives';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NonNullableFormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, filter, take, takeUntil } from 'rxjs/operators';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { ParamsCallRpc } from '@api/models/call_rpc.model';\nimport { BackendService } from '@api/services/backend.service';\nimport { IntToMoneyPipeModule } from '@parts/pipes';\nimport { SwapConfirmMasterPasswordComponent } from '../../modals/swap-confirm-master-password/swap-confirm-master-password.component';\nimport { ProposalDetails } from '@api/models/swap.model';\nimport { GetAssetInfoPipe } from '@parts/pipes/get-asset-info.pipe';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { SwapDetailsComponent } from '../../modals/swap-details/swap-details.component';\n\n@Component({\n    selector: 'app-confirm-swap',\n    standalone: true,\n    imports: [\n        CommonModule,\n        BreadcrumbsComponent,\n        RouterLinkWithHref,\n        InputValidateModule,\n        TranslateModule,\n        ReactiveFormsModule,\n        IntToMoneyPipeModule,\n        GetAssetInfoPipe,\n    ],\n    templateUrl: './confirm-swap.component.html',\n    styleUrls: ['./confirm-swap.component.scss'],\n})\nexport class ConfirmSwapComponent implements OnInit, OnDestroy {\n    breadcrumbItems: BreadcrumbItems = [\n        {\n            routerLink: '/wallet/swap',\n            title: 'CONFIRM_SWAP.BREADCRUMBS.ITEM1',\n        },\n        {\n            title: 'CONFIRM_SWAP.BREADCRUMBS.ITEM2',\n        },\n    ];\n\n    errorRpc: { code: number; message: string } | undefined;\n\n    variablesService = inject(VariablesService);\n\n    fb = inject(NonNullableFormBuilder);\n\n    form = this.fb.group({\n        hex_raw_proposal: this.fb.control<string>('', [Validators.required]),\n    });\n\n    proposalDetails: ProposalDetails | undefined;\n\n    hex_raw_proposal: string | undefined;\n\n    private backendService: BackendService = inject(BackendService);\n\n    private router: Router = inject(Router);\n\n    private ngZone: NgZone = inject(NgZone);\n\n    private _matDialog: MatDialog = inject(MatDialog);\n\n    private destroy$ = new Subject<void>();\n\n    ngOnInit(): void {\n        this.form.controls.hex_raw_proposal.valueChanges\n            .pipe(distinctUntilChanged(), debounceTime(500), takeUntil(this.destroy$))\n            .subscribe({\n                next: (hex_raw_proposal: string) => {\n                    this.hex_raw_proposal = hex_raw_proposal;\n                    this.getProposalDetails(hex_raw_proposal);\n                },\n            });\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    swapConfirmMasterPasswordDialog(): void {\n        const proposalDetails = this.proposalDetails;\n        const config: MatDialogConfig = {\n            data: {\n                proposalDetails,\n            },\n            disableClose: true,\n        };\n        this._matDialog\n            .open(SwapConfirmMasterPasswordComponent, config)\n            .afterClosed()\n            .pipe(filter(Boolean), take(1))\n            .subscribe({\n                next: () => this.acceptProposal(),\n            });\n    }\n\n    acceptProposal(): void {\n        if (!this.hex_raw_proposal) {\n            return;\n        }\n        const { wallet_id } = this.variablesService.current_wallet;\n        const hex_raw_proposal = this.hex_raw_proposal;\n\n        const params: ParamsCallRpc = {\n            jsonrpc: '2.0',\n            id: 0,\n            method: 'ionic_swap_accept_proposal',\n            params: { hex_raw_proposal },\n        };\n        this.backendService.call_wallet_rpc([wallet_id, params], (status, response) => {\n            this.ngZone.run(() => {\n                const config: MatDialogConfig = {\n                    data: {\n                        response,\n                    },\n                    disableClose: true,\n                };\n                this._matDialog\n                    .open(SwapDetailsComponent, config)\n                    .afterClosed()\n                    .pipe(filter(Boolean), take(1))\n                    .subscribe({\n                        next: () => this.router.navigate(['/wallet/history']),\n                    });\n            });\n        });\n    }\n\n    private getProposalDetails(hex_raw_proposal: string): void {\n        const { wallet_id } = this.variablesService.current_wallet;\n\n        const params: ParamsCallRpc = {\n            jsonrpc: '2.0',\n            id: 0,\n            method: 'ionic_swap_get_proposal_info',\n            params: { hex_raw_proposal },\n        };\n\n        this.backendService.call_wallet_rpc([wallet_id, params], (status, response_data) => {\n            this.ngZone.run(() => {\n                const proposal = response_data?.result?.['proposal'];\n                if (proposal) {\n                    this.proposalDetails = proposal;\n                    this.errorRpc = undefined;\n                } else {\n                    this.proposalDetails = undefined;\n                    this.errorRpc = response_data.error;\n                }\n            });\n        });\n    }\n}\n","<div class=\"container scrolled-content\">\n    <app-breadcrumbs [items]=\"breadcrumbItems\" class=\"mb-2\"></app-breadcrumbs>\n\n    <form [formGroup]=\"form\" class=\"form\">\n        <div class=\"form__field textarea mb-2\">\n            <label for=\"swap-proposal-hex\">\n                {{ 'CONFIRM_SWAP.FORM.LABELS.LABEL1' | translate }}\n            </label>\n            <textarea\n                [placeholder]=\"'CONFIRM_SWAP.FORM.PLACEHOLDERS.PLACEHOLDER1' | translate\"\n                formControlName=\"hex_raw_proposal\"\n                id=\"swap-proposal-hex\"\n            ></textarea>\n        </div>\n\n        <div *ngIf=\"proposalDetails\" class=\"form__field mb-2\">\n            <label for=\"swap-proposal-hex\">\n                {{ 'CONFIRM_SWAP.FORM.LABELS.LABEL2' | translate }}\n            </label>\n            <div class=\"table-info\">\n                <div class=\"row\">\n                    <div class=\"label max-w-19-rem w-100\">\n                        {{ 'CONFIRM_SWAP.FORM.TABLE.LABELS.LABEL1' | translate }}\n                    </div>\n\n                    <div class=\"text\">\n                        <p *ngFor=\"let item of proposalDetails.to_initiator\">\n                            {{ item.amount | intToMoney : (item.asset_id | getAssetInfo)?.decimal_point }}\n                            {{ (item.asset_id | getAssetInfo)?.ticker || '***' }}\n                        </p>\n                    </div>\n                </div>\n\n                <hr class=\"separator\" />\n\n                <div class=\"row\">\n                    <div class=\"label max-w-19-rem w-100\">\n                        {{ 'CONFIRM_SWAP.FORM.TABLE.LABELS.LABEL2' | translate }}\n                    </div>\n                    <div class=\"text\">\n                        <p *ngFor=\"let item of proposalDetails.to_finalizer\">\n                            {{ item.amount | intToMoney : (item.asset_id | getAssetInfo)?.decimal_point }}\n                            {{ (item.asset_id | getAssetInfo)?.ticker || '***' }}\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"actions\">\n            <button (click)=\"swapConfirmMasterPasswordDialog()\" [disabled]=\"!proposalDetails\" class=\"btn primary big w-100\" type=\"button\">\n                {{ 'CONFIRM_SWAP.FORM.BUTTONS.BUTTON1' | translate }}\n            </button>\n\n            <a class=\"btn outline big w-100\" routerLink=\"/wallet/swap\">\n                {{ 'CONFIRM_SWAP.FORM.BUTTONS.BUTTON2' | translate }}\n            </a>\n        </div>\n\n        <div *ngIf=\"errorRpc\" class=\"error mt-2\">\n            {{ 'ERRORS.INVALID_PROPOSAL' | translate }}\n        </div>\n    </form>\n</div>\n","import { ChangeDetectorRef, Component, inject, NgZone, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router, RouterLinkWithHref } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { BreadcrumbsComponent } from '@parts/components/breadcrumbs/breadcrumbs.component';\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\nimport { DefaultImgModule, InputValidateModule, LowerCaseDirective } from '@parts/directives';\nimport {\n    AbstractControl,\n    FormBuilder,\n    FormControl,\n    FormGroup,\n    FormsModule,\n    ReactiveFormsModule,\n    ValidationErrors,\n    Validators,\n} from '@angular/forms';\nimport { IntToMoneyPipeModule, MoneyToIntPipeModule, ShortStringPipe } from '@parts/pipes';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { AssetBalance, AssetInfo } from '@api/models/assets.model';\nimport { ZANO_ASSET_INFO } from '@parts/data/assets';\nimport { REG_EXP_ALIAS_NAME } from '@parts/utils/zano-validators';\nimport { BackendService } from '@api/services/backend.service';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { debounceTime, map, startWith, switchMap, tap } from 'rxjs/operators';\nimport { BigNumber } from 'bignumber.js';\nimport { assetHasNotBeenAddedToWallet, insufficientFunds } from '@parts/utils/zano-errors';\nimport { ParamsCallRpc } from '@api/models/call_rpc.model';\nimport { LoaderComponent } from '@parts/components/loader.component';\nimport { Wallet } from '@api/models/wallet.model';\nimport { intToMoney } from '@parts/functions/int-to-money';\nimport { moneyToInt } from '@parts/functions/money-to-int';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatOptionModule } from '@angular/material/core';\nimport { WalletsService } from '@parts/services/wallets.service';\nimport { MatIconModule } from '@angular/material/icon';\nimport { GetLogoByAssetInfoPipe } from '@parts/pipes/get-logo-by-asset-info.pipe';\nimport { MAXIMUM_VALUE } from '@parts/data/constants';\nimport { CdkVirtualScrollViewport, ScrollingModule } from '@angular/cdk/scrolling';\n\n@Component({\n    selector: 'app-create-swap',\n    standalone: true,\n    imports: [\n        CommonModule,\n        RouterLinkWithHref,\n        TranslateModule,\n        BreadcrumbsComponent,\n        InputValidateModule,\n        ReactiveFormsModule,\n        DefaultImgModule,\n        NgSelectModule,\n        LowerCaseDirective,\n        ShortStringPipe,\n        FormsModule,\n        IntToMoneyPipeModule,\n        MoneyToIntPipeModule,\n        LoaderComponent,\n        MatAutocompleteModule,\n        MatOptionModule,\n        MatIconModule,\n        GetLogoByAssetInfoPipe,\n        ScrollingModule,\n    ],\n    templateUrl: './create-swap.component.html',\n    styleUrls: ['./create-swap.component.scss'],\n})\nexport class CreateSwapComponent implements OnInit, OnDestroy {\n    @ViewChild(CdkVirtualScrollViewport)\n    cdkVirtualScrollViewPort: CdkVirtualScrollViewport;\n\n    readonly breadcrumbItems: BreadcrumbItems = [\n        {\n            routerLink: '/wallet/swap',\n            title: 'CREATE_SWAP.BREADCRUMBS.ITEM1',\n        },\n        {\n            title: 'CREATE_SWAP.BREADCRUMBS.ITEM2',\n        },\n    ];\n\n    readonly variablesService: VariablesService = inject(VariablesService);\n\n    private readonly _fb: FormBuilder = inject(FormBuilder);\n\n    private readonly _backendService: BackendService = inject(BackendService);\n\n    private readonly _ngZone: NgZone = inject(NgZone);\n\n    private readonly _router: Router = inject(Router);\n\n    private readonly _cdr: ChangeDetectorRef = inject(ChangeDetectorRef);\n\n    private readonly _walletsService: WalletsService = inject(WalletsService);\n\n    aliasAddress: string;\n\n    loading$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n    lowerCaseDisabled$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\n\n    errorRpc: { code: number; message: string } | undefined;\n\n    currentWallet: Wallet = this.variablesService.current_wallet;\n\n    sendingAssetsInfo$: Observable<AssetInfo[]>;\n\n    sendingDecimalPoint$: Observable<number>;\n\n    receivingAssetsInfo$: Observable<AssetInfo[]>;\n\n    receivingDecimalPoint$: Observable<number>;\n\n    addressItems$: Observable<string[]>;\n\n    loadingAddressItems$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\n\n    form: FormGroup<{\n        sending: FormGroup<{\n            amount: FormControl<string>;\n            asset_id: FormControl<string>;\n        }>;\n        receiving: FormGroup<{\n            amount: FormControl<string>;\n            asset_id: FormControl<string>;\n        }>;\n        receiverAddress: FormControl<string>;\n    }>;\n\n    errorMessages: { [key: string]: string | undefined } = {\n        receiverAddress: undefined,\n    };\n\n    private _openedWalletItems: string[] = this._walletsService.opened_wallet_items;\n\n    private _aliasItems: string[] = this.variablesService.all_aliases\n        .filter(Boolean)\n        .map((alias_info) => (alias_info.alias ? '@' + alias_info.alias : alias_info.address));\n\n    private _destroy$ = new Subject<void>();\n\n    ngOnInit(): void {\n        this._createForm();\n    }\n\n    ngOnDestroy(): void {\n        this._destroy$.next();\n        this._destroy$.complete();\n    }\n\n    isVisibleErrorByControl(control: AbstractControl): boolean {\n        return control.invalid && (control.dirty || control.touched);\n    }\n\n    isVisibleErrorByForm(form: FormGroup): boolean {\n        return form.invalid && (form.dirty || form.touched);\n    }\n\n    reverse(): void {\n        const { sending, receiving } = this.form.getRawValue();\n\n        const markAllAsTouched = (): void => {\n            this.form.controls.sending.markAllAsTouched();\n            this.form.controls.receiving.markAllAsTouched();\n        };\n\n        markAllAsTouched();\n\n        this.form.patchValue({\n            sending: receiving,\n            receiving: sending,\n        });\n        this.form.controls.sending.controls.amount.updateValueAndValidity();\n        this.form.controls.receiving.controls.amount.updateValueAndValidity();\n    }\n\n    updateReceiverAddressErrorMessage(): void {\n        const {\n            controls: { receiverAddress },\n        } = this.form;\n        let message: string | undefined;\n\n        switch (true) {\n            case receiverAddress.hasError('address_not_valid'): {\n                message = 'SEND.FORM_ERRORS.ADDRESS_NOT_VALID';\n                break;\n            }\n            case receiverAddress.hasError('alias_not_found'): {\n                message = 'SEND.FORM_ERRORS.ALIAS_NOT_FOUND';\n                break;\n            }\n            case receiverAddress.hasError('alias_not_valid'): {\n                message = 'SEND.FORM_ERRORS.ALIAS_NOT_VALID';\n                break;\n            }\n            case receiverAddress.hasError('required'): {\n                message = 'ERRORS.REQUIRED';\n                break;\n            }\n        }\n        this.errorMessages['receiverAddress'] = message;\n    }\n\n    pasteListenReceiverAddressField(event: ClipboardEvent): void {\n        event.preventDefault();\n        const {\n            controls: { receiverAddress },\n        } = this.form;\n        const { clipboardData } = event;\n        let value: string = clipboardData.getData('Text') ?? '';\n        this.lowerCaseDisabled$.next(value.indexOf('@') !== 0);\n\n        if (value.indexOf('@') === 0) {\n            value = value.toLowerCase();\n        }\n\n        receiverAddress.patchValue(value);\n    }\n\n    trackByFn(index: number, value: string): number | string {\n        return value ?? index;\n    }\n\n    beforeSubmit(): void {\n        if (this.form.invalid) {\n            this.form.markAllAsTouched();\n            this.form.updateValueAndValidity();\n            return;\n        }\n        this.submit();\n    }\n\n    submit(): void {\n        this.loading$.next(true);\n        const { sending, receiving, receiverAddress } = this.form.getRawValue();\n        const { wallet_id } = this.variablesService.current_wallet;\n        const { default_fee_big } = this.variablesService;\n\n        const { current_wallet } = this.variablesService;\n\n        const sendingAsset: AssetInfo | undefined = current_wallet.getAssetInfoByAssetId(sending.asset_id);\n        const receivingAsset: AssetInfo | undefined = current_wallet.getAssetInfoByAssetId(receiving.asset_id);\n\n        if (!sendingAsset) {\n            this.form.controls.sending.controls.asset_id.setErrors({\n                alias_not_found: true,\n            });\n            return;\n        }\n\n        if (!receivingAsset) {\n            this.form.controls.receiving.controls.asset_id.setErrors({\n                alias_not_found: true,\n            });\n            return;\n        }\n\n        const params2: ParamsCallRpc = {\n            jsonrpc: '2.0',\n            id: 0,\n            method: 'ionic_swap_generate_proposal',\n            params: {\n                proposal: {\n                    to_finalizer: [\n                        {\n                            asset_id: sending.asset_id,\n                            amount: moneyToInt(sending.amount, sendingAsset.decimal_point),\n                        },\n                    ],\n                    to_initiator: [\n                        {\n                            asset_id: receiving.asset_id,\n                            amount: moneyToInt(receiving.amount, receivingAsset.decimal_point),\n                        },\n                    ],\n                    mixins: 10,\n                    fee_paid_by_a: default_fee_big,\n                    expiration_time: 0,\n                },\n            },\n        };\n\n        if (receiverAddress.indexOf('@') === 0) {\n            params2.params['destination_address'] = this.aliasAddress;\n        } else {\n            params2.params['destination_address'] = receiverAddress;\n        }\n\n        this._backendService.call_wallet_rpc([wallet_id, params2], (status, response_data) => {\n            if (response_data?.result) {\n                this._ngZone.run(() => {\n                    this._router\n                        .navigateByUrl('/wallet/swap-proposal-hex', {\n                            state: {\n                                hex_raw_proposal: response_data.result['hex_raw_proposal'],\n                            },\n                        })\n                        .then();\n                });\n            } else {\n                this._ngZone.run(() => {\n                    this.errorRpc = response_data.error;\n                    this.loading$.next(false);\n                });\n            }\n        });\n    }\n\n    private _formListeners(): void {\n        const { balances$ } = this.currentWallet;\n        this.sendingAssetsInfo$ = this.form.controls.receiving.controls.asset_id.valueChanges.pipe(\n            startWith(this.form.controls.receiving.controls.asset_id.value),\n            switchMap((asset_id) =>\n                balances$.pipe(\n                    map((balances) => balances.filter((v) => v.asset_info.asset_id !== asset_id)),\n                    map((balances) => balances.map(({ asset_info }) => asset_info))\n                )\n            )\n        );\n        this.receivingAssetsInfo$ = this.form.controls.sending.controls.asset_id.valueChanges.pipe(\n            startWith(this.form.controls.sending.controls.asset_id.value),\n            switchMap((asset_id) =>\n                balances$.pipe(\n                    map((balances) => balances.filter((v) => v.asset_info.asset_id !== asset_id)),\n                    map((balances) => balances.map(({ asset_info }) => asset_info))\n                )\n            )\n        );\n\n        const { current_wallet } = this.variablesService;\n\n        this.sendingDecimalPoint$ = this.form.controls.sending.controls.asset_id.valueChanges.pipe(\n            startWith(this.form.controls.sending.controls.asset_id.value),\n            map((asset_id: string) => {\n                return current_wallet.getBalanceByAssetId(asset_id)?.asset_info.decimal_point ?? 0;\n            })\n        );\n\n        this.receivingDecimalPoint$ = this.form.controls.receiving.controls.asset_id.valueChanges.pipe(\n            startWith(this.form.controls.receiving.controls.asset_id.value),\n            map((asset_id: string) => {\n                return current_wallet.getBalanceByAssetId(asset_id)?.asset_info.decimal_point ?? 0;\n            })\n        );\n\n        this.addressItems$ = this.form.controls.receiverAddress.valueChanges.pipe(\n            startWith(this.form.controls.receiverAddress.value),\n            tap((value) => {\n                const condition = value[0] === '@';\n                this.lowerCaseDisabled$.next(!condition);\n                this.loadingAddressItems$.next(condition);\n            }),\n            debounceTime(250),\n            map((value) => {\n                if (!value?.length) {\n                    return this._openedWalletItems;\n                }\n                if (value[0] === '@') {\n                    return this._aliasItems.filter((alias) => {\n                        return alias.includes(value);\n                    });\n                }\n                return [];\n            }),\n            tap(() => this.loadingAddressItems$.next(false))\n        );\n    }\n\n    private _createForm(): void {\n        this.form = this._fb.group(\n            {\n                sending: this._fb.group(\n                    {\n                        amount: this._fb.control(null, {\n                            validators: [\n                                Validators.required,\n                                ({ value }: FormControl): ValidationErrors | null => {\n                                    const amount: BigNumber = new BigNumber(value);\n\n                                    if (amount.eq(0)) {\n                                        return { zero: true };\n                                    }\n\n                                    return null;\n                                },\n                            ],\n                        }),\n                        asset_id: this._fb.control(ZANO_ASSET_INFO.asset_id, [Validators.required]),\n                    },\n                    {\n                        validators: [\n                            (form: FormGroup): ValidationErrors | null => {\n                                const { value: asset_id } = form.get('asset_id');\n                                const { value: amount } = form.get('amount');\n                                const preparedAmount = new BigNumber(amount);\n\n                                if (!asset_id) {\n                                    return null;\n                                }\n\n                                const asset: AssetBalance | undefined = this.variablesService.current_wallet.balances?.find(\n                                    (v) => v.asset_info.asset_id === asset_id\n                                );\n                                if (asset) {\n                                    const {\n                                        asset_info: { decimal_point },\n                                        unlocked,\n                                    } = asset;\n                                    const maximum_amount_by_decimal_point = intToMoney(MAXIMUM_VALUE, decimal_point);\n                                    if (preparedAmount.isGreaterThan(maximum_amount_by_decimal_point)) {\n                                        return { greater_max: { max: maximum_amount_by_decimal_point } };\n                                    }\n\n                                    const preparedUnlocked = intToMoney(unlocked, decimal_point);\n                                    return preparedAmount.isGreaterThan(preparedUnlocked) ? { insufficientFunds } : null;\n                                } else {\n                                    return { assetHasNotBeenAddedToWallet };\n                                }\n                            },\n                        ],\n                    }\n                ),\n                receiving: this._fb.group(\n                    {\n                        amount: this._fb.control(\n                            {\n                                value: null,\n                                disabled: this.currentWallet.balances.length === 1,\n                            },\n                            [\n                                Validators.required,\n                                (control: FormControl): ValidationErrors | null => {\n                                    if (!control.value) {\n                                        return null;\n                                    }\n\n                                    if (control.value === 0) {\n                                        return { zero: true };\n                                    }\n                                    return null;\n                                },\n                            ]\n                        ),\n                        asset_id: this._fb.control(\n                            {\n                                value:\n                                    this.currentWallet.balances.length <= 1\n                                        ? null\n                                        : this.currentWallet.balances[1]?.asset_info?.asset_id ?? ZANO_ASSET_INFO.asset_id,\n                                disabled: this.currentWallet.balances.length <= 1,\n                            },\n                            [Validators.required]\n                        ),\n                    },\n                    {\n                        validators: [\n                            (form: FormGroup): ValidationErrors | null => {\n                                const asset_id = form.controls.asset_id.value;\n                                const amount = new BigNumber(form.controls.amount.value);\n                                if (!asset_id) {\n                                    return null;\n                                }\n\n                                const asset: AssetBalance | undefined = this.variablesService.current_wallet.balances?.find(\n                                    (v) => v.asset_info.asset_id === asset_id\n                                );\n                                if (asset) {\n                                    const {\n                                        asset_info: { decimal_point },\n                                    } = asset;\n                                    const maximum_amount_by_decimal_point = intToMoney(MAXIMUM_VALUE, decimal_point);\n                                    if (amount.isGreaterThan(maximum_amount_by_decimal_point)) {\n                                        return { greater_max: { max: maximum_amount_by_decimal_point } };\n                                    }\n                                    return null;\n                                } else {\n                                    return { assetHasNotBeenAddedToWallet };\n                                }\n                            },\n                        ],\n                    }\n                ),\n                receiverAddress: this._fb.control('', [\n                    Validators.required,\n                    (control: FormControl): ValidationErrors | null => {\n                        this.aliasAddress = '';\n                        if (control.value) {\n                            if (control.value.indexOf('@') !== 0) {\n                                this._backendService.validateAddress(control.value, (valid_status) => {\n                                    this._ngZone.run(() => {\n                                        if (valid_status === false) {\n                                            control.setErrors(Object.assign({ address_not_valid: true }, control.errors));\n                                        } else {\n                                            if (control.hasError('address_not_valid')) {\n                                                delete control.errors['address_not_valid'];\n                                                if (Object.keys(control.errors).length === 0) {\n                                                    control.setErrors(null);\n                                                }\n                                            }\n                                        }\n                                        this._cdr.markForCheck();\n                                        this._cdr.detectChanges();\n                                    });\n                                });\n                                return control.hasError('address_not_valid') ? { address_not_valid: true } : null;\n                            } else {\n                                if (!REG_EXP_ALIAS_NAME.test(control.value)) {\n                                    return { alias_not_valid: true };\n                                } else {\n                                    this._backendService.getAliasInfoByName(control.value.replace('@', ''), (alias_status, alias_data) => {\n                                        this._ngZone.run(() => {\n                                            this.aliasAddress = alias_data.address;\n                                            if (alias_status) {\n                                                if (control.hasError('alias_not_found')) {\n                                                    delete control.errors['alias_not_found'];\n                                                    if (Object.keys(control.errors).length === 0) {\n                                                        control.setErrors(null);\n                                                    }\n                                                }\n                                            } else {\n                                                control.setErrors(Object.assign({ alias_not_found: true }, control.errors));\n                                            }\n                                            this._cdr.markForCheck();\n                                            this._cdr.detectChanges();\n                                        });\n                                    });\n                                }\n                                return control.hasError('alias_not_found') ? { alias_not_found: true } : null;\n                            }\n                        }\n                        return null;\n                    },\n                ]),\n            },\n            {\n                validators: [\n                    (control: AbstractControl): ValidationErrors | null => {\n                        const condition = control.get('sending').get('asset_id').value === control.get('receiving').get('asset_id').value;\n                        if (condition) {\n                            control.get('receiving').get('asset_id').setErrors({ sameAssetsId: true });\n                        } else {\n                            control.get('receiving').get('asset_id').setErrors(null);\n                        }\n                        return null;\n                    },\n                ],\n            }\n        );\n\n        this._setSendingAssetIdFromHistoryState();\n\n        this._formListeners();\n    }\n\n    private _setSendingAssetIdFromHistoryState(): void {\n        const state = history.state || {};\n        const history_asset: AssetBalance = state['asset'];\n        if (history_asset) {\n            const {\n                asset_info: { asset_id },\n            } = history_asset;\n            this.form.patchValue({\n                sending: {\n                    asset_id,\n                },\n            });\n\n            if (this.form.getRawValue().receiving.asset_id === asset_id) {\n                for (const balance of this.currentWallet.balances) {\n                    if (balance.asset_info.asset_id !== asset_id) {\n                        this.form.patchValue({\n                            receiving: {\n                                asset_id: balance.asset_info.asset_id,\n                            },\n                        });\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    openAutocomplete() {\n        this.cdkVirtualScrollViewPort?.scrollToIndex(0);\n        this.cdkVirtualScrollViewPort?.checkViewportSize();\n    }\n}\n","<div class=\"container scrolled-content\">\n    <app-breadcrumbs [items]=\"breadcrumbItems\" class=\"mb-2\"></app-breadcrumbs>\n\n    <form (ngSubmit)=\"beforeSubmit()\" [formGroup]=\"form\" class=\"form\">\n        <!-- Sending -->\n        <div class=\"form__row\" formGroupName=\"sending\">\n            <div class=\"form__field fixed\">\n                <label for=\"sending-amount\">\n                    {{ 'CREATE_SWAP.FORM.LABELS.LABEL1' | translate }}\n                </label>\n                <input\n                    (contextmenu)=\"variablesService.onContextMenu($event)\"\n                    [decimalPoint]=\"sendingDecimalPoint$ | async\"\n                    [placeholder]=\"'CREATE_SWAP.FORM.PLACEHOLDERS.PLACEHOLDER1' | translate\"\n                    appInputValidate=\"money\"\n                    class=\"form__field--input\"\n                    formControlName=\"amount\"\n                    id=\"sending-amount\"\n                    type=\"text\"\n                />\n                <div\n                    *ngIf=\"isVisibleErrorByControl(form.controls.sending.controls.amount) || isVisibleErrorByForm(form.controls.sending)\"\n                    class=\"error\"\n                >\n                    <ng-container [ngSwitch]=\"true\">\n                        <ng-container *ngSwitchCase=\"form.controls.sending.controls.amount.hasError('zero')\">\n                            {{ 'SEND.FORM_ERRORS.AMOUNT_ZERO' | translate }}\n                        </ng-container>\n                        <ng-container\n                            *ngSwitchCase=\"\n                                form.controls.sending.controls.amount.hasError('required') &&\n                                !form.controls.sending.hasError('assetHasNotBeenAddedToWallet')\n                            \"\n                        >\n                            {{ 'ERRORS.REQUIRED' | translate }}\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"form.controls.sending.hasError('greater_max')\">\n                            {{ 'ERRORS.MAX' | translate : { max: form.controls.sending.errors['greater_max'].max } }}\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"form.controls.sending.hasError('insufficientFunds')\">\n                            {{ form.controls.sending.errors['insufficientFunds'].errorText | translate }}\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"form.controls.sending.hasError('assetHasNotBeenAddedToWallet')\">\n                            {{ form.controls.sending.errors['assetHasNotBeenAddedToWallet'].errorText | translate }}\n                        </ng-container>\n                    </ng-container>\n                </div>\n            </div>\n\n            <div class=\"form__field fixed\">\n                <label> &nbsp; </label>\n                <ng-select\n                    (change)=\"form.controls.sending.controls.amount.updateValueAndValidity()\"\n                    [bindValue]=\"'asset_id'\"\n                    [clearable]=\"false\"\n                    [items]=\"sendingAssetsInfo$ | async\"\n                    [searchable]=\"false\"\n                    class=\"custom-select with-circle\"\n                    formControlName=\"asset_id\"\n                >\n                    <ng-template let-item=\"item\" ng-label-tmp ng-option-tmp>\n                        <div [innerHTML]=\"item | getLogoByAssetInfo\" class=\"token-logo\"></div>\n                        {{ item.full_name || '---' }}\n                    </ng-template>\n                </ng-select>\n            </div>\n        </div>\n        <!-- /Sending -->\n\n        <div class=\"wrapper-reverse\">\n            <button (click)=\"reverse()\" [disabled]=\"currentWallet.balances.length === 1\" class=\"revers\" type=\"button\">\n                <mat-icon class=\"rotate-90\" svgIcon=\"zano-swap\"></mat-icon>\n            </button>\n        </div>\n\n        <!-- Receiving -->\n        <div class=\"form__row\" formGroupName=\"receiving\">\n            <div class=\"form__field fixed\">\n                <label for=\"receiving-amount\">\n                    {{ 'CREATE_SWAP.FORM.LABELS.LABEL2' | translate }}\n                </label>\n                <input\n                    [decimalPoint]=\"receivingDecimalPoint$ | async\"\n                    [placeholder]=\"'CREATE_SWAP.FORM.PLACEHOLDERS.PLACEHOLDER1' | translate\"\n                    appInputValidate=\"money\"\n                    class=\"form__field--input\"\n                    formControlName=\"amount\"\n                    id=\"receiving-amount\"\n                    type=\"text\"\n                />\n                <div\n                    *ngIf=\"\n                        isVisibleErrorByControl(form.controls.receiving.controls.amount) || isVisibleErrorByForm(form.controls.receiving)\n                    \"\n                    class=\"error\"\n                >\n                    <ng-container [ngSwitch]=\"true\">\n                        <ng-container\n                            *ngSwitchCase=\"\n                                form.controls.receiving.controls.amount.hasError('required') &&\n                                !form.controls.receiving.hasError('assetHasNotBeenAddedToWallet')\n                            \"\n                        >\n                            {{ 'ERRORS.REQUIRED' | translate }}\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"form.controls.receiving.controls.amount.hasError('zero')\">\n                            {{ 'SEND.FORM_ERRORS.AMOUNT_ZERO' | translate }}\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"form.controls.receiving.hasError('greater_max')\">\n                            {{ 'ERRORS.MAX' | translate : { max: form.controls.receiving.errors['greater_max'].max } }}\n                        </ng-container>\n                        <ng-container *ngSwitchCase=\"form.controls.receiving.hasError('assetHasNotBeenAddedToWallet')\">\n                            {{ form.controls.receiving.errors['assetHasNotBeenAddedToWallet'].errorText | translate }}\n                        </ng-container>\n                    </ng-container>\n                </div>\n            </div>\n\n            <div class=\"form__field fixed\">\n                <label> &nbsp; </label>\n                <ng-select\n                    [bindValue]=\"'asset_id'\"\n                    [clearable]=\"false\"\n                    [items]=\"receivingAssetsInfo$ | async\"\n                    [searchable]=\"false\"\n                    class=\"custom-select with-circle\"\n                    formControlName=\"asset_id\"\n                >\n                    <ng-template let-item=\"item\" ng-label-tmp ng-option-tmp>\n                        <div [innerHTML]=\"item | getLogoByAssetInfo\" class=\"token-logo\"></div>\n                        {{ item.full_name || '---' }}\n                    </ng-template>\n                </ng-select>\n                <div\n                    *ngIf=\"\n                        form.controls.receiving.controls.asset_id.invalid &&\n                        (form.controls.receiving.controls.asset_id.dirty ||\n                            form.controls.receiving.controls.asset_id.touched ||\n                            form.touched)\n                    \"\n                    class=\"error\"\n                >\n                    <ng-container *ngIf=\"form.controls.receiving.controls.asset_id.hasError('sameAssetsId')\">\n                        {{ 'CREATE_SWAP.FORM.ERRORS.ERROR1' | translate }}\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n        <!-- /Receiving -->\n\n        <!-- Receiving Address -->\n        <div\n            *ngIf=\"{\n                items: addressItems$ | async,\n                loading: loadingAddressItems$ | async,\n                lowerCaseDisabled: lowerCaseDisabled$ | async\n            } as vm\"\n            class=\"form__field fixed\"\n        >\n            <label for=\"address\">\n                {{ 'CREATE_SWAP.FORM.LABELS.LABEL3' | translate }}\n                <span class=\"color-red\">*</span>\n            </label>\n\n            <input\n                (blur)=\"updateReceiverAddressErrorMessage()\"\n                (contextmenu)=\"variablesService.onContextMenu($event)\"\n                (paste)=\"pasteListenReceiverAddressField($event)\"\n                [lowerCaseDisabled]=\"vm.lowerCaseDisabled\"\n                [matAutocomplete]=\"auto\"\n                [placeholder]=\"'PLACEHOLDERS.ADDRESS_PLACEHOLDER' | translate\"\n                class=\"form__field--input\"\n                formControlName=\"receiverAddress\"\n                id=\"address\"\n                lowerCase\n                matAutocompletePosition=\"auto\"\n                type=\"text\"\n            />\n\n            <mat-autocomplete (opened)=\"openAutocomplete()\" #auto=\"matAutocomplete\" class=\"zano-autocomplete-panel\">\n                <ng-container *ngIf=\"!variablesService.is_remote_node\">\n                    <mat-option *ngIf=\"vm.loading\" class=\"loading\" disabled>\n                        <zano-loader class=\"mx-auto\" style=\"display: block; width: fit-content\"></zano-loader>\n                    </mat-option>\n\n                    <mat-option\n                        *ngIf=\"form.controls.receiverAddress.value[0] === '@' && vm.items?.length === 0 && !vm.loading\"\n                        disabled>\n                        <span class=\"pl-1\"> Not found aliases </span>\n                    </mat-option>\n                </ng-container>\n\n                <ng-container *ngIf=\"!vm.loading\">\n                    <cdk-virtual-scroll-viewport [style.height.px]=\"5 * 40\" itemSize=\"40\">\n                        <mat-option *cdkVirtualFor=\"let item of vm.items; trackBy: trackByFn\" [value]=\"item\">\n                            <!-- Alias -->\n                            <ng-container *ngIf=\"item.startsWith('@'); else itemAddressTemplate\">\n                                <div\n                                    [ngClass]=\"{\n                                    available: item.length >= 1 && item.length <= 6,\n                                    'pl-1': item.length > 6\n                                }\"\n                                    class=\"alias-container\"\n                                >\n                                    <div class=\"alias\">\n                                        {{ item }}\n                                    </div>\n                                </div>\n                            </ng-container>\n\n                            <!-- Address -->\n                            <ng-template #itemAddressTemplate>\n                                <span class=\"pl-1\">{{ item | zanoShortString }}</span>\n                            </ng-template>\n                        </mat-option>\n                    </cdk-virtual-scroll-viewport>\n                </ng-container>\n            </mat-autocomplete>\n\n            <div *ngIf=\"isVisibleErrorByControl(form.controls.receiverAddress)\" class=\"error\">\n                {{ errorMessages['receiverAddress'] | translate }}\n            </div>\n\n            <div *ngIf=\"aliasAddress\" class=\"info text-ellipsis\">\n                <span>{{ aliasAddress | zanoShortString }}</span>\n            </div>\n        </div>\n        <!-- /Address -->\n\n        <div class=\"actions\">\n            <button [disabled]=\"form.invalid || (loading$ | async)\" class=\"btn primary big w-100\" type=\"submit\">\n                <ng-container *ngIf=\"!(loading$ | async)\">{{ 'CREATE_SWAP.FORM.BUTTONS.BUTTON1' | translate }}\n                </ng-container>\n                <zano-loader *ngIf=\"loading$ | async\" [type]=\"'circle'\"></zano-loader>\n            </button>\n            <a class=\"btn outline big w-100\"\n               routerLink=\"/wallet/swap\">{{ 'CREATE_SWAP.FORM.BUTTONS.BUTTON2' | translate }}</a>\n        </div>\n\n        <div *ngIf=\"errorRpc\" class=\"error mt-2\">\n            {{ 'ERRORS.INVALID_PROPOSAL' | translate }}\n        </div>\n    </form>\n</div>\n","import { Component, inject, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BreadcrumbsComponent } from '@parts/components/breadcrumbs/breadcrumbs.component';\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\nimport { RouterLinkWithHref } from '@angular/router';\nimport { InputValidateModule } from '@parts/directives';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { BackendService } from '@api/services/backend.service';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { IDeactivateComponent } from '@parts/interfaces/deactivete-component.interface';\nimport { Observable } from 'rxjs';\nimport { ConfirmModalComponent, ConfirmModalData } from '@parts/modals/confirm-modal/confirm-modal.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-swap-proposal-hex',\n    standalone: true,\n    imports: [\n        CommonModule,\n        BreadcrumbsComponent,\n        RouterLinkWithHref,\n        InputValidateModule,\n        TranslateModule,\n        ReactiveFormsModule,\n        MatIconModule,\n    ],\n    templateUrl: './swap-proposal-hex.component.html',\n    styleUrls: ['./swap-proposal-hex.component.scss'],\n})\nexport class SwapProposalHexComponent implements OnInit, IDeactivateComponent {\n    breadcrumbItems: BreadcrumbItems = [\n        {\n            routerLink: '/wallet/swap',\n            title: 'SWAP_PROPOSAL_HEX.BREADCRUMBS.ITEM1',\n        },\n        {\n            title: 'SWAP_PROPOSAL_HEX.BREADCRUMBS.ITEM2',\n        },\n    ];\n\n    copyAnimation = false;\n\n    copyAnimationTimeout: any;\n\n    fb = inject(FormBuilder);\n\n    form = this.fb.group({\n        hex_raw_proposal: this.fb.control('', [Validators.required]),\n    });\n\n    private readonly backendService: BackendService = inject(BackendService);\n\n    private readonly _matDialog: MatDialog = inject(MatDialog);\n\n    ngOnInit(): void {\n        this.setSwapProposalHexFromHistoryState();\n    }\n\n    copy(): void {\n        const { hex_raw_proposal } = this.form.getRawValue();\n        this.backendService.setClipboard(hex_raw_proposal);\n        this.copyAnimation = true;\n        this.copyAnimationTimeout = setTimeout(() => {\n            this.copyAnimation = false;\n            clearTimeout(this.copyAnimationTimeout);\n        }, 2000);\n    }\n\n    canExit(): Observable<boolean> | Promise<boolean> | boolean {\n        const config: MatDialogConfig<ConfirmModalData> = {\n            disableClose: true,\n            data: {\n                title: 'SWAP_PROPOSAL_HEX.MODALS.CONFIRM_MODAL.TITLE',\n                message: 'SWAP_PROPOSAL_HEX.MODALS.CONFIRM_MODAL.MESSAGE',\n                buttons: {\n                    submit: 'SWAP_PROPOSAL_HEX.MODALS.CONFIRM_MODAL.BUTTONS.SUBMIT',\n                    close: 'SWAP_PROPOSAL_HEX.MODALS.CONFIRM_MODAL.BUTTONS.CLOSE',\n                },\n            },\n        };\n        const dialogRef = this._matDialog.open<ConfirmModalComponent, ConfirmModalData, boolean>(ConfirmModalComponent, config);\n        return dialogRef.afterClosed();\n    }\n\n    private setSwapProposalHexFromHistoryState(): void {\n        const historyState = history.state || {};\n        const hex_raw_proposal = historyState['hex_raw_proposal'];\n        if (hex_raw_proposal) {\n            this.form.controls.hex_raw_proposal.patchValue(hex_raw_proposal, { emitEvent: false });\n        }\n    }\n}\n","<div class=\"container scrolled-content\">\n    <app-breadcrumbs [items]=\"breadcrumbItems\" class=\"mb-2\"></app-breadcrumbs>\n\n    <form [formGroup]=\"form\" class=\"form\">\n        <div class=\"form__field textarea\">\n            <label for=\"swap-proposal-hex\">\n                {{ 'SWAP_PROPOSAL_HEX.FORM.LABELS.LABEL1' | translate }}\n            </label>\n            <textarea\n                [placeholder]=\"'SWAP_PROPOSAL_HEX.FORM.PLACEHOLDERS.PLACEHOLDER1' | translate\"\n                formControlName=\"hex_raw_proposal\"\n                id=\"swap-proposal-hex\"\n                readonly\n            ></textarea>\n        </div>\n\n        <div class=\"actions\">\n            <button (click)=\"copy()\" [disabled]=\"form.invalid\" class=\"btn primary big w-100\" type=\"button\">\n                <mat-icon class=\"mr-1\" [svgIcon]=\"copyAnimation ? 'zano-check' : 'zano-copy'\"></mat-icon>\n                {{ 'SWAP_PROPOSAL_HEX.FORM.BUTTONS.BUTTON1' | translate }}\n            </button>\n\n            <a class=\"btn outline big w-100\" routerLink=\"/wallet/swap\">\n                {{ 'SWAP_PROPOSAL_HEX.FORM.BUTTONS.BUTTON2' | translate }}\n            </a>\n        </div>\n    </form>\n</div>\n","import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexModule } from '@angular/flex-layout';\nimport { RouterLinkWithHref } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-swap',\n    standalone: true,\n    imports: [CommonModule, FlexModule, RouterLinkWithHref, TranslateModule],\n    templateUrl: './swap.component.html',\n    styleUrls: ['./swap.component.scss'],\n})\nexport class SwapComponent {}\n","<div class=\"container scrolled-content\">\n    <div class=\"actions\">\n        <a class=\"btn primary big w-100\" routerLink=\"/wallet/create-swap\">{{ 'SWAP.BUTTONS.BUTTON1' | translate }}</a>\n        <a class=\"btn primary big w-100\" routerLink=\"/wallet/confirm-swap\">{{ 'SWAP.BUTTONS.BUTTON2' | translate }}</a>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { CanDeactivate, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { IDeactivateComponent } from '@parts/interfaces/deactivete-component.interface';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SwapProposalHexGuard implements CanDeactivate<IDeactivateComponent> {\n    canDeactivate(component: IDeactivateComponent): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n        return component.canExit ? component.canExit() : true;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { WalletComponent } from './wallet/wallet.component';\nimport { paths, pathsChildrenWallet } from '../paths';\nimport { SendComponent } from './tabs/send/send.component';\nimport { ReceiveComponent } from './tabs/receive/receive.component';\nimport { HistoryComponent } from './tabs/history/history.component';\nimport { StakingComponent } from './tabs/staking/staking.component';\nimport { AssetsComponent } from './tabs/assets/assets.component';\nimport { WithSidebarLayoutComponent } from '../../layouts/with-sidebar-layout/with-sidebar-layout.component';\nimport { ConfirmSwapComponent } from './tabs/swap/pages/confirm-swap/confirm-swap.component';\nimport { SwapComponent } from './tabs/swap/pages/swap/swap.component';\nimport { CreateSwapComponent } from './tabs/swap/pages/create-swap/create-swap.component';\nimport { SwapProposalHexComponent } from './tabs/swap/pages/swap-proposal-hex/swap-proposal-hex.component';\nimport { SwapProposalHexGuard } from './tabs/swap/parts/guards/swap-proposal-hex.guard';\nimport { CustomAssetsComponent } from './tabs/custom-assets/pages/custom-assets/custom-assets.component';\nimport { CreateNewAssetComponent } from './tabs/custom-assets/pages/create-new-asset/create-new-asset.component';\n\nconst routes: Routes = [\n    {\n        path: paths.wallet,\n        component: WithSidebarLayoutComponent,\n        children: [\n            {\n                path: '',\n                component: WalletComponent,\n                children: [\n                    {\n                        path: pathsChildrenWallet.assets,\n                        component: AssetsComponent,\n                    },\n                    {\n                        path: pathsChildrenWallet.send,\n                        component: SendComponent,\n                    },\n                    {\n                        path: pathsChildrenWallet.receive,\n                        component: ReceiveComponent,\n                    },\n                    {\n                        path: pathsChildrenWallet.history,\n                        component: HistoryComponent,\n                    },\n                    {\n                        path: pathsChildrenWallet.staking,\n                        component: StakingComponent,\n                    },\n                    {\n                        path: 'swap',\n                        component: SwapComponent,\n                    },\n                    {\n                        path: 'create-swap',\n                        component: CreateSwapComponent,\n                    },\n                    {\n                        path: 'swap-proposal-hex',\n                        component: SwapProposalHexComponent,\n                        canDeactivate: [SwapProposalHexGuard],\n                    },\n                    {\n                        path: 'confirm-swap',\n                        component: ConfirmSwapComponent,\n                    },\n                    {\n                        path: 'custom-assets',\n                        component: CustomAssetsComponent,\n                    },\n                    {\n                        path: 'create-new-asset',\n                        component: CreateNewAssetComponent,\n                    },\n                    {\n                        path: '',\n                        redirectTo: pathsChildrenWallet.assets,\n                        pathMatch: 'full',\n                    },\n                ],\n            },\n        ],\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class WalletRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WalletRoutingModule } from './wallet-routing.module';\nimport { AssetsComponent } from './tabs/assets/assets.component';\nimport { WalletComponent } from './wallet/wallet.component';\nimport { FlexLayoutModule, FlexModule } from '@angular/flex-layout';\nimport { TooltipModule } from '@parts/directives/tooltip/tooltip.module';\nimport {\n    ContractStatusMessagesPipeModule,\n    HistoryTypeMessagesPipeModule,\n    IntToMoneyPipeModule,\n    IsAvailableAliasNamePipeModule,\n    ShortStringPipe,\n} from '@parts/pipes';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ConfirmModalModule } from '@parts/modals/confirm-modal/confirm-modal.module';\nimport { ExportHistoryModalModule } from './wallet/dialogs/export-history-modal/export-history-modal.module';\nimport { WalletDetailsComponent } from '../wallet-details/wallet-details.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { DefaultImgModule, InputValidateModule, LowerCaseDirective } from '@parts/directives';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { HistoryComponent } from './tabs/history/history.component';\nimport { StakingComponent } from './tabs/staking/staking.component';\nimport { ChartModule } from 'angular-highcharts';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { ReceiveComponent } from './tabs/receive/receive.component';\nimport { DialogModule } from '@angular/cdk/dialog';\nimport { SendComponent } from './tabs/send/send.component';\nimport { ExportImportComponent } from '../export-import/export-import.component';\nimport { CheckboxComponent } from '@parts/components/checkbox.component';\nimport { CopyButtonComponent } from '@parts/components/copy-button.component';\nimport { StakingSwitchComponent } from '@parts/components/staking-switch.component';\nimport { SwitchComponent } from '@parts/components/switch.component';\nimport { BreadcrumbsComponent } from '@parts/components/breadcrumbs/breadcrumbs.component';\nimport { BackButtonComponent } from '@parts/components/back-button/back-button.component';\nimport { WalletModalsModule } from './tabs/send/modals/wallet-modals.module';\nimport { GetAssetInfoPipe } from '@parts/pipes/get-asset-info.pipe';\nimport { MigrateWalletToZarcanumComponent } from './wallet/dialogs/migrate-wallet-to-zarcanum/migrate-wallet-to-zarcanum.component';\nimport { SuccessSweepBareOutsComponent } from './wallet/dialogs/success-sweep-bare-outs/success-sweep-bare-outs.component';\nimport { GetAmountItemsPipe } from '@parts/pipes/get-amount-items.pipe';\nimport { TransactionStatusComponent } from '@parts/components/transaction-status/transaction-status.component';\nimport { IsVisibleFeePipe } from '@parts/pipes/is-visible-fee.pipe';\nimport { CustomAssetsComponent } from './tabs/custom-assets/pages/custom-assets/custom-assets.component';\nimport { CreateNewAssetComponent } from './tabs/custom-assets/pages/create-new-asset/create-new-asset.component';\nimport { ConfirmCreateCustomAssetComponent } from './tabs/custom-assets/modals/confirm-create-custom-asset/confirm-create-custom-asset.component';\nimport { UpdateCustomAssetComponent } from './tabs/custom-assets/modals/update-custom-asset/update-custom-asset.component';\nimport { EmitCustomAssetComponent } from './tabs/custom-assets/modals/emit-custom-asset/emit-custom-asset.component';\nimport { BurnCustomAssetComponent } from './tabs/custom-assets/modals/burn-custom-asset/burn-custom-asset.component';\nimport { TransactionDetailsForCustomAssetsComponent } from './tabs/custom-assets/modals/transaction-details-for-custom-assets/transaction-details-for-custom-assets.component';\nimport { TransactionDetailsComponent } from '@parts/components/transaction-details.component';\nimport { VisibilityBalanceDirective } from '@parts/directives/visibility-balance.directive';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { LoaderComponent } from '@parts/components/loader.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { AssetDetailsComponent } from '@parts/modals/asset-details/asset-details.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { GetLogoByAssetInfoPipe } from '@parts/pipes/get-logo-by-asset-info.pipe';\nimport { ShieldTestnetComponent } from '@parts/components/shield-testnet/shield-testnet.component';\nimport { VisibilityBalanceButtonComponent } from '@parts/components/visibility-balance-button/visibility-balance-button.component';\nimport { MigrateAlertComponent } from '@parts/components/migrate-alert/migrate-alert.component';\nimport { AliasControlsComponent } from '@parts/components/alias-controls/alias-controls.component';\nimport { IsVisibleControlErrorPipe } from '@parts/pipes/is-visible-control-error.pipe';\nimport { WrapInformationComponent } from './tabs/send/components/wrap-information/wrap-information.component';\nimport { FeeFieldComponent } from './tabs/send/components/fee-field/fee-field.component';\nimport { MixinFieldComponent } from './tabs/send/components/mixin-field/mixin-field.component';\nimport { AssetFieldComponent } from './tabs/send/components/asset-field/asset-field.component';\nimport { CommentFieldComponent } from './tabs/send/components/comment-field/comment-field.component';\nimport { AddressFieldComponent } from './tabs/send/components/address-field/address-field.component';\nimport { AmountFieldComponent } from './tabs/send/components/amount-field/amount-field.component';\nimport { AddAnotherDestinationButtonComponent } from './tabs/send/components/add-another-destination-button/add-another-destination-button.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatMenuModule } from '@angular/material/menu';\n\n@NgModule({\n    declarations: [\n        WalletComponent,\n        AssetsComponent,\n        WalletDetailsComponent,\n        HistoryComponent,\n        StakingComponent,\n        ReceiveComponent,\n        ExportImportComponent,\n        SendComponent,\n        MigrateWalletToZarcanumComponent,\n        SuccessSweepBareOutsComponent,\n        CustomAssetsComponent,\n        CreateNewAssetComponent,\n        ConfirmCreateCustomAssetComponent,\n        UpdateCustomAssetComponent,\n        EmitCustomAssetComponent,\n        BurnCustomAssetComponent,\n        TransactionDetailsForCustomAssetsComponent,\n    ],\n    imports: [\n        CommonModule,\n        WalletRoutingModule,\n        FlexModule,\n        TooltipModule,\n        ShortStringPipe,\n        TranslateModule,\n        IsAvailableAliasNamePipeModule,\n        ConfirmModalModule,\n        ExportHistoryModalModule,\n        ReactiveFormsModule,\n        OverlayModule,\n        DefaultImgModule,\n        NgxPaginationModule,\n        SwitchComponent,\n        ChartModule,\n        NgSelectModule,\n        FormsModule,\n        FlexLayoutModule,\n        StakingSwitchComponent,\n        DialogModule,\n        IntToMoneyPipeModule,\n        ContractStatusMessagesPipeModule,\n        HistoryTypeMessagesPipeModule,\n        InputValidateModule,\n        CheckboxComponent,\n        AssetDetailsComponent,\n        CopyButtonComponent,\n        LowerCaseDirective,\n        BreadcrumbsComponent,\n        BackButtonComponent,\n        WalletModalsModule,\n        GetAssetInfoPipe,\n        GetAmountItemsPipe,\n        TransactionStatusComponent,\n        IsVisibleFeePipe,\n        TransactionDetailsComponent,\n        VisibilityBalanceDirective,\n        MatAutocompleteModule,\n        LoaderComponent,\n        MatInputModule,\n        MatIconModule,\n        MatDialogModule,\n        GetLogoByAssetInfoPipe,\n        ShieldTestnetComponent,\n        VisibilityBalanceButtonComponent,\n        MigrateAlertComponent,\n        AliasControlsComponent,\n        IsVisibleControlErrorPipe,\n        WrapInformationComponent,\n        FeeFieldComponent,\n        MixinFieldComponent,\n        AssetFieldComponent,\n        CommentFieldComponent,\n        AddressFieldComponent,\n        AmountFieldComponent,\n        AddAnotherDestinationButtonComponent,\n        MatTooltipModule,\n        MatMenuModule,\n    ],\n})\nexport class WalletModule {}\n","import { Component, inject, NgZone } from '@angular/core';\nimport { FormControl, NonNullableFormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { ZanoValidators } from '@parts/utils/zano-validators';\nimport { BackendService } from '@api/services/backend.service';\nimport { AssetBalance, AssetInfo, ParamsAddCustomAssetId, ResponseAddCustomAssetId } from '@api/models/assets.model';\nimport { WalletsService } from '@parts/services/wallets.service';\nimport { wrongAssetId } from '@parts/utils/zano-errors';\nimport { CommonModule } from '@angular/common';\nimport { FlexModule } from '@angular/flex-layout';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { LoaderComponent } from '@parts/components/loader.component';\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-add-custom-token',\n    standalone: true,\n    templateUrl: './add-custom-token.component.html',\n    styleUrls: ['./add-custom-token.component.scss'],\n    imports: [CommonModule, FlexModule, TranslateModule, ReactiveFormsModule, LoaderComponent, MatDialogModule],\n})\nexport class AddCustomTokenComponent {\n    loading = false;\n\n    private fb: NonNullableFormBuilder = inject(NonNullableFormBuilder);\n\n    formGroup = this.fb.group<{ asset_id: FormControl<string> }>({\n        asset_id: this.fb.control('', Validators.compose([Validators.required, ZanoValidators.hash, Validators.maxLength(64)])),\n    });\n\n    public variablesService: VariablesService = inject(VariablesService);\n\n    public backendService: BackendService = inject(BackendService);\n\n    private walletsService: WalletsService = inject(WalletsService);\n\n    private ngZone: NgZone = inject(NgZone);\n\n    private matDialogRef: MatDialogRef<AssetBalance | undefined> = inject(MatDialogRef);\n\n    beforeSubmit(): void {\n        if (this.formGroup.invalid) {\n            this.formGroup.markAsTouched();\n            this.formGroup.updateValueAndValidity();\n            return;\n        }\n\n        this.submit();\n    }\n\n    submit(): void {\n        this.loading = true;\n        const { asset_id } = this.formGroup.getRawValue();\n        const { current_wallet, verifiedAssetIdWhitelist } = this.variablesService;\n        const {\n            wallet_id,\n            verificationAssetsInfoWhitelist$: { value: verificationAssetsInfoWhitelist },\n        } = current_wallet;\n        const params: ParamsAddCustomAssetId = {\n            asset_id,\n            wallet_id,\n        };\n\n        const isVerifiedAsset: boolean = verifiedAssetIdWhitelist.includes(asset_id);\n\n        if (isVerifiedAsset) {\n            current_wallet.removeAssetFromLocalBlacklistVerifiedAssets(asset_id);\n            const assetInfo: AssetInfo | undefined = verificationAssetsInfoWhitelist.find(\n                (v: AssetInfo): boolean => v.asset_id === asset_id\n            );\n\n            if (!assetInfo) {\n                this.matDialogRef.close();\n                return;\n            }\n\n            const asset: AssetBalance = {\n                asset_info: {\n                    ...assetInfo,\n                    asset_id,\n                },\n                awaiting_in: 0,\n                awaiting_out: 0,\n                total: 0,\n                unlocked: 0,\n            };\n\n            this.walletsService.updateWalletInfo(current_wallet);\n            this.matDialogRef.close(asset);\n        } else {\n            this.backendService.addCustomAssetId(params, (status: boolean, { asset_descriptor }: ResponseAddCustomAssetId) => {\n                this.ngZone.run(() => {\n                    if (status) {\n                        const asset: AssetBalance = {\n                            asset_info: {\n                                ...asset_descriptor,\n                                asset_id,\n                            },\n                            awaiting_in: 0,\n                            awaiting_out: 0,\n                            total: 0,\n                            unlocked: 0,\n                        };\n                        this.walletsService.updateWalletInfo(current_wallet);\n                        this.matDialogRef.close(asset);\n                    } else {\n                        this.formGroup.controls.asset_id.setErrors({\n                            wrongAssetId,\n                        });\n                        this.loading = false;\n                    }\n                });\n            });\n        }\n    }\n}\n","<form (ngSubmit)=\"beforeSubmit()\" [formGroup]=\"formGroup\">\n    <h3 mat-dialog-title>\n        {{ 'WALLET.MODAL_WHITELIST_ASSET.TITLE' | translate }}\n    </h3>\n\n    <mat-dialog-content>\n        <div class=\"form__field mb-0\">\n            <label for=\"asset_id\">{{ 'WALLET.MODAL_WHITELIST_ASSET.FIELD_TITLE' | translate }}</label>\n            <input\n                (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                class=\"form__field--input\"\n                formControlName=\"asset_id\"\n                id=\"asset_id\"\n                maxlength=\"64\"\n                name=\"asset_id\"\n                placeholder=\"Enter Asset ID\"\n                type=\"text\"\n            />\n            <ng-container *ngIf=\"formGroup.get('asset_id').touched\">\n                <div *ngIf=\"formGroup.get('asset_id').hasError('invalidHash')\" class=\"error\">\n                    {{ 'WALLET.MODAL_WHITELIST_ASSET.FORM_ERRORS.ERROR1' | translate }}\n                </div>\n                <div *ngIf=\"formGroup.get('asset_id').hasError('wrongAssetId')\" class=\"error\">\n                    {{ formGroup.get('asset_id').errors['wrongAssetId'].errorText | translate }}\n                </div>\n            </ng-container>\n        </div>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <div fxFlex=\"1 1 auto\" fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\n            <button class=\"outline big w-100\" mat-dialog-close type=\"button\">\n                {{ 'MODALS.CANCEL' | translate }}\n            </button>\n            <button [disabled]=\"formGroup.invalid || loading\" class=\"primary big w-100\" type=\"submit\">\n                <ng-container *ngIf=\"!loading; else loadingTemplate\">\n                    {{ 'MODALS.ADD_TOKEN' | translate }}\n                </ng-container>\n                <ng-template #loadingTemplate>\n                    <zano-loader></zano-loader>\n                </ng-template>\n            </button>\n        </div>\n    </mat-dialog-actions>\n</form>\n","import { Component, inject } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BackendService } from '@api/services/backend.service';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-export-history-modal',\n    templateUrl: './export-history-modal.component.html',\n    styleUrls: ['./export-history-modal.component.scss'],\n})\nexport class ExportHistoryModalComponent {\n    posFilterIsOn = true;\n\n    exportData = {\n        wallet_id: 0,\n        include_pos_transactions: false,\n        path: 'C:\\\\some_file.txt',\n        format: 'json',\n    };\n\n    exportFormats = [\n        {\n            format: 'json',\n            formatName: 'JSON',\n        },\n        {\n            format: 'text',\n            formatName: 'Text',\n        },\n        {\n            format: 'csv',\n            formatName: 'CSV',\n        },\n    ];\n\n    currentFormat: string = this.exportFormats[0].format;\n\n    private backend: BackendService = inject(BackendService);\n\n    public variablesService: VariablesService = inject(VariablesService);\n\n    private translate: TranslateService = inject(TranslateService);\n\n    private matDialogRef: MatDialogRef<ExportHistoryModalComponent> = inject(MatDialogRef);\n\n    confirmExport(): void {\n        this.exportData.format = `${this.currentFormat}`;\n        this.exportData.wallet_id = this.variablesService.current_wallet.wallet_id;\n        this.exportData.include_pos_transactions = this.posFilterIsOn;\n\n        this.backend.saveFileDialog(\n            this.translate.instant('EXPORT_HISTORY.SAVED_FILE'),\n            `${this.exportData.format}`,\n            this.variablesService.settings.default_path,\n            (file_status, file_data) => {\n                if (this.exportData.format === 'text') {\n                    this.exportData.path = file_data.path + '.txt';\n                } else {\n                    this.exportData.path = file_data.path + `.${this.exportData.format}`;\n                }\n                if (file_status) {\n                    this.backend.exportWalletHistory(JSON.stringify(this.exportData));\n                    this.matDialogRef.close();\n                }\n            }\n        );\n    }\n}\n","<form>\n    <h4 mat-dialog-title>\n        {{ 'EXPORT_HISTORY.TITLE' | translate }}\n    </h4>\n\n    <mat-dialog-content style=\"overflow: visible\">\n        <div class=\"form__field\">\n            <label>Format:</label>\n            <ng-select\n                [(ngModel)]=\"currentFormat\"\n                [clearable]=\"false\"\n                [items]=\"exportFormats\"\n                [searchable]=\"false\"\n                bindLabel=\"formatName\"\n                bindValue=\"format\"\n                name=\"format\"\n            >\n                <ng-template let-item=\"item\" ng-label-tmp>\n                    {{ item.formatName }}\n                </ng-template>\n                <ng-template let-index=\"index\" let-item=\"item\" ng-option-tmp>\n                    {{ item.formatName }}\n                </ng-template>\n            </ng-select>\n        </div>\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n            <span class=\"color-primary mr-1\">{{ 'EXPORT_HISTORY.FILTER' | translate }}</span>\n            <app-switch (emitChange)=\"posFilterIsOn = !posFilterIsOn\" [value]=\"posFilterIsOn\"></app-switch>\n        </div>\n    </mat-dialog-content>\n\n    <mat-dialog-actions>\n        <div fxFlex=\"1 1 auto\" fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\n            <button (click)=\"confirmExport()\" class=\"primary big w-100\" type=\"submit\">\n                {{ 'EXPORT_HISTORY.EXPORT' | translate }}\n            </button>\n            <button class=\"outline big w-100\" mat-dialog-close type=\"button\">\n                {{ 'EXPORT_HISTORY.CANCEL' | translate }}\n            </button>\n        </div>\n    </mat-dialog-actions>\n</form>\n","import { NgModule } from '@angular/core';\nimport { ExportHistoryModalComponent } from './export-history-modal.component';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FlexModule } from '@angular/flex-layout';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { FormsModule } from '@angular/forms';\nimport { CheckboxComponent } from '@parts/components/checkbox.component';\nimport { SwitchComponent } from '@parts/components/switch.component';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n@NgModule({\n    declarations: [ExportHistoryModalComponent],\n    exports: [ExportHistoryModalComponent],\n    imports: [CommonModule, TranslateModule, FlexModule, SwitchComponent, CheckboxComponent, NgSelectModule, FormsModule, MatDialogModule],\n})\nexport class ExportHistoryModalModule {}\n","import { Component, inject, NgZone } from '@angular/core';\nimport { GetBareOutsStats, SweepBareOuts } from '@api/models/rpc.models';\nimport { BackendService } from '@api/services/backend.service';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { ParamsCallRpc } from '@api/models/call_rpc.model';\nimport { ModalService } from '@parts/services/modal.service';\nimport { SuccessSweepBareOutsComponent } from '../success-sweep-bare-outs/success-sweep-bare-outs.component';\nimport { ZARCANUM_MIGRATION } from '@parts/data/constants';\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogConfig, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-migrate-wallet-to-zarcanum',\n    templateUrl: './migrate-wallet-to-zarcanum.component.html',\n    styleUrls: ['./migrate-wallet-to-zarcanum.component.scss'],\n})\nexport class MigrateWalletToZarcanumComponent {\n    readonly data: GetBareOutsStats = inject<GetBareOutsStats>(MAT_DIALOG_DATA);\n\n    private readonly _matDialog: MatDialog = inject(MatDialog);\n\n    private readonly _matDialogRef: MatDialogRef<MigrateWalletToZarcanumComponent> = inject(MatDialogRef);\n\n    private readonly _backendService: BackendService = inject(BackendService);\n\n    private readonly _variableService: VariablesService = inject(VariablesService);\n\n    private readonly _modalService: ModalService = inject(ModalService);\n\n    private readonly _ngZone: NgZone = inject(NgZone);\n\n    migrate(): void {\n        const {\n            current_wallet: { wallet_id },\n        } = this._variableService;\n\n        const params: ParamsCallRpc = { id: 0, jsonrpc: '2.0', method: 'sweep_bare_outs', params: {} };\n        this._backendService.call_wallet_rpc([wallet_id, params], (status, response_data) => {\n            this._ngZone.run(() => {\n                if (response_data?.result) {\n                    const data = response_data.result;\n\n                    const config: MatDialogConfig<SweepBareOuts> = {\n                        data,\n                    };\n\n                    this._matDialog.open(SuccessSweepBareOutsComponent, config);\n                } else {\n                    const message = response_data.error;\n                    this._modalService.prepareModal('error', message);\n                }\n\n                this._matDialogRef.close();\n            });\n        });\n    }\n\n    openZarcanumMigration(): void {\n        this._backendService.openUrlInBrowser(ZARCANUM_MIGRATION);\n    }\n}\n","<h3 mat-dialog-title>\n    {{ 'MIGRATE_WALLET_TO_ZARCANUM.TITLE' | translate }}\n</h3>\n\n<mat-dialog-content>\n    <div class=\"details\">\n        <p class=\"mb-2 mt-2\">\n            {{\n                'MIGRATE_WALLET_TO_ZARCANUM.TEXT1'\n                    | translate\n                        : {\n                              total_bare_outs: data.total_bare_outs,\n                              total_amount: data.total_amount | intToMoney\n                          }\n            }}\n        </p>\n        <p (click)=\"openZarcanumMigration()\" class=\"text-align-center cursor-pointer mb-2\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n            <mat-icon class=\"mr-0_5\" svgIcon=\"zano-question\"></mat-icon>\n            <span class=\"color-primary\">{{ 'MIGRATE_WALLET_TO_ZARCANUM.LINK1' | translate }}</span>\n        </p>\n        <hr class=\"mb-2\" />\n        <p class=\"mb-2\">\n            {{\n                'MIGRATE_WALLET_TO_ZARCANUM.TEXT2'\n                    | translate\n                        : {\n                              txs_count: data.txs_count,\n                              expected_total_fee: data.expected_total_fee | intToMoney\n                          }\n            }}\n        </p>\n    </div>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n    <div fxFlex=\"1 1 auto\" fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\n        <button (click)=\"migrate()\" class=\"primary big w-100\" type=\"button\">\n            {{ 'MIGRATE_WALLET_TO_ZARCANUM.BUTTON1' | translate }}\n        </button>\n    </div>\n</mat-dialog-actions>\n","import { Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TooltipModule } from '@parts/directives';\nimport { RouterLink } from '@angular/router';\nimport { VariablesService } from '@parts/services/variables.service';\n\n@Component({\n    selector: 'zano-my-aliases-dialog',\n    standalone: true,\n    imports: [CommonModule, TranslateModule, MatDialogModule, MatIconModule, TooltipModule, RouterLink],\n    templateUrl: './my-aliases-dialog.component.html',\n    styleUrls: ['./my-aliases-dialog.component.scss'],\n})\nexport class MyAliasesDialogComponent {\n    variablesService: VariablesService = inject(VariablesService);\n\n    get isShowAliasButtons(): boolean {\n        const { current_wallet } = this.variablesService;\n\n        if (!current_wallet) {\n            return false;\n        }\n\n        const { is_watch_only, alias_available } = current_wallet;\n\n        return !is_watch_only && alias_available;\n    }\n}\n","<h3 mat-dialog-title>\n    {{ 'MY_ALIASES_DIALOG.TITLE' | translate }}\n</h3>\n\n<mat-dialog-content>\n    <div class=\"my-aliases-list\">\n        <ng-container *ngFor=\"let alias_info of variablesService.current_wallet.alias_info_list\">\n            <div class=\"my-aliases-list-item\">\n                <div class=\"alias\">\n                    <div class=\"name\">@{{ alias_info.alias }}</div>\n                    <ng-container *ngIf=\"alias_info.alias.length >= 1 && alias_info.alias.length <= 5\">\n                        <mat-icon svgIcon=\"zano-crown\"></mat-icon>\n                    </ng-container>\n                </div>\n\n                <ng-container *ngIf=\"isShowAliasButtons\">\n                    <div class=\"controls\">\n                        <button\n                            [delay]=\"500\"\n                            [routerLink]=\"['/edit-alias']\"\n                            [state]=\"{ alias_info: alias_info }\"\n                            [timeDelay]=\"500\"\n                            class=\"btn-icon circle small mr-1\"\n                            matDialogClose\n                            placement=\"bottom-right\"\n                            tooltip=\"{{ 'WALLET.TOOLTIPS.EDIT_ALIAS' | translate }}\"\n                            tooltipClass=\"table-tooltip account-tooltip\"\n                        >\n                            <mat-icon svgIcon=\"zano-edit\"></mat-icon>\n                        </button>\n\n                        <button\n                            [delay]=\"500\"\n                            [routerLink]=\"['/transfer-alias']\"\n                            [state]=\"{ alias_info: alias_info }\"\n                            [timeDelay]=\"500\"\n                            class=\"btn-icon circle small\"\n                            matDialogClose\n                            placement=\"right\"\n                            tooltip=\"{{ 'WALLET.TOOLTIPS.TRANSFER_ALIAS' | translate }}\"\n                            tooltipClass=\"table-tooltip account-tooltip\"\n                        >\n                            <mat-icon svgIcon=\"zano-send\"></mat-icon>\n                        </button>\n                    </div>\n                </ng-container>\n            </div>\n        </ng-container>\n    </div>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n    <button class=\"outline big w-100\" matDialogClose>\n        {{ 'MY_ALIASES_DIALOG.BUTTON1' | translate }}\n    </button>\n</mat-dialog-actions>\n","import { Component, inject } from '@angular/core';\nimport { SweepBareOuts } from '@api/models/rpc.models';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-success-sweep-bare-outs',\n    templateUrl: './success-sweep-bare-outs.component.html',\n    styleUrls: ['./success-sweep-bare-outs.component.scss'],\n})\nexport class SuccessSweepBareOutsComponent {\n    readonly data: SweepBareOuts = inject<SweepBareOuts>(MAT_DIALOG_DATA);\n\n    stateDetails = false;\n\n    toggleDetails(): void {\n        this.stateDetails = !this.stateDetails;\n    }\n}\n","<h3 mat-dialog-title>\n    {{ 'SEND_DETAILS_MODAL.TITLE1' | translate }}\n</h3>\n\n<mat-dialog-content fxLayout=\"column\">\n    <div class=\"status mb-2\" fxFlex=\"0 0 auto\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n        <div class=\"image\">\n            <img alt=\"success\" src=\"assets/icons/aqua/transaction_success.svg\" />\n        </div>\n\n        <p class=\"color-primary mt-2\">\n            {{ 'TOR_LIB_STATE.STATE_SENT_SUCCESS' | translate }}\n        </p>\n    </div>\n\n    <div class=\"details border-radius-0_8-rem overflow-hidden\" fxFlex=\"0 0 auto\" fxLayout=\"column\">\n        <div\n            (click)=\"toggleDetails()\"\n            [ngStyle]=\"{ 'border-radius': stateDetails ? '0.8rem 0.8rem 0 0' : '0.8rem' }\"\n            class=\"header overflow-hidden py-1 px-2 w-100 cursor-pointer\"\n            fxLayout=\"row\"\n            fxLayoutAlign=\"space-between center\"\n        >\n            <p class=\"title text-ellipsis mr-2\">\n                {{ 'SEND_DETAILS_MODAL.TITLE2' | translate }}\n            </p>\n            <button fxLayout=\"row\" fxLayoutAlign=\"center center\">\n                <mat-icon\n                    [ngClass]=\"{\n                        'rotate-180': stateDetails\n                    }\"\n                    svgIcon=\"zano-dropdown-arrow-down\"\n                ></mat-icon>\n            </button>\n        </div>\n        <div\n            [class.px-2]=\"stateDetails\"\n            [class.py-1]=\"stateDetails\"\n            [fxHide]=\"!stateDetails\"\n            [ngStyle]=\"{ 'border-radius': stateDetails ? '0 0 0.8rem 0.8rem ' : '0' }\"\n            class=\"details-wrapper\"\n            fxFlex=\"1 1 auto\"\n            fxLayout=\"row\"\n        >\n            <ul class=\"details-list scrolled-content\">\n                <li class=\"item mb-1\" fxLayout=\"row nowrap\" fxLayoutAlign=\" center\">\n                    <p>\n                        {{\n                            'SUCCESS_SWEEP_BARE_OUTS.DETAILS'\n                                | translate\n                                    : {\n                                          txs_sent: data.txs_sent,\n                                          bare_outs_swept: data.bare_outs_swept,\n                                          amount_swept: data.amount_swept | intToMoney,\n                                          fee_spent: data.fee_spent | intToMoney\n                                      }\n                        }}\n                    </p>\n                </li>\n            </ul>\n        </div>\n    </div>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n    <div fxFlex=\"1 1 auto\">\n        <button class=\"primary big w-100\" mat-dialog-close>\n            {{ 'Ok' | translate }}\n        </button>\n    </div>\n</mat-dialog-actions>\n","import { Component, HostListener, inject, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { BackendService, Commands } from '@api/services/backend.service';\nimport { Observable, Subject, take } from 'rxjs';\nimport { StateKeys, Store, Sync } from '@store/store';\nimport { distinctUntilChanged, filter, map, takeUntil } from 'rxjs/operators';\nimport { ConfirmModalComponent, ConfirmModalData } from '@parts/modals/confirm-modal/confirm-modal.component';\nimport { ExportHistoryModalComponent } from './dialogs/export-history-modal/export-history-modal.component';\nimport { AddCustomTokenComponent } from './dialogs/add-custom-token/add-custom-token.component';\nimport { AssetBalance } from '@api/models/assets.model';\nimport { AssetDetailsComponent } from '@parts/modals/asset-details/asset-details.component';\nimport { WalletsService } from '@parts/services/wallets.service';\nimport { Wallet } from '@api/models/wallet.model';\nimport { NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router, RouterEvent } from '@angular/router';\nimport { BreakpointObserver } from '@angular/cdk/layout';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\n\ninterface Tab {\n    id: string;\n    title: string;\n    icon: string;\n    link: string;\n    disabled: boolean;\n    hidden: boolean;\n    indicator?: boolean;\n}\n\ntype TabNameKeys = 'assets' | 'history' | 'send' | 'receive' | 'swap' | 'staking' | 'custom-assets';\n\nconst objTabs: { [key in TabNameKeys]: Tab } = {\n    assets: {\n        id: 'assets',\n        title: 'WALLET.TABS.ASSETS',\n        icon: 'zano-balance',\n        link: '/assets',\n        disabled: false,\n        hidden: false,\n    },\n    history: {\n        id: 'history',\n        title: 'WALLET.TABS.HISTORY',\n        icon: 'zano-history',\n        link: '/history',\n        disabled: false,\n        hidden: false,\n    },\n    send: {\n        id: 'send',\n        title: 'WALLET.TABS.SEND',\n        icon: 'zano-send',\n        link: '/send',\n        disabled: false,\n        hidden: false,\n    },\n    receive: {\n        id: 'receive',\n        title: 'WALLET.TABS.RECEIVE',\n        icon: 'zano-receive',\n        link: '/receive',\n        disabled: false,\n        hidden: false,\n    },\n    swap: {\n        id: 'swap',\n        title: 'Swap',\n        icon: 'zano-swap',\n        link: '/swap',\n        disabled: false,\n        hidden: true,\n    },\n    // TODO: https://github.com/hyle-team/zano/issues/374\n    // contract: {\n    //     title: 'WALLET.TABS.CONTRACTS',\n    //     icon: 'document',\n    //     link: '/contracts',\n    //     disabled: false,\n    //     hidden: false\n    // },\n    staking: {\n        id: 'staking',\n        title: 'WALLET.TABS.STAKING',\n        icon: 'zano-staking',\n        link: '/staking',\n        indicator: false,\n        disabled: false,\n        hidden: false,\n    },\n    'custom-assets': {\n        id: 'custom-assets',\n        title: 'WALLET.TABS.CONTROL_ASSETS',\n        icon: 'zano-custom-asset',\n        link: '/custom-assets',\n        indicator: false,\n        disabled: false,\n        hidden: false,\n    },\n};\n\n@Component({\n    selector: 'app-wallet',\n    templateUrl: './wallet.component.html',\n    styleUrls: ['./wallet.component.scss'],\n})\nexport class WalletComponent implements OnInit, OnDestroy {\n    settingsButtonInterval;\n\n    private breakpointObserver: BreakpointObserver = inject(BreakpointObserver);\n\n    isViewTabName$: Observable<boolean> = this.breakpointObserver.observe(['(min-width: 1400px)']).pipe(map(({ matches }) => matches));\n\n    settingsButtonDisabled = true;\n\n    walletLoaded = false;\n\n    walletSyncVisible = false;\n\n    tabs: Tab[] = [];\n\n    private destroy$ = new Subject<void>();\n\n    loader = true;\n\n    private readonly _matDialog: MatDialog = inject(MatDialog);\n\n    get isShowMigrateAlert(): boolean {\n        const { current_wallet, daemon_state } = this.variablesService;\n\n        if (!current_wallet) {\n            return false;\n        }\n\n        const { is_auditable, is_watch_only, has_bare_unspent_outputs, loaded } = current_wallet;\n\n        return !is_auditable && !is_watch_only && loaded && daemon_state === 2 && has_bare_unspent_outputs;\n    }\n\n    constructor(\n        private backend: BackendService,\n        public variablesService: VariablesService,\n        private ngZone: NgZone,\n        private store: Store,\n        private walletsService: WalletsService,\n        private router: Router\n    ) {\n        if (!this.variablesService.current_wallet && this.variablesService.wallets.length > 0) {\n            this.variablesService.setCurrentWallet(0);\n        }\n        this.walletLoaded = this.variablesService.current_wallet.loaded;\n\n        this.variablesService.currentWalletChangedEvent.pipe(takeUntil(this.destroy$)).subscribe({\n            next: (wallet: Wallet) => {\n                this.createTabs(wallet);\n                const disabled = !wallet.loaded;\n                this.setDisabledTabs(['send', 'swap', 'staking', 'custom-assets'], disabled);\n\n                this.variablesService.is_hardfok_active$.pipe(take(1)).subscribe({\n                    next: (value) => {\n                        const hidden = !value;\n                        this.setHiddenTabs(['swap'], hidden);\n                    },\n                });\n            },\n        });\n\n        this.variablesService.is_hardfok_active$.pipe(takeUntil(this.destroy$)).subscribe({\n            next: (value) => {\n                const hidden = !value;\n                this.setHiddenTabs(['swap'], hidden);\n            },\n        });\n    }\n\n    navigationInterceptor(event: RouterEvent): void {\n        if (event instanceof NavigationStart) {\n            this.loader = true;\n        }\n        if (event instanceof NavigationEnd) {\n            this.loader = false;\n        }\n        if (event instanceof NavigationCancel) {\n            this.loader = false;\n        }\n        if (event instanceof NavigationError) {\n            this.loader = false;\n        }\n    }\n\n    createTabs({ is_auditable, is_watch_only }: Wallet): void {\n        const conditionForHiding: boolean = !is_auditable || !is_watch_only;\n        const tabs: Array<Tab> = [];\n\n        tabs.push(objTabs.assets);\n        tabs.push(objTabs.history);\n\n        if (conditionForHiding) {\n            tabs.push(objTabs.send);\n        }\n\n        tabs.push(objTabs.receive);\n\n        if (conditionForHiding) {\n            tabs.push(objTabs.swap);\n        }\n\n        tabs.push(objTabs.staking);\n\n        if (conditionForHiding) {\n            tabs.push(objTabs['custom-assets']);\n        }\n\n        this.tabs = tabs;\n    }\n\n    @HostListener('document:keydown.shift', ['$event.key'])\n    onKeyPressed(): void {\n        this.walletSyncVisible = true;\n    }\n\n    @HostListener('document:keyup.shift', ['$event.key'])\n    onKeyUpPressed(): void {\n        this.walletSyncVisible = false;\n    }\n\n    ngOnInit(): void {\n        this.settingsButtonInterval = setInterval(() => {\n            if (this.variablesService.daemon_state == 2 || this.walletLoaded) {\n                this.settingsButtonDisabled = false;\n                clearInterval(this.settingsButtonInterval);\n            }\n        }, 1000);\n        this.store\n            .select(StateKeys.sync)\n            .pipe(filter(Boolean), distinctUntilChanged(), takeUntil(this.destroy$))\n            .subscribe({\n                next: (value: any) => {\n                    const data = value.filter((item: Sync) => item.wallet_id === this.variablesService.current_wallet.wallet_id)[0];\n                    if (data && !data.sync) {\n                        let in_progress;\n                        const values = this.store.state.sync;\n                        if (values && values.length > 0) {\n                            in_progress = values.filter((item) => item.sync);\n                            this.variablesService.sync_started = !!(in_progress && in_progress.length);\n                            if (!in_progress) {\n                                this.variablesService.sync_started = false;\n                                this.variablesService.sync_wallets[data.wallet_id] = false;\n                            }\n                        } else {\n                            this.variablesService.sync_started = false;\n                            this.variablesService.sync_wallets[data.wallet_id] = false;\n                        }\n                    }\n                },\n            });\n        this.updateWalletStatus();\n\n        this.loader = false;\n        this.router.events.pipe(takeUntil(this.destroy$)).subscribe((e: RouterEvent) => {\n            this.navigationInterceptor(e);\n        });\n    }\n\n    resyncCurrentWallet(wallet_id: number): void {\n        this.backend.resyncWallet(wallet_id);\n    }\n\n    close(wallet_id: number): void {\n        const config: MatDialogConfig<ConfirmModalData> = {\n            data: {\n                title: 'WALLET.CONFIRM.MESSAGE',\n                message: 'WALLET.CONFIRM.TITLE',\n            },\n        };\n\n        this._matDialog\n            .open<ConfirmModalComponent, ConfirmModalData, boolean>(ConfirmModalComponent, config)\n            .afterClosed()\n            .pipe(filter(Boolean), takeUntil(this.destroy$))\n            .subscribe({\n                next: () => {\n                    this.walletsService.closeWallet(wallet_id);\n                },\n            });\n    }\n\n    addCustomToken(): void {\n        this._matDialog\n            .open<AddCustomTokenComponent, void, AssetBalance | undefined>(AddCustomTokenComponent)\n            .afterClosed()\n            .pipe(\n                filter((response_data) => Boolean(response_data)),\n                takeUntil(this.destroy$)\n            )\n            .subscribe({\n                next: (asset) => {\n                    const config: MatDialogConfig = {\n                        data: {\n                            asset_info: asset.asset_info,\n                            title: 'You added new asset',\n                        },\n                    };\n                    this.ngZone.run(() => {\n                        this._matDialog.open(AssetDetailsComponent, config);\n                    });\n                },\n            });\n    }\n\n    exportHistory(): void {\n        this._matDialog.open(ExportHistoryModalComponent);\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    updateWalletStatus(): void {\n        this.backend.eventSubscribe(Commands.wallet_sync_progress, (data) => {\n            const wallet_id = data.wallet_id;\n            if (wallet_id === this.variablesService.current_wallet.wallet_id) {\n                this.ngZone.run(() => {\n                    this.walletLoaded = false;\n                });\n            }\n        });\n        this.backend.eventSubscribe(Commands.update_wallet_status, (data) => {\n            const wallet_state = data.wallet_state;\n            const wallet_id = data.wallet_id;\n            this.ngZone.run(() => {\n                if (wallet_id !== this.variablesService.current_wallet.wallet_id) {\n                    return;\n                }\n\n                if (wallet_state === 2) {\n                    this.walletLoaded = true;\n                    this.setDisabledTabs(['send', 'swap', 'staking', 'custom-assets'], false);\n                } else {\n                    this.walletLoaded = false;\n                    this.setDisabledTabs(['send', 'swap', 'staking', 'custom-assets'], true);\n                }\n            });\n        });\n    }\n\n    setHiddenTabs(ids: string[], hidden: boolean): void {\n        this.tabs.forEach((tab) => {\n            if (ids.includes(tab.id)) {\n                tab.hidden = hidden;\n            }\n        });\n    }\n\n    setDisabledTabs(ids: string[], disabled: boolean): void {\n        this.tabs.forEach((tab) => {\n            if (ids.includes(tab.id)) {\n                tab.disabled = disabled;\n            }\n        });\n    }\n}\n","<div class=\"header mb-2\" fxFlex=\"0 0 auto\" fxLayout=\"row nowrap\" fxLayoutAlign=\"space-between start\" fxLayoutGap=\"1rem\">\n    <div class=\"left overflow-hidden\" fxFlex=\"1 1 auto\" fxLayout=\"row nowrap\" fxLayoutAlign=\"start center\" fxLayoutGap=\"3rem\">\n        <div class=\"wallet-wrapper\" fxLayout=\"column\" fxLayoutAlign=\"start start\">\n            <div class=\"title\" fxLayout=\"row nowrap\" fxLayoutAlign=\"start center\" fxLayoutGap=\"1rem\">\n                <h1 class=\"text-ellipsis\">\n                    {{ variablesService.current_wallet.address | zanoShortString }}\n                </h1>\n\n                <app-copy-button\n                    [delay]=\"150\"\n                    [placement]=\"'bottom'\"\n                    [timeout]=\"0\"\n                    [tooltipClass]=\"'table-tooltip'\"\n                    [tooltip]=\"variablesService.current_wallet.address\"\n                    [value]=\"variablesService.current_wallet.address\"\n                >\n                </app-copy-button>\n\n                <zano-alias-controls></zano-alias-controls>\n            </div>\n        </div>\n\n        <ng-container *ngIf=\"isShowMigrateAlert\">\n            <hr fxFlex=\"0 0 1px\" style=\"height: 3.6rem; border: none; border-right: var(--table-rounded-corners-border)\" />\n            <zano-migrate-alert></zano-migrate-alert>\n        </ng-container>\n    </div>\n\n    <div class=\"right\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"1rem\">\n        <zano-shield-testnet *ngIf=\"variablesService.testnet\"></zano-shield-testnet>\n\n        <zano-visibility-balance-button></zano-visibility-balance-button>\n\n        <button\n            (click)=\"$event.stopPropagation()\"\n            [disabled]=\"settingsButtonDisabled && !variablesService.current_wallet.loaded\"\n            [matMenuTriggerFor]=\"menu\"\n            class=\"btn-icon circle big\"\n            mat-icon-button\n            type=\"button\"\n        >\n            <mat-icon svgIcon=\"zano-wallet-settings\"></mat-icon>\n        </button>\n\n        <mat-menu #menu=\"matMenu\" class=\"zano-mat-menu\">\n            <button\n                [delay]=\"500\"\n                [disabled]=\"!variablesService.current_wallet.loaded\"\n                [routerLink]=\"['/details']\"\n                [timeDelay]=\"500\"\n                mat-menu-item\n                placement=\"left\"\n                routerLinkActive=\"active\"\n                tooltip=\"{{ 'WALLET.TOOLTIPS.SETTINGS' | translate }}\"\n                tooltipClass=\"table-tooltip account-tooltip\"\n            >\n                <mat-icon svgIcon=\"zano-settings\"></mat-icon>\n                <span>{{ 'WALLET_DETAILS.WALLET_OPTIONS' | translate }}</span>\n            </button>\n\n            <ng-container *ngIf=\"variablesService.is_hardfok_active$ | async\">\n                <button\n                    (click)=\"addCustomToken()\"\n                    [delay]=\"500\"\n                    [disabled]=\"!variablesService.current_wallet.loaded\"\n                    [timeDelay]=\"500\"\n                    mat-menu-item\n                    placement=\"left\"\n                    tooltip=\"{{ 'WALLET.TOOLTIPS.WHITELIST_ASSET' | translate }}\"\n                    tooltipClass=\"table-tooltip account-tooltip\"\n                >\n                    <mat-icon svgIcon=\"zano-plus\"></mat-icon>\n                    <span>{{ 'WALLET_DETAILS.WHITELIST_ASSET' | translate }}</span>\n                </button>\n            </ng-container>\n\n            <button\n                (click)=\"exportHistory()\"\n                [delay]=\"500\"\n                [disabled]=\"variablesService.current_wallet.history.length <= 0 || !variablesService.current_wallet.loaded\"\n                [timeDelay]=\"500\"\n                mat-menu-item\n                placement=\"left\"\n                tooltip=\"{{ 'EXPORT_HISTORY.TOOLTIP' | translate }}\"\n                tooltipClass=\"table-tooltip account-tooltip\"\n            >\n                <mat-icon svgIcon=\"zano-export\"></mat-icon>\n                <span>{{ 'EXPORT_HISTORY.EXPORT_BUTTON' | translate }}</span>\n            </button>\n\n            <ng-container *ngIf=\"walletSyncVisible\">\n                <button\n                    (click)=\"resyncCurrentWallet(variablesService.current_wallet.wallet_id)\"\n                    [delay]=\"500\"\n                    [disabled]=\"!variablesService.current_wallet.loaded\"\n                    [timeDelay]=\"500\"\n                    mat-menu-item\n                    placement=\"left\"\n                    tooltip=\"{{ 'WALLET_DETAILS.RESYNC_WALLET' | translate }}\"\n                    tooltipClass=\"table-tooltip account-tooltip\"\n                >\n                    <mat-icon svgIcon=\"zano-update\"></mat-icon>\n                    <span>{{ 'WALLET_DETAILS.RESYNC_WALLET_BUTTON' | translate }}</span>\n                </button>\n            </ng-container>\n\n            <button\n                (click)=\"close(variablesService.current_wallet.wallet_id)\"\n                [delay]=\"500\"\n                [timeDelay]=\"500\"\n                mat-menu-item\n                placement=\"left\"\n                tooltip=\"{{ 'WALLET.TOOLTIPS.REMOVE' | translate }}\"\n                tooltipClass=\"table-tooltip account-tooltip\"\n            >\n                <mat-icon svgIcon=\"zano-close-v2\"></mat-icon>\n                <span>{{ 'WALLET_DETAILS.BUTTON_REMOVE' | translate }}</span>\n            </button>\n        </mat-menu>\n    </div>\n</div>\n\n<div class=\"tabs\">\n    <div class=\"tabs-header\">\n        <ng-container *ngFor=\"let tab of tabs\">\n            <ng-container *ngIf=\"!tab.hidden\">\n                <button [disabled]=\"tab.disabled\" [routerLink]=\"['/wallet' + tab.link]\" class=\"tab-header\" routerLinkActive=\"active\">\n                    <mat-icon [svgIcon]=\"tab.icon\"></mat-icon>\n                    <span *ngIf=\"isViewTabName$ | async\" class=\"ml-1\">{{ tab.title | translate }}</span>\n                    <span *ngIf=\"tab.indicator\" class=\"indicator\">{{ variablesService.current_wallet.new_contracts }}</span>\n                </button>\n            </ng-container>\n        </ng-container>\n    </div>\n    <div class=\"tabs-content\">\n        <router-outlet> </router-outlet>\n\n        <div *ngIf=\"loader\" class=\"wrapper-tab-preloader\">\n            <div class=\"preloader\">\n                <p class=\"mb-2\">\n                    {{ 'Loading...' | translate }}\n                </p>\n                <div class=\"loading-bar\"></div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexModule } from '@angular/flex-layout';\nimport { IsAvailableAliasNamePipeModule } from '@parts/pipes';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TooltipModule } from '@parts/directives';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RouterLink } from '@angular/router';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MyAliasesDialogComponent } from '../../../pages/wallet/wallet/dialogs/my-aliases-dialog/my-aliases-dialog.component';\n\n@Component({\n    selector: 'zano-alias-controls',\n    standalone: true,\n    imports: [CommonModule, FlexModule, IsAvailableAliasNamePipeModule, MatIconModule, TooltipModule, TranslateModule, RouterLink],\n    templateUrl: './alias-controls.component.html',\n    styleUrls: ['./alias-controls.component.scss'],\n})\nexport class AliasControlsComponent {\n    public readonly variablesService: VariablesService = inject(VariablesService);\n\n    private readonly _matDialog: MatDialog = inject(MatDialog);\n\n    get isShowAssignAlias(): boolean {\n        const { current_wallet, daemon_state, testnet } = this.variablesService;\n\n        if (!current_wallet || daemon_state !== 2) {\n            return false;\n        }\n\n        const { alias_info, loaded, alias_available, is_watch_only } = current_wallet;\n\n        if (!loaded || !alias_available || is_watch_only) {\n            return false;\n        }\n\n        return testnet || !Boolean(alias_info);\n    }\n\n    get isShowAlias(): boolean {\n        const { current_wallet, daemon_state } = this.variablesService;\n\n        if (!current_wallet || daemon_state !== 2) {\n            return false;\n        }\n\n        const { alias_info, loaded, alias_available } = current_wallet;\n\n        if (!loaded || !alias_available) {\n            return false;\n        }\n\n        return Boolean(alias_info);\n    }\n\n    openMyAliasesDialog(): void {\n        this._matDialog.open(MyAliasesDialogComponent, { width: '44rem' });\n    }\n}\n","<div class=\"controls\" fxFlex=\"0 0 auto\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n    <ng-container *ngIf=\"isShowAssignAlias\">\n        <button [routerLink]=\"['/assign-alias']\" class=\"px-1 py-0_8 btn-light-background\">\n            {{ 'WALLET.REGISTER_ALIAS' | translate }}\n        </button>\n    </ng-container>\n\n    <ng-container *ngIf=\"isShowAlias\">\n        <div\n            (click)=\"openMyAliasesDialog()\"\n            [class.available]=\"variablesService.current_wallet.alias_info | isAvailableAliasName\"\n            class=\"control-alias-wallet-container\"\n        >\n            <div class=\"alias\">\n                @{{ variablesService.current_wallet.alias_info?.alias }}\n                <mat-icon svgIcon=\"zano-circle-arrow-right\"></mat-icon>\n            </div>\n            <ng-container *ngIf=\"variablesService.current_wallet.alias_info_list.length > 1\">\n                <div\n                    [delay]=\"150\"\n                    [placement]=\"'bottom'\"\n                    [timeout]=\"0\"\n                    [tooltipClass]=\"'table-tooltip'\"\n                    [tooltip]=\"aliasHistoryTemplate\"\n                    class=\"alias-history-count\"\n                >\n                    +{{ variablesService.current_wallet.alias_info_list.length - 1 }}\n                </div>\n\n                <ng-template #aliasHistoryTemplate>\n                    <div class=\"alias-history-list\">\n                        <ng-container *ngFor=\"let alias_info of variablesService.current_wallet.alias_info_list; let last = last\">\n                            <ng-container *ngIf=\"!last\">\n                                <p>\n                                    {{ alias_info.alias }}\n                                </p>\n                            </ng-container>\n                        </ng-container>\n                    </div>\n                </ng-template>\n            </ng-container>\n        </div>\n    </ng-container>\n</div>\n","import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BackButtonModule } from '@parts/directives/back-button/back-button.module';\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n    selector: 'app-back-button',\n    standalone: true,\n    imports: [CommonModule, BackButtonModule, MatIconModule],\n    templateUrl: './back-button.component.html',\n    styleUrls: ['./back-button.component.scss'],\n})\nexport class BackButtonComponent {}\n","<button appBackButton class=\"btn-icon circle big\" type=\"button\">\n    <mat-icon\n        [ngClass]=\"{\n            'rotate-90': true\n        }\"\n        svgIcon=\"zano-dropdown-arrow-down\"\n    ></mat-icon>\n</button>\n","import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterLink } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { BreadcrumbItems } from '@parts/components/breadcrumbs/breadcrumbs.models';\n\n@Component({\n    selector: 'app-breadcrumbs',\n    standalone: true,\n    imports: [CommonModule, TranslateModule, RouterLink],\n    templateUrl: './breadcrumbs.component.html',\n    styleUrls: ['./breadcrumbs.component.scss'],\n})\nexport class BreadcrumbsComponent {\n    @Input() items: BreadcrumbItems = [];\n}\n","<div class=\"breadcrumbs\">\n    <div *ngFor=\"let item of items\" class=\"breadcrumb\">\n        <ng-container *ngIf=\"item.routerLink; else templateTitle\">\n            <span class=\"link\" [routerLink]=\"item.routerLink\">{{ item.title | translate }}</span>\n        </ng-container>\n\n        <ng-template #templateTitle>\n            <span>{{ item.title | translate }}</span>\n        </ng-template>\n    </div>\n</div>\n","import { Component, EventEmitter, forwardRef, Input, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n    selector: 'app-checkbox',\n    template: `\n        <div class=\"checkbox\">\n            <input\n                (change)=\"handlerChange($event)\"\n                [checked]=\"value\"\n                [disabled]=\"disabled\"\n                [id]=\"id\"\n                [readonly]=\"readonly\"\n                type=\"checkbox\"\n            />\n            <label [for]=\"id\">{{ label }}</label>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: inline-flex;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => CheckboxComponent),\n            multi: true,\n        },\n    ],\n    standalone: true,\n    imports: [CommonModule],\n})\nexport class CheckboxComponent implements ControlValueAccessor {\n    @Input() value = false;\n\n    @Input() label = '';\n\n    @Input() id = 'id-' + Math.random();\n\n    @Input() disabled = false;\n\n    @Input() readonly = false;\n\n    @Output() emitChange = new EventEmitter<boolean>();\n\n    onChange!: (value: boolean) => void;\n\n    onTouched!: () => void;\n\n    handlerChange({ target }: Event): void {\n        const { checked } = target as HTMLInputElement;\n        this.value = checked;\n        this.emitChange.emit(checked);\n        if (this.onChange) {\n            this.onChange(checked);\n        }\n    }\n\n    registerOnChange(fn: any): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onTouched = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    writeValue(value: boolean): void {\n        this.value = value;\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { BackendService } from '@api/services/backend.service';\nimport { VariablesService } from '../services/variables.service';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n    selector: 'app-copy-button',\n    template: `\n        <button (click)=\"copy()\" [classList]=\"'btn-icon circle' + ' ' + size\">\n            <mat-icon [class]=\"size\" [svgIcon]=\"copyAnimation ? 'zano-check' : 'zano-copy'\"></mat-icon>\n        </button>\n    `,\n    styles: [],\n    standalone: true,\n    imports: [CommonModule, MatIconModule],\n})\nexport class CopyButtonComponent {\n    @Input() value: string;\n\n    @Input() size: 'small' | 'big' = 'small';\n\n    copyAnimation = false;\n\n    copyAnimationTimeout;\n\n    constructor(private backend: BackendService, public variablesService: VariablesService) {}\n\n    copy(): void {\n        this.backend.setClipboard(this.value || '');\n        this.copyAnimation = true;\n        this.copyAnimationTimeout = window.setTimeout(() => {\n            this.copyAnimation = false;\n            clearTimeout(this.copyAnimationTimeout);\n        }, 2000);\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { NgSwitch, NgSwitchCase, NgSwitchDefault } from '@angular/common';\n\ntype LoaderType = 'circle' | 'circle-2' | 'circle-3' | 'dots' | 'dots-2' | 'pulse';\n\n@Component({\n    selector: 'zano-loader',\n    standalone: true,\n    template: `\n        <ng-container [ngSwitch]=\"[type]\">\n            <!-- Loader 1-->\n            <div *ngSwitchCase=\"'circle'\" class=\"loader-1\">\n                <span></span>\n            </div>\n\n            <!-- Loader 2 -->\n            <div *ngSwitchCase=\"'circle-2'\" class=\"loader-2\">\n                <span></span>\n            </div>\n\n            <!-- Loader 3 -->\n            <div *ngSwitchCase=\"'circle-3'\" class=\"loader-3\">\n                <span></span>\n            </div>\n\n            <!-- Loader 4 -->\n            <div *ngSwitchCase=\"'dots'\" class=\"loader-4\">\n                <span></span>\n            </div>\n\n            <!-- Loader 5 -->\n            <div *ngSwitchCase=\"'dots-2'\" class=\"loader-5\">\n                <span></span>\n            </div>\n\n            <!-- Loader 6 -->\n            <div *ngSwitchCase=\"'pulse'\" class=\"loader-6\">\n                <span></span>\n            </div>\n\n            <!-- Default-->\n            <div *ngSwitchDefault class=\"loader-1\">\n                <span></span>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            /* Loader 1 */\n            .loader-1 {\n                height: 32px;\n                width: 32px;\n                -webkit-animation: loader-1-1 4.8s linear infinite;\n                animation: loader-1-1 4.8s linear infinite;\n            }\n\n            @-webkit-keyframes loader-1-1 {\n                0% {\n                    -webkit-transform: rotate(0deg);\n                }\n                100% {\n                    -webkit-transform: rotate(360deg);\n                }\n            }\n\n            @keyframes loader-1-1 {\n                0% {\n                    transform: rotate(0deg);\n                }\n                100% {\n                    transform: rotate(360deg);\n                }\n            }\n\n            .loader-1 span {\n                display: block;\n                position: absolute;\n                top: 0;\n                left: 0;\n                bottom: 0;\n                right: 0;\n                margin: auto;\n                height: 32px;\n                width: 32px;\n                clip: rect(0, 32px, 32px, 16px);\n                -webkit-animation: loader-1-2 1.2s linear infinite;\n                animation: loader-1-2 1.2s linear infinite;\n            }\n\n            @-webkit-keyframes loader-1-2 {\n                0% {\n                    -webkit-transform: rotate(0deg);\n                }\n                100% {\n                    -webkit-transform: rotate(220deg);\n                }\n            }\n\n            @keyframes loader-1-2 {\n                0% {\n                    transform: rotate(0deg);\n                }\n                100% {\n                    transform: rotate(220deg);\n                }\n            }\n\n            .loader-1 span::after {\n                content: '';\n                position: absolute;\n                top: 0;\n                left: 0;\n                bottom: 0;\n                right: 0;\n                margin: auto;\n                height: 32px;\n                width: 32px;\n                clip: rect(0, 32px, 32px, 16px);\n                border: 3px solid currentColor;\n                border-radius: 50%;\n                -webkit-animation: loader-1-3 1.2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n                animation: loader-1-3 1.2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n            }\n\n            @-webkit-keyframes loader-1-3 {\n                0% {\n                    -webkit-transform: rotate(-140deg);\n                }\n                50% {\n                    -webkit-transform: rotate(-160deg);\n                }\n                100% {\n                    -webkit-transform: rotate(140deg);\n                }\n            }\n\n            @keyframes loader-1-3 {\n                0% {\n                    transform: rotate(-140deg);\n                }\n                50% {\n                    transform: rotate(-160deg);\n                }\n                100% {\n                    transform: rotate(140deg);\n                }\n            }\n\n            /* Loader 2 */\n            .loader-2 {\n                display: block;\n                height: 32px;\n                width: 32px;\n                -webkit-animation: loader-2-1 3s linear infinite;\n                animation: loader-2-1 3s linear infinite;\n            }\n\n            @-webkit-keyframes loader-2-1 {\n                0% {\n                    -webkit-transform: rotate(0deg);\n                }\n                100% {\n                    -webkit-transform: rotate(360deg);\n                }\n            }\n\n            @keyframes loader-2-1 {\n                0% {\n                    transform: rotate(0deg);\n                }\n                100% {\n                    transform: rotate(360deg);\n                }\n            }\n\n            .loader-2 span {\n                display: block;\n                position: absolute;\n                top: 0;\n                left: 0;\n                bottom: 0;\n                right: 0;\n                margin: auto;\n                height: 32px;\n                width: 32px;\n                clip: rect(16px, 32px, 32px, 0);\n                -webkit-animation: loader-2-2 1.5s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n                animation: loader-2-2 1.5s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n            }\n\n            @-webkit-keyframes loader-2-2 {\n                0% {\n                    -webkit-transform: rotate(0deg);\n                }\n                100% {\n                    -webkit-transform: rotate(360deg);\n                }\n            }\n\n            @keyframes loader-2-2 {\n                0% {\n                    transform: rotate(0deg);\n                }\n                100% {\n                    transform: rotate(360deg);\n                }\n            }\n\n            .loader-2 span::before {\n                content: '';\n                display: block;\n                position: absolute;\n                top: 0;\n                left: 0;\n                bottom: 0;\n                right: 0;\n                margin: auto;\n                height: 32px;\n                width: 32px;\n                border: 3px solid transparent;\n                border-top: 3px solid currentColor;\n                border-radius: 50%;\n                -webkit-animation: loader-2-3 1.5s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n                animation: loader-2-3 1.5s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n            }\n\n            @-webkit-keyframes loader-2-3 {\n                0% {\n                    -webkit-transform: rotate(0deg);\n                }\n                100% {\n                    -webkit-transform: rotate(360deg);\n                }\n            }\n\n            @keyframes loader-2-3 {\n                0% {\n                    transform: rotate(0deg);\n                }\n                100% {\n                    transform: rotate(360deg);\n                }\n            }\n\n            .loader-2 span::after {\n                content: '';\n                display: block;\n                position: absolute;\n                top: 0;\n                left: 0;\n                bottom: 0;\n                right: 0;\n                margin: auto;\n                height: 32px;\n                width: 32px;\n                border: 3px solid rgba(255, 255, 255, 0.5);\n                border-radius: 50%;\n            }\n\n            /* Loader 3 */\n            .loader-3 {\n                display: block;\n                height: 32px;\n                width: 32px;\n            }\n\n            .loader-3 span {\n                display: block;\n                position: absolute;\n                top: 0;\n                left: 0;\n                bottom: 0;\n                right: 0;\n                margin: auto;\n                height: 32px;\n                width: 32px;\n            }\n\n            .loader-3 span::before {\n                content: '';\n                display: block;\n                position: absolute;\n                top: 0;\n                left: 0;\n                bottom: 0;\n                right: 0;\n                margin: auto;\n                height: 32px;\n                width: 32px;\n                border: 3px solid currentColor;\n                border-bottom: 3px solid transparent;\n                border-radius: 50%;\n                -webkit-animation: loader-3-1 1.5s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n                animation: loader-3-1 1.5s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n            }\n\n            @-webkit-keyframes loader-3-1 {\n                0% {\n                    -webkit-transform: rotate(0deg);\n                }\n                40% {\n                    -webkit-transform: rotate(180deg);\n                }\n                60% {\n                    -webkit-transform: rotate(180deg);\n                }\n                100% {\n                    -webkit-transform: rotate(360deg);\n                }\n            }\n\n            @keyframes loader-3-1 {\n                0% {\n                    transform: rotate(0deg);\n                }\n                40% {\n                    transform: rotate(180deg);\n                }\n                60% {\n                    transform: rotate(180deg);\n                }\n                100% {\n                    transform: rotate(360deg);\n                }\n            }\n\n            .loader-3 span::after {\n                content: '';\n                position: absolute;\n                top: 0;\n                left: 0;\n                bottom: 0;\n                right: 0;\n                margin: auto;\n                width: 6px;\n                height: 6px;\n                background: currentColor;\n                border-radius: 50%;\n                -webkit-animation: loader-3-2 1.5s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n                animation: loader-3-2 1.5s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n            }\n\n            @-webkit-keyframes loader-3-2 {\n                0% {\n                    -webkit-transform: translate3d(0, -32px, 0) scale(0, 2);\n                    opacity: 0;\n                }\n                50% {\n                    -webkit-transform: translate3d(0, 0, 0) scale(1.25, 1.25);\n                    opacity: 1;\n                }\n                100% {\n                    -webkit-transform: translate3d(0, 8px, 0) scale(0, 0);\n                    opacity: 0;\n                }\n            }\n\n            @keyframes loader-3-2 {\n                0% {\n                    transform: translate3d(0, -32px, 0) scale(0, 2);\n                    opacity: 0;\n                }\n                50% {\n                    transform: translate3d(0, 0, 0) scale(1.25, 1.25);\n                    opacity: 1;\n                }\n                100% {\n                    transform: translate3d(0, 8px, 0) scale(0, 0);\n                    opacity: 0;\n                }\n            }\n\n            /* Loader 4 */\n            .loader-4 {\n                height: 32px;\n                width: 32px;\n            }\n\n            .loader-4::after {\n                content: '';\n                display: block;\n                position: absolute;\n                top: 0;\n                left: 0;\n                bottom: 0;\n                right: 0;\n                margin: auto;\n                width: 12px;\n                height: 12px;\n                top: 0;\n                left: 0;\n                bottom: 0;\n                right: 0;\n                margin: auto;\n                background: currentColor;\n                border-radius: 50%;\n                -webkit-animation: loader-4-1 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n                animation: loader-4-1 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n            }\n\n            @-webkit-keyframes loader-4-1 {\n                0% {\n                    -webkit-transform: scale(0);\n                    opacity: 0;\n                }\n                50% {\n                    -webkit-transform: scale(1);\n                    opacity: 1;\n                }\n                100% {\n                    -webkit-transform: scale(0);\n                    opacity: 0;\n                }\n            }\n\n            @keyframes loader-4-1 {\n                0% {\n                    transform: scale(0);\n                    opacity: 0;\n                }\n                50% {\n                    transform: scale(1);\n                    opacity: 1;\n                }\n                100% {\n                    transform: scale(0);\n                    opacity: 0;\n                }\n            }\n\n            .loader-4 span {\n                display: block;\n                position: absolute;\n                top: 0;\n                left: 0;\n                bottom: 0;\n                right: 0;\n                margin: auto;\n                height: 32px;\n                width: 32px;\n                -webkit-animation: loader-4-2 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n                animation: loader-4-2 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n            }\n\n            @-webkit-keyframes loader-4-2 {\n                0% {\n                    -webkit-transform: rotate(0deg);\n                }\n                50% {\n                    -webkit-transform: rotate(180deg);\n                }\n                100% {\n                    -webkit-transform: rotate(360deg);\n                }\n            }\n\n            @keyframes loader-4-2 {\n                0% {\n                    transform: rotate(0deg);\n                }\n                50% {\n                    transform: rotate(180deg);\n                }\n                100% {\n                    transform: rotate(360deg);\n                }\n            }\n\n            .loader-4 span::before,\n            .loader-4 span::after {\n                content: '';\n                display: block;\n                position: absolute;\n                top: 0;\n                left: 0;\n                bottom: 0;\n                right: 0;\n                margin: auto;\n                height: 12px;\n                width: 12px;\n                background: currentColor;\n                border-radius: 50%;\n                -webkit-animation: loader-4-3 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n                animation: loader-4-3 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n            }\n\n            @-webkit-keyframes loader-4-3 {\n                0% {\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\n                }\n                50% {\n                    -webkit-transform: translate3d(-16px, 0, 0) scale(0.5);\n                }\n                100% {\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\n                }\n            }\n\n            @keyframes loader-4-3 {\n                0% {\n                    transform: translate3d(0, 0, 0) scale(1);\n                }\n                50% {\n                    transform: translate3d(-16px, 0, 0) scale(0.5);\n                }\n                100% {\n                    transform: translate3d(0, 0, 0) scale(1);\n                }\n            }\n\n            .loader-4 span::after {\n                -webkit-animation: loader-4-4 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n                animation: loader-4-4 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n            }\n\n            @-webkit-keyframes loader-4-4 {\n                0% {\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\n                }\n                50% {\n                    -webkit-transform: translate3d(16px, 0, 0) scale(0.5);\n                }\n                100% {\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\n                }\n            }\n\n            @keyframes loader-4-4 {\n                0% {\n                    transform: translate3d(0, 0, 0) scale(1);\n                }\n                50% {\n                    transform: translate3d(16px, 0, 0) scale(0.5);\n                }\n                100% {\n                    transform: translate3d(0, 0, 0) scale(1);\n                }\n            }\n\n            /* Loader 5 */\n            .loader-5 {\n                height: 32px;\n                width: 32px;\n                -webkit-animation: loader-5-1 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n                animation: loader-5-1 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n            }\n\n            @-webkit-keyframes loader-5-1 {\n                0% {\n                    -webkit-transform: rotate(0deg);\n                }\n                100% {\n                    -webkit-transform: rotate(360deg);\n                }\n            }\n\n            @keyframes loader-5-1 {\n                0% {\n                    transform: rotate(0deg);\n                }\n                100% {\n                    transform: rotate(360deg);\n                }\n            }\n\n            .loader-5::before {\n                content: '';\n                display: block;\n                position: absolute;\n                top: 0;\n                left: 0;\n                bottom: 0;\n                right: auto;\n                margin: auto;\n                width: 8px;\n                height: 8px;\n                background: currentColor;\n                border-radius: 50%;\n                -webkit-animation: loader-5-2 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n                animation: loader-5-2 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n            }\n\n            @-webkit-keyframes loader-5-2 {\n                0% {\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\n                }\n                50% {\n                    -webkit-transform: translate3d(24px, 0, 0) scale(0.5);\n                }\n                100% {\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\n                }\n            }\n\n            @keyframes loader-5-2 {\n                0% {\n                    transform: translate3d(0, 0, 0) scale(1);\n                }\n                50% {\n                    transform: translate3d(24px, 0, 0) scale(0.5);\n                }\n                100% {\n                    transform: translate3d(0, 0, 0) scale(1);\n                }\n            }\n\n            .loader-5::after {\n                content: '';\n                display: block;\n                position: absolute;\n                top: 0;\n                left: auto;\n                bottom: 0;\n                right: 0;\n                margin: auto;\n                width: 8px;\n                height: 8px;\n                background: currentColor;\n                border-radius: 50%;\n                -webkit-animation: loader-5-3 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n                animation: loader-5-3 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n            }\n\n            @-webkit-keyframes loader-5-3 {\n                0% {\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\n                }\n                50% {\n                    -webkit-transform: translate3d(-24px, 0, 0) scale(0.5);\n                }\n                100% {\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\n                }\n            }\n\n            @keyframes loader-5-3 {\n                0% {\n                    transform: translate3d(0, 0, 0) scale(1);\n                }\n                50% {\n                    transform: translate3d(-24px, 0, 0) scale(0.5);\n                }\n                100% {\n                    transform: translate3d(0, 0, 0) scale(1);\n                }\n            }\n\n            .loader-5 span {\n                display: block;\n                position: absolute;\n                top: 0;\n                left: 0;\n                bottom: 0;\n                right: 0;\n                margin: auto;\n                height: 32px;\n                width: 32px;\n            }\n\n            .loader-5 span::before {\n                content: '';\n                display: block;\n                position: absolute;\n                top: 0;\n                left: 0;\n                bottom: auto;\n                right: 0;\n                margin: auto;\n                width: 8px;\n                height: 8px;\n                background: currentColor;\n                border-radius: 50%;\n                -webkit-animation: loader-5-4 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n                animation: loader-5-4 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n            }\n\n            @-webkit-keyframes loader-5-4 {\n                0% {\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\n                }\n                50% {\n                    -webkit-transform: translate3d(0, 24px, 0) scale(0.5);\n                }\n                100% {\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\n                }\n            }\n\n            @keyframes loader-5-4 {\n                0% {\n                    transform: translate3d(0, 0, 0) scale(1);\n                }\n                50% {\n                    transform: translate3d(0, 24px, 0) scale(0.5);\n                }\n                100% {\n                    transform: translate3d(0, 0, 0) scale(1);\n                }\n            }\n\n            .loader-5 span::after {\n                content: '';\n                display: block;\n                position: absolute;\n                top: auto;\n                left: 0;\n                bottom: 0;\n                right: 0;\n                margin: auto;\n                width: 8px;\n                height: 8px;\n                background: currentColor;\n                border-radius: 50%;\n                -webkit-animation: loader-5-5 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n                animation: loader-5-5 2s cubic-bezier(0.77, 0, 0.175, 1) infinite;\n            }\n\n            @-webkit-keyframes loader-5-5 {\n                0% {\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\n                }\n                50% {\n                    -webkit-transform: translate3d(0, -24px, 0) scale(0.5);\n                }\n                100% {\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\n                }\n            }\n\n            @keyframes loader-5-5 {\n                0% {\n                    transform: translate3d(0, 0, 0) scale(1);\n                }\n                50% {\n                    transform: translate3d(0, -24px, 0) scale(0.5);\n                }\n                100% {\n                    transform: translate3d(0, 0, 0) scale(1);\n                }\n            }\n\n            /* Loader 6 */\n            .loader-6 {\n                height: 32px;\n                width: 32px;\n            }\n\n            .loader-6 span {\n                display: block;\n                position: absolute;\n                top: 0;\n                left: 0;\n                bottom: 0;\n                right: 0;\n                margin: auto;\n                height: 32px;\n                width: 32px;\n            }\n\n            .loader-6 span::before,\n            .loader-6 span::after {\n                content: '';\n                display: block;\n                position: absolute;\n                top: 0;\n                left: 0;\n                bottom: 0;\n                right: 0;\n                margin: auto;\n                height: 32px;\n                width: 32px;\n                border: 2px solid currentColor;\n                border-radius: 50%;\n                opacity: 0;\n                -webkit-animation: loader-6-1 1.5s cubic-bezier(0.075, 0.82, 0.165, 1) infinite;\n                animation: loader-6-1 1.5s cubic-bezier(0.075, 0.82, 0.165, 1) infinite;\n            }\n\n            @-webkit-keyframes loader-6-1 {\n                0% {\n                    -webkit-transform: translate3d(0, 0, 0) scale(0);\n                    opacity: 1;\n                }\n                100% {\n                    -webkit-transform: translate3d(0, 0, 0) scale(1.5);\n                    opacity: 0;\n                }\n            }\n\n            @keyframes loader-6-1 {\n                0% {\n                    transform: translate3d(0, 0, 0) scale(0);\n                    opacity: 1;\n                }\n                100% {\n                    transform: translate3d(0, 0, 0) scale(1.5);\n                    opacity: 0;\n                }\n            }\n\n            .loader-6 span::after {\n                -webkit-animation: loader-6-2 1.5s cubic-bezier(0.075, 0.82, 0.165, 1) 0.25s infinite;\n                animation: loader-6-2 1.5s cubic-bezier(0.075, 0.82, 0.165, 1) 0.25s infinite;\n            }\n\n            @-webkit-keyframes loader-6-2 {\n                0% {\n                    -webkit-transform: translate3d(0, 0, 0) scale(0);\n                    opacity: 1;\n                }\n                100% {\n                    -webkit-transform: translate3d(0, 0, 0) scale(1);\n                    opacity: 0;\n                }\n            }\n\n            @keyframes loader-6-2 {\n                0% {\n                    transform: translate3d(0, 0, 0) scale(0);\n                    opacity: 1;\n                }\n                100% {\n                    transform: translate3d(0, 0, 0) scale(1);\n                    opacity: 0;\n                }\n            }\n        `,\n    ],\n    imports: [NgSwitch, NgSwitchCase, NgSwitchDefault],\n})\nexport class LoaderComponent {\n    @Input()\n    type: LoaderType = 'circle';\n}\n","import { Component, inject, NgZone } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexModule } from '@angular/flex-layout';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ZARCANUM_MIGRATION } from '@parts/data/constants';\nimport { ParamsCallRpc } from '@api/models/call_rpc.model';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { GetBareOutsStats } from '@api/models/rpc.models';\nimport { MigrateWalletToZarcanumComponent } from '../../../pages/wallet/wallet/dialogs/migrate-wallet-to-zarcanum/migrate-wallet-to-zarcanum.component';\nimport { BackendService } from '@api/services/backend.service';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { ModalService } from '@parts/services/modal.service';\n\n@Component({\n    selector: 'zano-migrate-alert',\n    standalone: true,\n    imports: [CommonModule, FlexModule, MatIconModule, TranslateModule],\n    templateUrl: './migrate-alert.component.html',\n    styleUrls: ['./migrate-alert.component.scss'],\n})\nexport class MigrateAlertComponent {\n    private readonly _backend: BackendService = inject(BackendService);\n    private readonly _variablesService: VariablesService = inject(VariablesService);\n    private readonly _ngZone: NgZone = inject(NgZone);\n    private readonly _matDialog: MatDialog = inject(MatDialog);\n    private readonly _modalService: ModalService = inject(ModalService);\n\n    openZarcanumMigration(): void {\n        this._backend.openUrlInBrowser(ZARCANUM_MIGRATION);\n    }\n\n    openMigrateWalletToZarcanum(): void {\n        const {\n            current_wallet: { wallet_id },\n        } = this._variablesService;\n        const params: ParamsCallRpc = {\n            id: 0,\n            jsonrpc: '2.0',\n            method: 'get_bare_outs_stats',\n            params: {},\n        };\n        this._backend.call_wallet_rpc([wallet_id, params], (status, response_data) => {\n            this._ngZone.run(() => {\n                if (response_data?.result) {\n                    const data = response_data.result;\n\n                    const config: MatDialogConfig<GetBareOutsStats> = {\n                        data,\n                        disableClose: false,\n                    };\n                    this._matDialog.open(MigrateWalletToZarcanumComponent, config);\n                } else {\n                    const message = response_data.error;\n                    this._modalService.prepareModal('error', message);\n                }\n            });\n        });\n    }\n}\n","<div class=\"migrate-alert\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"2rem\">\n    <button class=\"btn-migrate\" type=\"button\" (click)=\"openMigrateWalletToZarcanum()\">\n        {{ 'WALLET.MIGRATE.BUTTON2' | translate }}\n    </button>\n\n    <div class=\"migration-details\">\n        <p class=\"text-wrap\">{{ 'WALLET.MIGRATE.TEXT1' | translate }}</p>\n        <p class=\"text-align-center cursor-pointer\" fxLayout=\"row\" fxLayoutAlign=\"start center\" (click)=\"openZarcanumMigration()\">\n            <mat-icon svgIcon=\"zano-info\" class=\"mr-0_5\"></mat-icon>\n            <span class=\"color-primary\">{{ 'WALLET.MIGRATE.BUTTON1' | translate }}</span>\n        </p>\n    </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ContextMenuComponent, ContextMenuModule, ContextMenuService } from '@perfectmemory/ngx-contextmenu';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { BackendService } from '@api/services/backend.service';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-register-context-templates',\n    template: ` <context-menu #allContextMenu>\n            <ng-template (execute)=\"contextMenuCopy($event.value)\" contextMenuItem>{{ 'CONTEXT_MENU.COPY' | translate }}</ng-template>\n            <ng-template (execute)=\"contextMenuPaste($event.value)\" contextMenuItem>{{ 'CONTEXT_MENU.PASTE' | translate }}</ng-template>\n            <ng-template (execute)=\"contextMenuSelect($event.value)\" contextMenuItem>{{ 'CONTEXT_MENU.SELECT' | translate }}</ng-template>\n        </context-menu>\n        <context-menu #onlyCopyContextMenu>\n            <ng-template (execute)=\"contextMenuOnlyCopy($event.value)\" contextMenuItem>{{ 'CONTEXT_MENU.COPY' | translate }}</ng-template>\n        </context-menu>\n\n        <context-menu #pasteSelectContextMenu>\n            <ng-template (execute)=\"contextMenuPaste($event.value)\" contextMenuItem>{{ 'CONTEXT_MENU.PASTE' | translate }}</ng-template>\n            <ng-template (execute)=\"contextMenuSelect($event.value)\" contextMenuItem>{{ 'CONTEXT_MENU.SELECT' | translate }}</ng-template>\n        </context-menu>`,\n    standalone: true,\n    imports: [CommonModule, ContextMenuModule, TranslateModule],\n    providers: [ContextMenuService],\n})\nexport class RegisterContextTemplatesComponent implements OnInit {\n    @ViewChild('allContextMenu', { static: true })\n    public allContextMenu: ContextMenuComponent<any>;\n\n    @ViewChild('onlyCopyContextMenu', { static: true })\n    public onlyCopyContextMenu: ContextMenuComponent<any>;\n\n    @ViewChild('pasteSelectContextMenu', { static: true })\n    public pasteSelectContextMenu: ContextMenuComponent<any>;\n\n    constructor(public variablesService: VariablesService, private backendService: BackendService) {}\n\n    ngOnInit(): void {\n        this.variablesService.allContextMenu = this.allContextMenu;\n        this.variablesService.onlyCopyContextMenu = this.onlyCopyContextMenu;\n        this.variablesService.pasteSelectContextMenu = this.pasteSelectContextMenu;\n    }\n\n    contextMenuCopy(target): void {\n        if (target && (target['nodeName'].toUpperCase() === 'TEXTAREA' || target['nodeName'].toUpperCase() === 'INPUT')) {\n            const start = target['contextSelectionStart'] ? 'contextSelectionStart' : 'selectionStart';\n            const end = target['contextSelectionEnd'] ? 'contextSelectionEnd' : 'selectionEnd';\n            const canUseSelection = target[start] || target[start] === '0';\n            const SelectedText = canUseSelection ? target['value'].substring(target[start], target[end]) : target['value'];\n            this.backendService.setClipboard(String(SelectedText));\n        }\n    }\n\n    contextMenuOnlyCopy(text): void {\n        if (text) {\n            this.backendService.setClipboard(String(text));\n        }\n    }\n\n    contextMenuPaste(target): void {\n        if (target && (target['nodeName'].toUpperCase() === 'TEXTAREA' || target['nodeName'].toUpperCase() === 'INPUT')) {\n            this.backendService.getClipboard((status, clipboard) => {\n                clipboard = String(clipboard);\n                if (typeof clipboard !== 'string' || clipboard.length) {\n                    const start = target['contextSelectionStart'] ? 'contextSelectionStart' : 'selectionStart';\n                    const end = target['contextSelectionEnd'] ? 'contextSelectionEnd' : 'selectionEnd';\n                    const _pre = target['value'].substring(0, target[start]);\n                    const _aft = target['value'].substring(target[end], target['value'].length);\n                    let text = _pre + clipboard + _aft;\n                    const cursorPosition = (_pre + clipboard).length;\n                    if (target['maxLength'] && parseInt(target['maxLength'], 10) > 0) {\n                        text = text.substr(0, parseInt(target['maxLength'], 10));\n                    }\n                    target['value'] = text;\n                    target.setSelectionRange(cursorPosition, cursorPosition);\n                    target.dispatchEvent(new Event('input'));\n                    target['focus']();\n                }\n            });\n        }\n    }\n\n    contextMenuSelect(target): void {\n        if (target && (target['nodeName'].toUpperCase() === 'TEXTAREA' || target['nodeName'].toUpperCase() === 'INPUT')) {\n            target['focus']();\n            setTimeout(() => {\n                target['select']();\n            });\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n    selector: 'zano-shield-testnet',\n    standalone: true,\n    imports: [CommonModule, MatIconModule],\n    templateUrl: './shield-testnet.component.html',\n    styleUrls: ['./shield-testnet.component.scss'],\n})\nexport class ShieldTestnetComponent {}\n","<label class=\"shield-testnet\">\n    <mat-icon [svgIcon]=\"'zano-attention'\"></mat-icon>\n    Testnet\n</label>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { BackendService } from '@api/services/backend.service';\nimport { VariablesService } from '../services/variables.service';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n    selector: 'app-staking-switch',\n    template: `\n        <div (click)=\"toggleStaking(); $event.stopPropagation()\" [class.off]=\"!staking\" [class.on]=\"staking\" class=\"switch\">\n            <span class=\"circle\"></span>\n        </div>\n    `,\n    styles: [],\n    standalone: true,\n    imports: [CommonModule],\n})\nexport class StakingSwitchComponent {\n    @Input() wallet_id: number;\n\n    @Input() staking: boolean;\n\n    @Output() stakingChange = new EventEmitter<boolean>();\n\n    constructor(private backendService: BackendService, private variablesService: VariablesService) {}\n\n    toggleStaking(): void {\n        const wallet = this.variablesService.getWallet(this.wallet_id);\n        if (wallet && wallet.loaded) {\n            this.stakingChange.emit(!this.staking);\n            if (!this.staking) {\n                this.backendService.startPosMining(this.wallet_id);\n            } else {\n                this.backendService.stopPosMining(this.wallet_id);\n            }\n        }\n    }\n}\n","import { Component, EventEmitter, forwardRef, Input, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n    selector: 'app-switch',\n    template: `\n        <div\n            (click)=\"toggle(); $event.stopPropagation()\"\n            [class.disabled]=\"disabled\"\n            [class.off]=\"!value\"\n            [class.on]=\"value\"\n            class=\"switch\"\n        >\n            <span class=\"circle\"></span>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: inline-flex;\n            }\n        `,\n    ],\n    standalone: true,\n    imports: [CommonModule],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => SwitchComponent),\n            multi: true,\n        },\n    ],\n})\nexport class SwitchComponent implements ControlValueAccessor {\n    @Input() value = false;\n\n    @Input() disabled = false;\n\n    @Output() emitChange = new EventEmitter<boolean>();\n\n    onTouched!: () => void;\n\n    onChange!: (value: boolean) => void;\n\n    toggle(): void {\n        if (!this.disabled) {\n            this.value = !this.value;\n            this.emitChange.emit(this.value);\n            if (this.onChange) {\n                this.onChange(this.value);\n            }\n        }\n    }\n\n    registerOnChange(fn: any): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onTouched = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    writeValue(value: boolean): void {\n        this.value = value;\n    }\n}\n","import { Component } from '@angular/core';\nimport { VariablesService } from '../services/variables.service';\nimport { DOWNLOADS_PAGE_URL } from '@parts/data/constants';\nimport { BackendService } from '@api/services/backend.service';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { TooltipModule } from '@parts/directives';\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n    selector: 'app-synchronization-status',\n    template: `\n        <div\n            [ngStyle]=\"{\n                'align-items': variablesService.daemon_state === 1 || variablesService.daemon_state === 6 ? 'flex-start' : 'center'\n            }\"\n            class=\"synchronization-status overflow-hidden\"\n        >\n            <div class=\"status-container\">\n                <div *ngIf=\"variablesService.daemon_state === 0\" class=\"offline\">\n                    <span>{{ 'SIDEBAR.SYNCHRONIZATION.OFFLINE' | translate }}</span>\n                </div>\n                <div *ngIf=\"variablesService.daemon_state === 1\" class=\"syncing text-ellipsis\">\n                    {{ 'SIDEBAR.SYNCHRONIZATION.SYNCING' | translate }}\n                    {{ variablesService.sync.progress_value_text }}%\n                </div>\n                <div *ngIf=\"variablesService.daemon_state === 2\" class=\"online\">\n                    <span>{{ 'SIDEBAR.SYNCHRONIZATION.ONLINE' | translate }}</span>\n                </div>\n                <div *ngIf=\"variablesService.daemon_state === 3\" class=\"loading\">\n                    {{ 'SIDEBAR.SYNCHRONIZATION.LOADING' | translate }}\n                </div>\n                <div *ngIf=\"variablesService.daemon_state === 4\" class=\"offline\">\n                    {{ 'SIDEBAR.SYNCHRONIZATION.ERROR' | translate }}\n                </div>\n                <div *ngIf=\"variablesService.daemon_state === 5\" class=\"online\">\n                    {{ 'SIDEBAR.SYNCHRONIZATION.COMPLETE' | translate }}\n                </div>\n                <div *ngIf=\"variablesService.daemon_state === 6\" class=\"syncing text-ellipsis\">\n                    {{ 'SIDEBAR.SYNCHRONIZATION.DOWNLOADING' | translate }}\n                    {{ variablesService.download.progress_value_text }}%\n                </div>\n\n                <ng-container *ngIf=\"variablesService.daemon_state === 1 || variablesService.daemon_state === 3\">\n                    <div class=\"progress-bar-container\">\n                        <div *ngIf=\"variablesService.daemon_state === 1\" class=\"syncing\">\n                            <div class=\"progress-bar\">\n                                <div [style.width]=\"variablesService.sync.progress_value + '%'\" class=\"fill\"></div>\n                            </div>\n                        </div>\n\n                        <div *ngIf=\"variablesService.daemon_state === 3\" class=\"loading\"></div>\n                    </div>\n\n                    <p class=\"blocks\">\n                        <mat-icon\n                            class=\"mr-0_5\"\n                            style=\"width: 1.2rem; height: 1.2rem; font-size: 1.2rem; color: var(--block-sync)\"\n                            svgIcon=\"zano-block-sync\"\n                        ></mat-icon>\n                        <span>{{ variablesService.sync.blocks.current }}</span>\n                        <wbr />\n                        /{{ variablesService.sync.blocks.max }} Blocks\n                    </p>\n                </ng-container>\n\n                <ng-container *ngIf=\"variablesService.daemon_state === 6\">\n                    <div class=\"progress-bar-container\">\n                        <div class=\"syncing downloading\">\n                            <div class=\"progress-bar\">\n                                <div [style.width]=\"variablesService.download.progress_value + '%'\" class=\"fill\"></div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n            </div>\n\n            <div\n                *ngIf=\"\n                    (variablesService.daemon_state === 0 || variablesService.daemon_state === 2) &&\n                    [2, 3, 4].indexOf(variablesService.last_build_displaymode) !== -1\n                \"\n                class=\"update-container\"\n            >\n                <ng-container *ngIf=\"variablesService.last_build_displaymode === 2\">\n                    <div class=\"update-text standard\">\n                        <span (click)=\"getUpdate()\" [style.cursor]=\"'pointer'\">{{ 'SIDEBAR.UPDATE.STANDARD' | translate }}</span>\n                    </div>\n                    <i\n                        [delay]=\"500\"\n                        class=\"icon update standard\"\n                        placement=\"right-bottom\"\n                        [tooltip]=\"'SIDEBAR.UPDATE.STANDARD_TOOLTIP' | translate\"\n                        tooltipClass=\"update-tooltip\"\n                    ></i>\n                </ng-container>\n\n                <ng-container *ngIf=\"variablesService.last_build_displaymode === 3\">\n                    <div class=\"update-text important\">\n                        <span (click)=\"getUpdate()\" [style.cursor]=\"'pointer'\">{{ 'SIDEBAR.UPDATE.IMPORTANT' | translate }}</span>\n                        <span style=\"font-size: 1rem\">{{ 'SIDEBAR.UPDATE.IMPORTANT_HINT' | translate }}</span>\n                    </div>\n                    <i\n                        [delay]=\"500\"\n                        class=\"icon update important\"\n                        placement=\"right-bottom\"\n                        [tooltip]=\"'SIDEBAR.UPDATE.IMPORTANT_TOOLTIP' | translate\"\n                        tooltipClass=\"update-tooltip important\"\n                    ></i>\n                </ng-container>\n\n                <ng-container *ngIf=\"variablesService.last_build_displaymode === 4\">\n                    <div class=\"update-text critical\">\n                        <span (click)=\"getUpdate()\" [style.cursor]=\"'pointer'\">{{ 'SIDEBAR.UPDATE.CRITICAL' | translate }}</span>\n                        <span style=\"font-size: 1rem\">{{ 'SIDEBAR.UPDATE.IMPORTANT_HINT' | translate }}</span>\n                    </div>\n                    <i\n                        [delay]=\"500\"\n                        class=\"icon update critical\"\n                        placement=\"right-bottom\"\n                        [tooltip]=\"'SIDEBAR.UPDATE.CRITICAL_TOOLTIP' | translate\"\n                        tooltipClass=\"update-tooltip critical\"\n                    ></i>\n                </ng-container>\n            </div>\n\n            <div *ngIf=\"variablesService.daemon_state === 2 && variablesService.net_time_delta_median !== 0\" class=\"update-container\">\n                <div class=\"update-text time-orange\">\n                    <span>{{ 'SIDEBAR.UPDATE.TIME' | translate }}</span>\n                </div>\n                <i\n                    [delay]=\"500\"\n                    class=\"icon time-orange\"\n                    placement=\"right-bottom\"\n                    [tooltip]=\"'SIDEBAR.UPDATE.TIME_TOOLTIP' | translate\"\n                    tooltipClass=\"update-tooltip important\"\n                ></i>\n            </div>\n        </div>\n    `,\n    styles: [],\n    standalone: true,\n    imports: [CommonModule, TranslateModule, TooltipModule, MatIconModule],\n})\nexport class SynchronizationStatusComponent {\n    constructor(public variablesService: VariablesService, private backend: BackendService) {}\n\n    getUpdate(): void {\n        this.backend.openUrlInBrowser(DOWNLOADS_PAGE_URL);\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { Transaction } from '@api/models/transaction.model';\nimport { VariablesService } from '../services/variables.service';\nimport { BackendService } from '@api/services/backend.service';\nimport { BLOCK_EXPLORER_TN_TX_URL_PREFIX, BLOCK_EXPLORER_TX_URL_PREFIX } from '../data/constants';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { TooltipModule } from '@parts/directives';\n\n@Component({\n    selector: 'app-transaction-details',\n    template: `\n        <table class=\"zano-table\">\n            <tbody>\n                <tr>\n                    <td>{{ 'HISTORY.DETAILS.ID' | translate }}</td>\n                    <td\n                        colspan=\"2\"\n                        (click)=\"openInBrowser(transaction.tx_hash)\"\n                        (contextmenu)=\"variablesService.onContextMenuOnlyCopy($event, transaction.tx_hash)\"\n                        class=\"color-primary cursor-pointer\"\n                    >\n                        {{ transaction.tx_hash }}\n                    </td>\n                    <td>{{ 'HISTORY.DETAILS.SIZE' | translate }}</td>\n                    <td>\n                        {{ 'HISTORY.DETAILS.SIZE_VALUE' | translate : { value: transaction.tx_blob_size } }}\n                    </td>\n                </tr>\n                <tr>\n                    <td>{{ 'Asset ID' | translate }}</td>\n                    <td colspan=\"2\" class=\"color-primary cursor-pointer\">\n                        <ng-container *ngFor=\"let asset_id of getAllUniqAssetId(transaction)\">\n                            <p class=\"text-ellipsis\" (contextmenu)=\"variablesService.onContextMenuOnlyCopy($event, asset_id)\">\n                                {{ asset_id }}\n                            </p>\n                        </ng-container>\n                    </td>\n                    <td>{{ 'HISTORY.DETAILS.CONFIRMATION' | translate }}</td>\n                    <td>\n                        {{ transaction.height === 0 ? 0 : variablesService.height_app - transaction.height }}\n                    </td>\n                </tr>\n                <tr>\n                    <td>{{ 'HISTORY.DETAILS.HEIGHT' | translate }}</td>\n                    <td colspan=\"2\">{{ transaction.height }}</td>\n                    <td colspan=\"2\"></td>\n                </tr>\n                <tr>\n                    <td>{{ 'HISTORY.DETAILS.PAYMENT_ID' | translate }}</td>\n                    <td\n                        colspan=\"4\"\n                        [delay]=\"500\"\n                        [showWhenNoOverflow]=\"false\"\n                        placement=\"top\"\n                        tooltip=\"{{ transaction.payment_id }}\"\n                        tooltipClass=\"table-tooltip comment-tooltip\"\n                    >\n                        {{ transaction.payment_id }}\n                    </td>\n                </tr>\n                <tr>\n                    <td>{{ 'HISTORY.DETAILS.COMMENT' | translate }}</td>\n                    <td\n                        colspan=\"4\"\n                        (contextmenu)=\"variablesService.onContextMenuOnlyCopy($event, transaction.comment)\"\n                        [delay]=\"500\"\n                        [showWhenNoOverflow]=\"false\"\n                        placement=\"top\"\n                        tooltip=\"{{ transaction.comment }}\"\n                        tooltipClass=\"table-tooltip comment-tooltip\"\n                    >\n                        {{ transaction.comment }}\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                padding: 2rem 0;\n            }\n            table tbody tr {\n                background: none;\n            }\n\n            table tbody tr td {\n                padding: 1rem 2rem;\n            }\n        `,\n    ],\n    standalone: true,\n    imports: [CommonModule, TranslateModule, TooltipModule],\n})\nexport class TransactionDetailsComponent {\n    @Input() transaction: Transaction;\n\n    constructor(public variablesService: VariablesService, private backendService: BackendService) {}\n\n    getAllUniqAssetId(transaction: Transaction): Set<string> {\n        const { employed_entries } = transaction;\n        const { receive = [], spent = [] } = employed_entries;\n        return new Set([...receive, ...spent].map(({ asset_id }) => asset_id));\n    }\n\n    openInBrowser(hash: string): void {\n        this.backendService.openUrlInBrowser(\n            (this.variablesService.testnet ? BLOCK_EXPLORER_TN_TX_URL_PREFIX : BLOCK_EXPLORER_TX_URL_PREFIX) + hash\n        );\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Subtransfer, Subtransfers, Transaction } from '@api/models/transaction.model';\nimport { ZANO_ASSET_INFO } from '@parts/data/assets';\nimport { isFinalizator, isInitiator, isSwapTransaction } from '@parts/functions/identify-transaction';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { TooltipModule } from '@parts/directives';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FlexModule } from '@angular/flex-layout';\n\n@Component({\n    selector: 'app-transaction-status',\n    standalone: true,\n    imports: [CommonModule, TooltipModule, TranslateModule, FlexModule],\n    templateUrl: './transaction-status.component.html',\n    styleUrls: ['./transaction-status.component.scss'],\n})\nexport class TransactionStatusComponent {\n    @Input() transaction: Transaction;\n\n    constructor(public variablesService: VariablesService) {}\n\n    isVisibleStatusBySubtransfer(subtransfer: Subtransfer, transaction: Transaction): boolean {\n        const { amount, asset_id, is_income } = subtransfer;\n        const { fee, subtransfers } = transaction;\n\n        if (subtransfers.length === 1 && asset_id === ZANO_ASSET_INFO.asset_id && is_income === false && amount.eq(fee)) {\n            return true;\n        }\n\n        if (asset_id === ZANO_ASSET_INFO.asset_id && isSwapTransaction(transaction) && isFinalizator(transaction)) {\n            return true;\n        }\n\n        return !(asset_id === ZANO_ASSET_INFO.asset_id && is_income === false && amount.eq(fee));\n    }\n\n    isIncome(subtransfer: Subtransfer, transaction: Transaction): boolean {\n        const { amount, asset_id, is_income } = subtransfer;\n        const { fee } = transaction;\n\n        if (isInitiator(transaction)) {\n            // Case: When the amount is less than the fee\n            const condition1 = asset_id === ZANO_ASSET_INFO.asset_id;\n            const condition2 = amount.isLessThan(fee);\n            const condition3 = !is_income;\n            if (condition1 && condition2 && condition3) {\n                return true;\n            }\n            // ---------------------------------------------\n        }\n\n        return is_income;\n    }\n\n    getHeight(item): number {\n        const { height_app } = this.variablesService;\n        if ((height_app - item.height >= 10 && item.height !== 0) || (item.is_mining === true && item.height === 0)) {\n            return 10;\n        } else {\n            if (item.height === 0 || height_app - item.height < 0) {\n                return 0;\n            } else {\n                return height_app - item.height;\n            }\n        }\n    }\n\n    strokeSize(item): number {\n        const rem = this.variablesService.settings.scale;\n        if ((this.variablesService.height_app - item.height >= 10 && item.height !== 0) || (item.is_mining === true && item.height === 0)) {\n            return 0;\n        } else {\n            if (item.height === 0 || this.variablesService.height_app - item.height < 0) {\n                return 4.5 * parseInt(rem, 10);\n            } else {\n                return (\n                    4.5 * parseInt(rem, 10) - ((4.5 * parseInt(rem, 10)) / 100) * ((this.variablesService.height_app - item.height) * 10)\n                );\n            }\n        }\n    }\n\n    isLocked(item: Transaction): boolean {\n        if (item.unlock_time > 500000000 && item.unlock_time > new Date().getTime() / 1000) {\n            return true;\n        }\n        return item.unlock_time < 500000000 && item.unlock_time > this.variablesService.height_max;\n    }\n\n    time(item: Transaction): number {\n        const now = new Date().getTime();\n        return now + (item.unlock_time - this.variablesService.height_max) * 60 * 1000;\n    }\n\n    hasZano(subtransfers: Subtransfers): boolean {\n        return Boolean(subtransfers.find(({ asset_id }) => asset_id === ZANO_ASSET_INFO.asset_id));\n    }\n\n    isInitiator(transaction: Transaction): boolean {\n        return isInitiator(transaction);\n    }\n}\n","<ng-container *ngIf=\"isInitiator(transaction) && !hasZano(transaction.subtransfers)\">\n    <div [ngClass]=\"'received'\" class=\"status text-ellipsis\" fxLayout=\"row\" fxLayoutAlign=\" center\">\n        <img alt=\"\" class=\"status-transaction mr-1\" src=\"assets/icons/aqua/receive.svg\" />\n\n        <span class=\"status-transaction-text\">{{ 'HISTORY.RECEIVED' | translate }}</span>\n    </div>\n</ng-container>\n\n<ng-container *ngIf=\"transaction.subtransfers; else noSubtransfersStatusTemplate\">\n    <ng-container *ngFor=\"let subtransfer of transaction.subtransfers\">\n        <ng-container *ngIf=\"isVisibleStatusBySubtransfer(subtransfer, transaction)\">\n            <div\n                [ngClass]=\"isIncome(subtransfer, transaction) ? 'received' : 'send'\"\n                class=\"status text-ellipsis\"\n                fxLayout=\"row\"\n                fxLayoutAlign=\" center\"\n            >\n                <!-- Progress -->\n                <ng-container *ngIf=\"getHeight(transaction) < 10\">\n                    <svg\n                        [delay]=\"500\"\n                        class=\"confirmation mr-1\"\n                        placement=\"bottom-left\"\n                        style=\"transform: rotateZ(-90deg)\"\n                        tooltip=\"{{ 'HISTORY.STATUS_TOOLTIP' | translate : { current: getHeight(transaction), total: 10 } }}\"\n                        tooltipClass=\"table-tooltip\"\n                    >\n                        <circle\n                            cx=\"50%\"\n                            cy=\"50%\"\n                            fill=\"transparent\"\n                            r=\"0.7rem\"\n                            stroke=\"rgba(31, 143, 235, 0.33)\"\n                            stroke-dasharray=\"100\"\n                            stroke-dashoffset=\"0\"\n                            stroke-width=\"0.3rem\"\n                        ></circle>\n                        <circle\n                            [style.stroke-dashoffset]=\"strokeSize(transaction)\"\n                            [style.stroke]=\"isIncome(subtransfer, transaction) ? '#16d1d6' : '#1f8feb'\"\n                            class=\"progress-circle\"\n                            cx=\"50%\"\n                            cy=\"50%\"\n                            fill=\"transparent\"\n                            r=\"0.7rem\"\n                            stroke-dasharray=\"4.5rem\"\n                            stroke-dashoffset=\"4.5rem\"\n                            stroke-linecap=\"round\"\n                            stroke-width=\"0.3rem\"\n                        ></circle>\n                    </svg>\n                </ng-container>\n\n                <!-- Status -->\n                <ng-container *ngIf=\"getHeight(transaction) === 10\">\n                    <img\n                        class=\"status-transaction mr-1\"\n                        [src]=\"isIncome(subtransfer, transaction) ? 'assets/icons/aqua/receive.svg' : 'assets/icons/blue/send.svg'\"\n                        alt=\"status\"\n                    />\n                </ng-container>\n                <span class=\"status-transaction-text\">{{\n                    (isIncome(subtransfer, transaction) ? 'HISTORY.RECEIVED' : 'HISTORY.SEND') | translate\n                }}</span>\n\n                <!-- Lock time -->\n                <ng-container *ngIf=\"transaction.unlock_time !== 0 && transaction.tx_type !== 6\">\n                    <ng-container *ngIf=\"isLocked(transaction); else unlock\">\n                        <ng-container *ngIf=\"transaction.unlock_time < 500000000\">\n                            <i\n                                [class.position]=\"\n                                    variablesService.height_app - transaction.height < 10 ||\n                                    (transaction.height === 0 && transaction.timestamp > 0)\n                                \"\n                                [delay]=\"500\"\n                                class=\"icon lock-transaction mr-1\"\n                                placement=\"bottom-left\"\n                                tooltip=\"{{ 'HISTORY.LOCK_TOOLTIP' | translate : { date: time(transaction) | date : 'MM.dd.yy' } }}\"\n                                tooltipClass=\"table-tooltip\"\n                            ></i>\n                        </ng-container>\n                        <ng-container *ngIf=\"transaction.unlock_time > 500000000\">\n                            <i\n                                [class.position]=\"\n                                    variablesService.height_app - transaction.height < 10 ||\n                                    (transaction.height === 0 && transaction.timestamp > 0)\n                                \"\n                                [delay]=\"500\"\n                                class=\"icon lock-transaction mr-1\"\n                                placement=\"bottom-left\"\n                                tooltip=\"{{\n                                    'HISTORY.LOCK_TOOLTIP'\n                                        | translate\n                                            : {\n                                                  date: transaction.unlock_time * 1000 | date : 'MM.dd.yy'\n                                              }\n                                }}\"\n                                tooltipClass=\"table-tooltip\"\n                            ></i>\n                        </ng-container>\n                    </ng-container>\n                    <ng-template #unlock>\n                        <i\n                            [class.position]=\"\n                                variablesService.height_app - transaction.height < 10 ||\n                                (transaction.height === 0 && transaction.timestamp > 0)\n                            \"\n                            class=\"icon unlock-transaction mr-1\"\n                        ></i>\n                    </ng-template>\n                </ng-container>\n            </div>\n        </ng-container>\n    </ng-container>\n</ng-container>\n\n<ng-template #noSubtransfersStatusTemplate>\n    <div [ngClass]=\"'received'\" class=\"status text-ellipsis\" fxLayout=\"row\" fxLayoutAlign=\" center\">\n        <img alt=\"\" class=\"status-transaction mr-1\" src=\"assets/icons/aqua/receive.svg\" />\n\n        <span class=\"status-transaction-text\">{{ 'HISTORY.RECEIVED' | translate }}</span>\n    </div>\n</ng-template>\n","import { Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@Component({\n    selector: 'zano-visibility-balance-button',\n    standalone: true,\n    imports: [CommonModule, MatIconModule, MatTooltipModule, TranslateModule],\n    templateUrl: './visibility-balance-button.component.html',\n    styleUrls: ['./visibility-balance-button.component.scss'],\n})\nexport class VisibilityBalanceButtonComponent {\n    public readonly variablesService: VariablesService = inject(VariablesService);\n}\n","<button\n    (click)=\"variablesService.visibilityBalance$.next(!variablesService.visibilityBalance$.value)\"\n    [matTooltipShowDelay]=\"800\"\n    [matTooltip]=\"\n        ((variablesService.visibilityBalance$ | async) ? 'WALLET.TOOLTIPS.HIDE_BALANCE' : 'WALLET.TOOLTIPS.SHOW_BALANCE') | translate\n    \"\n    class=\"btn-icon circle big\"\n>\n    <mat-icon [svgIcon]=\"(variablesService.visibilityBalance$ | async) ? 'zano-hide-balance' : 'zano-show-balance'\"> </mat-icon>\n</button>\n","import { Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { Wallet } from '@api/models/wallet.model';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { BigNumber } from 'bignumber.js';\nimport { LOCKED_BALANCE_HELP_PAGE } from '@parts/data/constants';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { IntToMoneyPipe, IntToMoneyPipeModule } from '@parts/pipes';\nimport { BackendService } from '@api/services/backend.service';\nimport { CommonModule } from '@angular/common';\nimport { DisablePriceFetchModule, TooltipModule } from '@parts/directives';\nimport { StakingSwitchComponent } from '@parts/components/staking-switch.component';\nimport { VisibilityBalanceDirective } from '@parts/directives/visibility-balance.directive';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ZANO_ASSET_INFO } from '@parts/data/assets';\nimport { AssetBalance } from '@api/models/assets.model';\nimport { intToMoney } from '@parts/functions/int-to-money';\n\n@Component({\n    selector: 'app-wallet-card',\n    templateUrl: './wallet-card.component.html',\n    standalone: true,\n    imports: [\n        CommonModule,\n        TooltipModule,\n        TranslateModule,\n        IntToMoneyPipeModule,\n        StakingSwitchComponent,\n        DisablePriceFetchModule,\n        VisibilityBalanceDirective,\n        MatIconModule,\n    ],\n})\nexport class WalletCardComponent {\n    @HostBinding('class') classAttr = 'wallet';\n\n    @Input() wallet: Wallet;\n\n    @Output() eventClose = new EventEmitter<number>();\n\n    protected readonly zanoAssetInfo = ZANO_ASSET_INFO;\n\n    constructor(\n        public variablesService: VariablesService,\n        private intToMoneyPipe: IntToMoneyPipe,\n        private translate: TranslateService,\n        private backend: BackendService\n    ) {}\n\n    getBalancesTooltip(): HTMLDivElement {\n        const tooltip = document.createElement('div');\n        const scrollWrapper = document.createElement('div');\n        if (!this.wallet || !this.wallet.balances) {\n            return null;\n        }\n        const { balances } = this.wallet;\n\n        scrollWrapper.classList.add('balance-scroll-list');\n        balances.forEach(({ unlocked, total, asset_info: { ticker } }) => {\n            const available = document.createElement('span');\n            available.setAttribute('class', 'available');\n            available.innerText = `${this.translate.instant('WALLET.AVAILABLE_BALANCE')} `;\n            const availableB = document.createElement('b');\n            availableB.innerText = `${this.intToMoneyPipe.transform(unlocked)} ${ticker || '---'}`;\n            available.appendChild(availableB);\n            scrollWrapper.appendChild(available);\n\n            const locked = document.createElement('span');\n            locked.setAttribute('class', 'locked');\n            locked.innerText = `${this.translate.instant('WALLET.LOCKED_BALANCE')} `;\n            const lockedB = document.createElement('b');\n            lockedB.innerText = `${this.intToMoneyPipe.transform(new BigNumber(total).minus(unlocked))} ${ticker || '---'}`;\n            locked.appendChild(lockedB);\n            scrollWrapper.appendChild(locked);\n        });\n        tooltip.appendChild(scrollWrapper);\n        const link = document.createElement('span');\n        link.setAttribute('class', 'link');\n        link.innerHTML = this.translate.instant('WALLET.LOCKED_BALANCE_LINK');\n        link.addEventListener('click', () => {\n            this.backend.openUrlInBrowser(LOCKED_BALANCE_HELP_PAGE);\n        });\n        tooltip.appendChild(link);\n        return tooltip;\n    }\n\n    getFiatValue(balance: AssetBalance): string | undefined {\n        const priceData = this.variablesService.currentPriceForAssets[balance.asset_info.asset_id]?.data;\n        if (!priceData || typeof priceData === 'string') return;\n\n        const { settings: { currency } } = this.variablesService;\n        const fiatPrice = priceData.fiat_prices?.[currency];\n\n        if (!fiatPrice) return;\n\n        const amount = intToMoney(balance.total, balance.asset_info.decimal_point);\n        const fiatValue = BigNumber(amount).multipliedBy(fiatPrice).toFixed(BigNumber(fiatPrice).decimalPlaces() ?? 10);\n\n        return `${fiatValue}`;\n    }\n\n    getFiatPrice(balance: AssetBalance): {\n        value: string | number;\n        currency: string;\n        change?: string;\n        changeClass?: string;\n        showChange?: boolean;\n    } | null {\n        const currentPrice = this.variablesService.currentPriceForAssets[balance.asset_info.asset_id];\n\n        if (!currentPrice || typeof currentPrice.data === 'string') return null;\n\n        const { settings: { currency } } = this.variablesService;\n\n        const result = {\n            value: this.getFiatValue(balance),\n            currency: currency.toUpperCase(),\n            showChange: false,\n        };\n\n        if (currency === 'usd') {\n            const change = currentPrice.data.usd_24h_change ?? 0;\n            return {\n                ...result,\n                showChange: change > 0 || change < 0,\n                change: change.toFixed(2),\n                changeClass: change > 0 ? 'color-aqua' : change < 0 ? 'color-red' : '',\n            };\n        }\n\n        return result;\n    }\n}\n","<div *ngIf=\"variablesService.testnet\" class=\"testnet\">Testnet</div>\n<div class=\"content\">\n    <div class=\"header\">\n        <div class=\"left\">\n            <div class=\"name text-ellipsis\">\n                <span *ngIf=\"wallet.new_contracts\" class=\"indicator\">\n                    {{ wallet.new_contracts }}\n                </span>\n\n                <span\n                    [delay]=\"500\"\n                    [showWhenNoOverflow]=\"false\"\n                    class=\"name\"\n                    placement=\"top-left\"\n                    tooltip=\"{{ wallet.name }}\"\n                    tooltipClass=\"table-tooltip account-tooltip\"\n                >\n                    {{ !wallet.alias_info?.alias ? wallet.name : '@' + wallet.alias_info?.alias }}\n                </span>\n            </div>\n        </div>\n        <div class=\"right\">\n            <button\n                (click)=\"eventClose.emit(wallet.wallet_id)\"\n                [delay]=\"500\"\n                [timeDelay]=\"500\"\n                class=\"close\"\n                placement=\"top\"\n                tooltip=\"{{ 'WALLET.TOOLTIPS.REMOVE' | translate }}\"\n                tooltipClass=\"table-tooltip account-tooltip\"\n                type=\"button\"\n            >\n                <mat-icon svgIcon=\"zano-close\"></mat-icon>\n            </button>\n        </div>\n    </div>\n\n    <h4 class=\"text-ellipsis overflow-hidden\">\n        <ng-container *ngIf=\"wallet.getBalanceByTicker('ZANO') as balance\">\n            <ng-container *appVisibilityBalance>\n                <span\n                    *appDisablePriceFetch\n                    [delay]=\"500\"\n                    [placement]=\"'bottom'\"\n                    [timeDelay]=\"1000\"\n                    [tooltipClass]=\"'balance-tooltip'\"\n                    [tooltip]=\"getBalancesTooltip()\"\n                    class=\"price\"\n                >\n                    <ng-container *ngIf=\"getFiatPrice(balance) as price\">\n                        <div class=\"text-ellipsis overflow-hidden\">{{ price.value }}</div>\n                        <span class=\"currency ml-0_5\">{{ price.currency.toUpperCase() }}</span>\n                        <!--<span *ngIf=\"price.showChange\" [ngClass]=\"price.changeClass\" class=\"percent ml-0_5\"> {{ price.change }} % </span>-->\n                    </ng-container>\n                </span>\n            </ng-container>\n        </ng-container>\n    </h4>\n\n    <ng-container *ngIf=\"(!wallet.is_auditable && !wallet.is_watch_only) || (wallet.is_auditable && !wallet.is_watch_only)\">\n        <div *ngIf=\"!(!wallet.loaded && variablesService.daemon_state === 2)\" class=\"staking\">\n            <span class=\"text\">{{ 'SIDEBAR.ACCOUNT.STAKING' | translate }}</span>\n            <app-staking-switch [(staking)]=\"wallet.staking\" [wallet_id]=\"wallet.wallet_id\"></app-staking-switch>\n        </div>\n    </ng-container>\n\n    <div *ngIf=\"!wallet.loaded && variablesService.daemon_state === 2\" class=\"account-synchronization\">\n        <div class=\"progress-bar\">\n            <div [style.width]=\"wallet.progress + '%'\" class=\"fill\"></div>\n        </div>\n        <div class=\"progress-percent\">{{ wallet.progress }}%</div>\n    </div>\n</div>\n","import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexModule } from '@angular/flex-layout';\nimport { VariablesService } from '@parts/services/variables.service';\n\n@Component({\n    selector: 'zano-zano-logo',\n    standalone: true,\n    imports: [CommonModule, FlexModule],\n    templateUrl: './zano-logo.component.html',\n    styleUrls: ['./zano-logo.component.scss'],\n})\nexport class ZanoLogoComponent {\n    constructor(public variablesService: VariablesService) {}\n}\n","<div class=\"logo\">\n    <ng-container *ngIf=\"variablesService.settings.isDarkTheme; else lightZanoLogoTemplate\">\n        <img alt=\"zano-logo\" src=\"assets/icons/blue/zano-logo.svg\" />\n    </ng-container>\n\n    <ng-template #lightZanoLogoTemplate>\n        <img alt=\"zano-logo\" src=\"assets/icons/blue/light-zano-logo.svg\" />\n    </ng-template>\n\n    <ng-container *ngIf=\"variablesService.testnet\">\n        <div class=\"testnet\">TESTNET</div>\n    </ng-container>\n</div>\n","import { AssetInfo } from '@api/models/assets.model';\n\nexport type ZanoAssetInfo = AssetInfo & { logo: string; price_url: string };\n\nexport const ZANO_ASSET_INFO: ZanoAssetInfo = {\n    asset_id: 'd6329b5b1f7c0805b5c345f4957554002a2f557845f64d7645dae0e051a6498a',\n    current_supply: 0,\n    decimal_point: 12,\n    full_name: 'Zano',\n    logo: 'assets/currency-icons/zano.svg',\n    meta_info: '',\n    owner: '0000000000000000000000000000000000000000000000000000000000000000',\n    price_url: 'https://explorer.zano.org/api/price?asset=zano',\n    ticker: 'ZANO',\n    total_max_supply: 0,\n};\n\nexport const DEFAULT_ASSET_LOGO_SRC = 'assets/currency-icons/custom_token.svg';\n","import { BigNumber } from 'bignumber.js';\n\n// \\(2^{64}-1\\) => (18,446,744,073,709,551,615)\nexport const MAXIMUM_VALUE: BigNumber = new BigNumber('18446744073709551615');\nexport const MIXIN = 15; // default mixin value\nexport const RCV_ADDR_QR_SCALE = 1.5; // scale factor for QR code\n\nexport const AUDITABLE_WALLET_HELP_PAGE = 'docs.zano.org/docs/use/auditable-wallets-faq';\nexport const CREATE_NEW_WALLET_HELP_PAGE = 'docs.zano.org/docs/use/wallets/gui-wallet';\nexport const LOCKED_BALANCE_HELP_PAGE = 'docs.zano.org/docs/use/locked-balance';\nexport const DOWNLOADS_PAGE_URL = 'zano.org/downloads';\nexport const ZARCANUM_MIGRATION = 'docs.zano.org/docs/use/zarcanum-migration/';\n\nexport const BLOCK_EXPLORER_TX_URL_PREFIX = 'explorer.zano.org/transaction/';\nexport const BLOCK_EXPLORER_TN_TX_URL_PREFIX = 'testnet-explorer.zano.org/transaction/';\n\nexport const MAX_WALLET_NAME_LENGTH = 25;\nexport const MAX_COMMENT_LENGTH = 255;\n","import { ScaleItems } from '@api/models/scale.model';\n\nexport const scaleItems: ScaleItems = [\n    {\n        value: '8px',\n        name: 'SETTINGS.SCALE.75',\n    },\n    {\n        value: '10px',\n        name: 'SETTINGS.SCALE.100',\n    },\n    {\n        value: '12px',\n        name: 'SETTINGS.SCALE.125',\n    },\n    {\n        value: '14px',\n        name: 'SETTINGS.SCALE.150',\n    },\n];\n","import { AfterViewInit, Directive, ElementRef } from '@angular/core';\n\n@Directive({\n    selector: '[appAutofocus]',\n    standalone: true,\n})\nexport class AutoFocusDirective implements AfterViewInit {\n    constructor(private elementRef: ElementRef) {}\n\n    ngAfterViewInit(): void {\n        setTimeout(() => this.elementRef.nativeElement.focus());\n    }\n}\n","import { Directive, HostListener } from '@angular/core';\nimport { NavigationService } from '@parts/services/back.service';\n\n@Directive({\n    selector: '[appBackButton]',\n})\nexport class BackButtonDirective {\n    constructor(private navigationService: NavigationService) {}\n\n    @HostListener('click')\n    onClick(): void {\n        this.navigationService.back();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BackButtonDirective } from './back-button.directive';\n\n@NgModule({\n    declarations: [BackButtonDirective],\n    exports: [BackButtonDirective],\n    imports: [CommonModule],\n})\nexport class BackButtonModule {}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\n@Directive({\n    selector: '[appDefaultImg]',\n})\nexport class DefaultImgDirective {\n    @Input() defaultImgSrc!: string | null | undefined;\n    @Input() defaultImgAlt: string | null | undefined;\n\n    constructor(private elementRef: ElementRef) {}\n\n    @HostListener('error')\n    handlerOnError(): void {\n        const elementImg: HTMLImageElement = <HTMLImageElement>this.elementRef.nativeElement;\n        elementImg.onerror = null;\n        elementImg.src = this.defaultImgSrc || '---';\n        elementImg.alt = this.defaultImgAlt || '---';\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DefaultImgDirective } from './default-img.directive';\n\n@NgModule({\n    declarations: [DefaultImgDirective],\n    exports: [DefaultImgDirective],\n    imports: [CommonModule],\n})\nexport class DefaultImgModule {}\n","export * from './default-img.module';\n","import { Directive, OnDestroy, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { VariablesService } from '../../services/variables.service';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n@Directive({\n    selector: '[appDisablePriceFetch]',\n})\nexport class DisablePriceFetchDirective implements OnDestroy {\n    private destroy$: Subject<void> = new Subject<void>();\n\n    constructor(\n        private _variablesService: VariablesService,\n        private _templateRef: TemplateRef<any>,\n        private _viewContainer: ViewContainerRef\n    ) {\n        this._variablesService.disable_price_fetch$.pipe(distinctUntilChanged(), takeUntil(this.destroy$)).subscribe({\n            next: (disable_price_fetch: boolean) => {\n                this._viewContainer.clear();\n                if (!disable_price_fetch) {\n                    this._viewContainer.createEmbeddedView(this._templateRef);\n                }\n            },\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DisablePriceFetchDirective } from './disable-price-fetch.directive';\n\n@NgModule({\n    declarations: [DisablePriceFetchDirective],\n    imports: [CommonModule],\n    exports: [DisablePriceFetchDirective],\n})\nexport class DisablePriceFetchModule {}\n","export * from './disable-price-fetch.directive';\nexport * from './disable-price-fetch.module';\n","export * from './default-img';\nexport * from './disable-price-fetch';\nexport * from './input-disable-selection';\nexport * from './input-validate';\nexport * from './tooltip';\nexport * from './lower-case.directive';\n","export * from './input-disable-selection.module';\nexport * from './input-disable-selection.directive';\n","import { Directive, HostListener } from '@angular/core';\n\n@Directive({\n    // eslint-disable-next-line\n    selector: 'input',\n})\nexport class InputDisableSelectionDirective {\n    @HostListener('mousedown', ['$event'])\n    handleInput(event: Event): void {\n        if ((<HTMLInputElement>event.target).readOnly) {\n            event.preventDefault();\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InputDisableSelectionDirective } from '@parts/directives/input-disable-selection/input-disable-selection.directive';\n\n@NgModule({\n    declarations: [InputDisableSelectionDirective],\n    exports: [InputDisableSelectionDirective],\n    imports: [CommonModule],\n})\nexport class InputDisableSelectionModule {}\n","export * from './input-validate.module';\nexport * from './input-validate.directive';\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\nimport { VariablesService } from '../../services/variables.service';\nimport { BigNumber } from 'bignumber.js';\n\n@Directive({\n    selector: '[appInputValidate]',\n})\nexport class InputValidateDirective {\n    constructor(private el: ElementRef, private variablesService: VariablesService) {}\n\n    @Input('appInputValidate')\n    public type: 'money' | 'integer';\n\n    private _decimalPoint: number = this.variablesService.decimal_point;\n\n    @Input()\n    public set decimalPoint(value: number) {\n        this._decimalPoint = value;\n        this._formatValue();\n    }\n\n    @HostListener('input', ['$event'])\n    handleInput(): void {\n        this._formatValue();\n    }\n\n    private _formatValue(): void {\n        switch (this.type) {\n            case 'money': {\n                return this._money();\n            }\n            case 'integer': {\n                return this._integer();\n            }\n        }\n    }\n\n    private _prepareToMoney(value: string): string {\n        let currentValue = value;\n        // eslint-disable-next-line\n        const OnlyD = /[^\\d\\.]/g;\n        const _has_error = currentValue.match(OnlyD);\n        if (_has_error && _has_error.length) {\n            currentValue = currentValue.replace(',', '.').replace(OnlyD, '');\n        }\n        const _double_separator = currentValue.match(/\\./g);\n        if (_double_separator && _double_separator.length > 1) {\n            currentValue = currentValue.substr(0, currentValue.lastIndexOf('.'));\n        }\n\n        if (currentValue.length > 1 && currentValue.indexOf('.') !== 1 && currentValue.indexOf('0') === 0) {\n            currentValue = new BigNumber(currentValue).toString();\n        }\n\n        if (currentValue.indexOf('.') === 0) {\n            currentValue = '0' + currentValue;\n        }\n        const _zero_fill = currentValue.split('.');\n        if (_zero_fill[0].length > 20) {\n            _zero_fill[0] = _zero_fill[0].substr(0, 20);\n        }\n\n        if (1 in _zero_fill && _zero_fill[1].length) {\n            _zero_fill[1] = _zero_fill[1].substr(0, this._decimalPoint);\n        }\n        return this._decimalPoint ? _zero_fill.join('.') : _zero_fill[0];\n    }\n\n    private _money(): void {\n        const value: string = this.el.nativeElement.value;\n        const originalValue: string = value;\n        const preparedValue: string = this._prepareToMoney(value);\n\n        if (preparedValue !== originalValue) {\n            this._setValue(preparedValue);\n        }\n    }\n\n    private _integer(): void {\n        let preparedValue = this.el.nativeElement.value;\n        const originalValue = preparedValue;\n        const OnlyD = /\\D/g;\n        const _has_error = preparedValue.match(OnlyD);\n        if (_has_error && _has_error.length) {\n            preparedValue = preparedValue.replace(OnlyD, '');\n        }\n        if (preparedValue !== originalValue) {\n            this._setValue(preparedValue);\n        }\n    }\n\n    private _setValue(value: string): void {\n        this.el.nativeElement.value = value;\n        const cursorPosition = this.el.nativeElement.selectionEnd;\n        this.el.nativeElement.setSelectionRange(cursorPosition, cursorPosition);\n        this.el.nativeElement.dispatchEvent(new Event('input'));\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InputValidateDirective } from '@parts/directives/input-validate/input-validate.directive';\n\n@NgModule({\n    declarations: [InputValidateDirective],\n    exports: [InputValidateDirective],\n    imports: [CommonModule],\n})\nexport class InputValidateModule {}\n","import { Directive, HostListener, Input } from '@angular/core';\n\n@Directive({\n    selector: 'input[lowerCase]:not([upperCase]),textarea[lowerCase]:not([upperCase])',\n    standalone: true,\n})\nexport class LowerCaseDirective {\n    @Input() lowerCaseValue: string;\n\n    @Input() lowerCaseDisabled = false;\n\n    private getCaret(el): { start: any; end: any } {\n        return {\n            start: el.selectionStart,\n            end: el.selectionEnd,\n        };\n    }\n\n    private setCaret(el, start, end): void {\n        el.selectionStart = start;\n        el.selectionEnd = end;\n\n        el.focus();\n    }\n\n    private dispatchEvent(el, eventType): void {\n        const event = document.createEvent('Event');\n        event.initEvent(eventType, false, false);\n        el.dispatchEvent(event);\n    }\n\n    private convertValue(el, value): void {\n        el.value = value.toLowerCase();\n\n        this.dispatchEvent(el, 'input');\n    }\n\n    @HostListener('blur', ['$event.target', '$event.target.value'])\n    onBlur(el: any, value: string): void {\n        if (this.lowerCaseDisabled) {\n            return;\n        }\n        if (\n            (!this.lowerCaseValue || 'blur' === this.lowerCaseValue) &&\n            'function' === typeof value.toLowerCase &&\n            value.toLowerCase() !== value\n        ) {\n            this.convertValue(el, value);\n            this.dispatchEvent(el, 'blur'); // in case updateOn is set to blur\n        }\n    }\n\n    @HostListener('input', ['$event.target', '$event.target.value'])\n    onInput(el: any, value: string): void {\n        if (this.lowerCaseDisabled) {\n            return;\n        }\n        if (!this.lowerCaseValue && 'function' === typeof value.toLowerCase && value.toLowerCase() !== value) {\n            let { start, end } = this.getCaret(el);\n\n            if (value[0] === ' ' && start === 1 && end === 1) {\n                start = 0;\n                end = 0;\n            }\n\n            this.convertValue(el, value);\n\n            this.setCaret(el, start, end);\n        }\n    }\n}\n","export * from './tooltip.directive';\nexport * from './tooltip.module';\n","import {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    HostListener,\n    Input,\n    OnDestroy,\n    Output,\n    Renderer2,\n    SecurityContext,\n    TemplateRef,\n    ViewContainerRef,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Directive({\n    // eslint-disable-next-line\n    selector: '[tooltip]',\n})\nexport class TooltipDirective implements OnDestroy {\n    @HostBinding('style.cursor') cursor;\n\n    @Input('tooltip') tooltipInner: any;\n\n    @Input() placement: string;\n\n    @Input() tooltipClass: string;\n\n    @Input() timeout = 0;\n\n    @Input() timeDelay = 0;\n\n    @Input() delay = 0;\n\n    @Input() showWhenNoOverflow = true;\n\n    @Output() eventHide = new EventEmitter<boolean>();\n\n    tooltip: HTMLElement;\n\n    removeTooltipTimeout;\n\n    removeTooltipTimeoutInner;\n\n    removeTooltipTimeDelay;\n\n    private enter: (event: MouseEvent) => void;\n\n    private leave: (event: MouseEvent) => void;\n\n    constructor(\n        private el: ElementRef,\n        private renderer: Renderer2,\n        private sanitizer: DomSanitizer,\n        private viewContainerRef: ViewContainerRef\n    ) {}\n\n    @HostListener('mouseenter') onMouseEnter(): void {\n        if (!this.tooltipInner) {\n            return;\n        }\n        if (\n            this.showWhenNoOverflow ||\n            (!this.showWhenNoOverflow && this.el.nativeElement.offsetWidth < this.el.nativeElement.scrollWidth)\n        ) {\n            this.cursor = 'pointer';\n            if (!this.tooltip) {\n                if (this.timeDelay !== 0) {\n                    this.removeTooltipTimeDelay = setTimeout(() => {\n                        this.show();\n                    }, this.timeDelay);\n                } else {\n                    this.show();\n                }\n            } else {\n                this.cancelHide();\n            }\n        }\n    }\n\n    @HostListener('mouseleave') onMouseLeave(): void {\n        clearTimeout(this.removeTooltipTimeDelay);\n        if (this.tooltip) {\n            this.hide();\n        }\n    }\n\n    show(): void {\n        this.create();\n        this.placement = this.placement === null ? 'top' : this.placement;\n        window.setTimeout(() => {\n            this.setPosition(this.placement);\n        }, 0);\n    }\n\n    hide(): void {\n        this.removeTooltipTimeout = setTimeout(() => {\n            this.renderer.setStyle(this.tooltip, 'opacity', '0');\n            this.removeTooltipTimeoutInner = setTimeout(() => {\n                this.renderer.removeChild(document.body, this.tooltip);\n                this.tooltip.removeEventListener('mouseenter', this.enter);\n                this.tooltip.removeEventListener('mouseleave', this.leave);\n                this.tooltip = null;\n                this.eventHide.emit(true);\n            }, this.delay);\n        }, this.timeout);\n    }\n\n    cancelHide(): void {\n        clearTimeout(this.removeTooltipTimeout);\n        clearTimeout(this.removeTooltipTimeoutInner);\n        if (this.tooltip) {\n            this.renderer.setStyle(this.tooltip, 'opacity', '1');\n        }\n    }\n\n    create(): void {\n        this.tooltip = this.renderer.createElement('div');\n        let innerBlock = this.renderer.createElement('div');\n        if (typeof this.tooltipInner === 'string') {\n            innerBlock.innerHTML = this.sanitizer.sanitize(SecurityContext.HTML, this.tooltipInner);\n        } else {\n            if (this.tooltipInner instanceof TemplateRef) {\n                const view = this.viewContainerRef.createEmbeddedView(this.tooltipInner);\n                view.rootNodes.forEach((node) => this.renderer.appendChild(innerBlock, node));\n            } else {\n                innerBlock = this.tooltipInner;\n            }\n        }\n        this.renderer.addClass(innerBlock, 'tooltip-inner');\n        this.renderer.addClass(innerBlock, 'scrolled-content');\n        this.renderer.appendChild(this.tooltip, innerBlock);\n        this.renderer.appendChild(document.body, this.tooltip);\n\n        this.enter = (): void => {\n            this.cancelHide();\n        };\n        this.tooltip.addEventListener('mouseenter', this.enter);\n        this.leave = (): void => {\n            if (this.tooltip) {\n                this.hide();\n            }\n        };\n        this.tooltip.addEventListener('mouseleave', this.leave);\n\n        this.renderer.setStyle(document.body, 'position', 'relative');\n        this.renderer.setStyle(this.tooltip, 'position', 'absolute');\n        if (this.tooltipClass !== null) {\n            const classes = this.tooltipClass?.split(' ') ?? [];\n            for (let i = 0; i < classes.length; i++) {\n                this.renderer.addClass(this.tooltip, classes[i]);\n            }\n        }\n        this.renderer.setStyle(this.tooltip, 'opacity', '0');\n        this.renderer.setStyle(this.tooltip, '-webkit-transition', `opacity ${this.delay}ms`);\n        this.renderer.setStyle(this.tooltip, '-moz-transition', `opacity ${this.delay}ms`);\n        this.renderer.setStyle(this.tooltip, '-o-transition', `opacity ${this.delay}ms`);\n        this.renderer.setStyle(this.tooltip, 'transition', `opacity ${this.delay}ms`);\n        window.setTimeout(() => {\n            return this.tooltip && this.renderer.setStyle(this.tooltip, 'opacity', '1');\n        }, 0);\n    }\n\n    setPosition(placement): void {\n        const hostPos = this.el.nativeElement.getBoundingClientRect();\n        this.renderer.addClass(this.tooltip, 'ng-tooltip-' + placement);\n        const topExit =\n            hostPos.top - this.tooltip.getBoundingClientRect().height - parseInt(getComputedStyle(this.tooltip).marginTop, 10) < 0;\n        const bottomExit =\n            window.innerHeight <\n            hostPos.bottom + this.tooltip.getBoundingClientRect().height + parseInt(getComputedStyle(this.tooltip).marginTop, 10);\n\n        switch (placement) {\n            case 'top':\n                if (topExit) {\n                    this.renderer.removeClass(this.tooltip, 'ng-tooltip-' + placement);\n                    this.setPosition('bottom');\n                    return;\n                } else {\n                    this.renderer.setStyle(\n                        this.tooltip,\n                        'left',\n                        hostPos.left + (hostPos.right - hostPos.left) / 2 - this.tooltip.getBoundingClientRect().width / 2 + 'px'\n                    );\n                    this.renderer.setStyle(this.tooltip, 'top', hostPos.top - this.tooltip.getBoundingClientRect().height + 'px');\n                    this.checkSides();\n                }\n                break;\n            case 'top-left':\n                if (topExit) {\n                    this.renderer.removeClass(this.tooltip, 'ng-tooltip-' + placement);\n                    this.setPosition('bottom-left');\n                    return;\n                } else {\n                    this.renderer.setStyle(this.tooltip, 'left', hostPos.left + 'px');\n                    this.renderer.setStyle(this.tooltip, 'top', hostPos.top - this.tooltip.getBoundingClientRect().height + 'px');\n                    this.checkSides();\n                }\n                break;\n            case 'top-right':\n                if (topExit) {\n                    this.renderer.removeClass(this.tooltip, 'ng-tooltip-' + placement);\n                    this.setPosition('bottom-right');\n                    return;\n                } else {\n                    this.renderer.setStyle(this.tooltip, 'left', hostPos.right - this.tooltip.offsetWidth + 'px');\n                    this.renderer.setStyle(this.tooltip, 'top', hostPos.top - this.tooltip.getBoundingClientRect().height + 'px');\n                    this.checkSides();\n                }\n                break;\n            case 'bottom':\n                if (bottomExit) {\n                    this.renderer.removeClass(this.tooltip, 'ng-tooltip-' + placement);\n                    this.setPosition('top');\n                    return;\n                } else {\n                    this.renderer.setStyle(this.tooltip, 'top', hostPos.bottom + 'px');\n                    this.renderer.setStyle(\n                        this.tooltip,\n                        'left',\n                        hostPos.left + (hostPos.right - hostPos.left) / 2 - this.tooltip.getBoundingClientRect().width / 2 + 'px'\n                    );\n                    this.checkSides();\n                }\n                break;\n            case 'bottom-left':\n                if (bottomExit) {\n                    this.renderer.removeClass(this.tooltip, 'ng-tooltip-' + placement);\n                    this.setPosition('top-left');\n                    return;\n                } else {\n                    this.renderer.setStyle(this.tooltip, 'top', hostPos.bottom + 'px');\n                    this.renderer.setStyle(this.tooltip, 'left', hostPos.left + 'px');\n                    this.checkSides();\n                }\n                break;\n            case 'bottom-right':\n                if (bottomExit) {\n                    this.renderer.removeClass(this.tooltip, 'ng-tooltip-' + placement);\n                    this.setPosition('top-right');\n                    return;\n                } else {\n                    this.renderer.setStyle(this.tooltip, 'top', hostPos.bottom + 'px');\n                    this.renderer.setStyle(this.tooltip, 'left', hostPos.right - this.tooltip.offsetWidth + 'px');\n                    this.checkSides();\n                }\n                break;\n            case 'left':\n                this.renderer.setStyle(this.tooltip, 'left', hostPos.left - this.tooltip.getBoundingClientRect().width + 'px');\n                this.renderer.setStyle(\n                    this.tooltip,\n                    'top',\n                    hostPos.top + (hostPos.bottom - hostPos.top) / 2 - this.tooltip.getBoundingClientRect().height / 2 + 'px'\n                );\n                break;\n            case 'left-top':\n                this.renderer.setStyle(this.tooltip, 'top', hostPos.top + 'px');\n                this.renderer.setStyle(this.tooltip, 'left', hostPos.left - this.tooltip.getBoundingClientRect().width + 'px');\n                break;\n            case 'left-bottom':\n                this.renderer.setStyle(this.tooltip, 'left', hostPos.left - this.tooltip.getBoundingClientRect().width + 'px');\n                this.renderer.setStyle(this.tooltip, 'top', hostPos.bottom - this.tooltip.getBoundingClientRect().height + 'px');\n                break;\n            case 'right':\n                this.renderer.setStyle(this.tooltip, 'left', hostPos.right + 'px');\n                this.renderer.setStyle(\n                    this.tooltip,\n                    'top',\n                    hostPos.top + (hostPos.bottom - hostPos.top) / 2 - this.tooltip.getBoundingClientRect().height / 2 + 'px'\n                );\n                break;\n            case 'right-top':\n                this.renderer.setStyle(this.tooltip, 'top', hostPos.top + 'px');\n                this.renderer.setStyle(this.tooltip, 'left', hostPos.right + 'px');\n                break;\n            case 'right-bottom':\n                this.renderer.setStyle(this.tooltip, 'left', hostPos.right + 'px');\n                this.renderer.setStyle(this.tooltip, 'top', hostPos.bottom - this.tooltip.getBoundingClientRect().height + 'px');\n                break;\n        }\n    }\n\n    checkSides(): void {\n        if (this.tooltip.getBoundingClientRect().left < 0) {\n            this.renderer.setStyle(this.tooltip, 'left', 0);\n        }\n        if (this.tooltip.getBoundingClientRect().right > window.innerWidth) {\n            this.renderer.setStyle(this.tooltip, 'left', window.innerWidth - this.tooltip.getBoundingClientRect().width + 'px');\n        }\n    }\n\n    ngOnDestroy(): void {\n        clearTimeout(this.removeTooltipTimeout);\n        clearTimeout(this.removeTooltipTimeoutInner);\n        clearTimeout(this.removeTooltipTimeDelay);\n        if (this.tooltip) {\n            this.renderer.removeChild(document.body, this.tooltip);\n            this.tooltip = null;\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TooltipDirective } from './tooltip.directive';\n\n@NgModule({\n    declarations: [TooltipDirective],\n    imports: [CommonModule],\n    exports: [TooltipDirective],\n})\nexport class TooltipModule {}\n","import { Component, Directive, inject, OnDestroy, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { VariablesService } from '../services/variables.service';\n\n@Component({\n    selector: 'app-hidden',\n    template: `******`,\n    standalone: true,\n})\nclass HiddenComponent {}\n\n@Directive({\n    selector: '[appVisibilityBalance]',\n    standalone: true,\n})\nexport class VisibilityBalanceDirective implements OnInit, OnDestroy {\n    private _variablesService: VariablesService = inject(VariablesService);\n    private _templateRef: TemplateRef<any> = inject(TemplateRef);\n    private _viewContainer: ViewContainerRef = inject(ViewContainerRef);\n    private _destroy$: Subject<void> = new Subject<void>();\n\n    ngOnInit(): void {\n        this._variablesService.visibilityBalance$.pipe(distinctUntilChanged(), takeUntil(this._destroy$)).subscribe({\n            next: (visibility: boolean) => {\n                this._viewContainer.clear();\n                if (visibility) {\n                    this._viewContainer.createEmbeddedView(this._templateRef);\n                } else {\n                    this._viewContainer.createComponent(HiddenComponent);\n                }\n            },\n        });\n    }\n\n    ngOnDestroy(): void {\n        this._destroy$.next();\n        this._destroy$.complete();\n    }\n}\n","import { Subtransfer, Transaction } from '@api/models/transaction.model';\nimport { Wallet } from '@api/models/wallet.model';\nimport { intToMoney } from '@parts/functions/int-to-money';\nimport { AssetInfo } from '@api/models/assets.model';\nimport { ZANO_ASSET_INFO } from '@parts/data/assets';\nimport { isFinalizator, isInitiator, isSelfTransaction, isSwapTransaction } from '@parts/functions/identify-transaction';\n\nexport interface AmountItem {\n    amount: string;\n    ticker: string;\n}\n\nexport type AmountItems = AmountItem[];\n\nexport const getAmountItems = (transaction: Transaction, wallet: Wallet): AmountItems => {\n    const { subtransfers, fee } = transaction;\n\n    const items: { amount: string; ticker: string }[] = [];\n\n    if (!subtransfers?.length) {\n        items.push({ amount: '0', ticker: ZANO_ASSET_INFO.ticker });\n        return items;\n    }\n\n    if (isInitiator(transaction) && !Boolean(subtransfers.find(({ asset_id }) => asset_id === ZANO_ASSET_INFO.asset_id))) {\n        const preparedAmount: string = intToMoney(fee, ZANO_ASSET_INFO.decimal_point);\n        items.push({ amount: preparedAmount, ticker: ZANO_ASSET_INFO.ticker });\n    }\n\n    subtransfers.forEach((subtransfer: Subtransfer) => {\n        const { asset_id, amount, is_income } = subtransfer;\n        const asset_info: AssetInfo | undefined = wallet.allAssetsInfo.find((v) => asset_id === v.asset_id);\n\n        if (!asset_info) {\n            if (amount.toNumber() === 0) {\n                return;\n            }\n\n            const preparedAmount: string = (is_income ? amount : amount.negated()).toString();\n            items.push({ amount: preparedAmount, ticker: '***' });\n            return;\n        }\n\n        const { ticker, decimal_point } = asset_info;\n\n        if (asset_id !== ZANO_ASSET_INFO.asset_id) {\n            if (amount.toNumber() === 0) {\n                return;\n            }\n\n            const preparedAmount: string = intToMoney(is_income ? amount : amount.negated(), decimal_point);\n            items.push({ amount: preparedAmount, ticker });\n            return;\n        }\n\n        if (asset_id === ZANO_ASSET_INFO.asset_id) {\n            const { address } = wallet;\n\n            const selfTransaction: boolean = isSelfTransaction(transaction, address);\n            const swapTransaction: boolean = isSwapTransaction(transaction);\n            const finalizator: boolean = isFinalizator(transaction);\n            const initiator: boolean = isInitiator(transaction);\n\n            const condition_1: boolean = !amount.eq(fee ?? 0) || selfTransaction || (swapTransaction && finalizator);\n            const condition_2: boolean = amount.toNumber() !== 0;\n\n            if (!is_income ? condition_1 : condition_2) {\n                let preparedAmount!: string;\n\n                if (is_income) {\n                    preparedAmount = intToMoney(initiator ? amount.plus(fee) : amount, decimal_point);\n                } else {\n                    preparedAmount = intToMoney((initiator ? amount.minus(fee ?? 0) : amount).negated(), decimal_point);\n                }\n\n                items.push({ amount: preparedAmount, ticker });\n                return;\n            }\n        }\n    });\n\n    return items;\n};\n","import { AssetInfo } from '@api/models/assets.model';\nimport { DEFAULT_ASSET_LOGO_SRC } from '@parts/data/assets';\n\nexport const getLogoTemplateByAssetInfo = ({ logo, ticker }: AssetInfo): string => {\n    if (logo.includes('<svg')) {\n        return logo;\n    } else {\n        return `<img alt=\"${ticker}\" src=\"${logo ?? DEFAULT_ASSET_LOGO_SRC}\"/>`;\n    }\n};\n","export const hasOwnProperty = (obj: object, key: string): boolean => {\n    if (Boolean(obj) && Boolean(key)) {\n        return Object.prototype.hasOwnProperty.call(obj, key);\n    }\n    return false;\n};\n","import { Transaction } from '@api/models/transaction.model';\nimport { ZANO_ASSET_INFO } from '@parts/data/assets';\n\nexport const isInitiator = (transaction: Transaction): boolean => {\n    const {\n        employed_entries: { spent = [] },\n    } = transaction;\n    return Boolean(\n        spent?.find(({ index }) => {\n            return index === 0;\n        })\n    );\n};\n\nexport const isFinalizator = (transaction: Transaction): boolean => {\n    return !isInitiator(transaction);\n};\n\nexport const isSelfTransaction = (transaction: Transaction, address: string): boolean => {\n    const {\n        remote_addresses,\n        employed_entries: { receive, spent },\n        subtransfers,\n        fee,\n    } = transaction;\n\n    const condition1 = remote_addresses?.includes(address);\n    const condition2 = [...(receive ?? []), ...(spent ?? [])].map(({ asset_id }) => asset_id === ZANO_ASSET_INFO.asset_id).every(Boolean);\n    const condition3 =\n        subtransfers?.length === 1 && subtransfers[0].asset_id === ZANO_ASSET_INFO.asset_id && subtransfers[0].amount.eq(fee);\n\n    return condition1 && condition2 && condition3;\n};\n\nexport const isSwapTransaction = (transaction: Transaction): boolean => {\n    const { subtransfers } = transaction;\n    const arr = subtransfers.map(({ is_income }) => is_income);\n    const condition1 = arr.some((value) => value);\n    const condition2 = arr.some((value) => !value);\n    return condition1 && condition2;\n};\n","import { BigNumber } from 'bignumber.js';\n\nexport const intToMoney = (value: number | string | BigNumber, decimal_point?: any): string => {\n    if (value === 0 || value === undefined) {\n        return '0';\n    }\n    let maxFraction = 12;\n    if (decimal_point !== undefined && decimal_point !== null) {\n        maxFraction = parseInt(decimal_point, 10);\n    }\n    const power = Math.pow(10, maxFraction);\n    let str = new BigNumber(value).div(power).toFixed(maxFraction, 1);\n\n    if (maxFraction != 0) {\n        for (let i = str.length - 1; i >= 0; i--) {\n            if (str[i] !== '0') {\n                str = str.substr(0, i + 1);\n                break;\n            }\n        }\n    }\n\n    if (str.length >= 21) {\n        const hasMinus = str.indexOf('-') !== -1;\n        const hasDot = str.indexOf('.') !== -1;\n        const sliceFrom = 0;\n        let sliceTo = 20;\n\n        if (hasDot) {\n            sliceTo += 1;\n\n            if (decimal_point == 20) {\n                sliceTo += 1;\n            }\n        }\n\n        if (hasMinus) {\n            sliceTo += 1;\n        }\n\n        str = str.slice(sliceFrom, sliceTo);\n    }\n    if (str[str.length - 1] === '.') {\n        str = str.substr(0, str.length - 1);\n    }\n    return str;\n};\n","import { BigNumber } from 'bignumber.js';\n\nexport const moneyToInt = (value: string, decimal_point?: any): BigNumber => {\n    const CURRENCY_DISPLAY_DECIMAL_POINT = decimal_point ?? 12;\n    let result: BigNumber = new BigNumber('');\n    if (value) {\n        let am_str = value.trim();\n        const point_index = am_str.indexOf('.');\n        let fraction_size = 0;\n        if (-1 !== point_index) {\n            fraction_size = am_str.length - point_index - 1;\n            while (CURRENCY_DISPLAY_DECIMAL_POINT < fraction_size && '0' === am_str[am_str.length - 1]) {\n                am_str = am_str.slice(0, am_str.length - 1);\n                --fraction_size;\n            }\n\n            if (CURRENCY_DISPLAY_DECIMAL_POINT < fraction_size) {\n                am_str = am_str.slice(0, point_index) + am_str.slice(point_index + 1, CURRENCY_DISPLAY_DECIMAL_POINT);\n            } else {\n                am_str = am_str.slice(0, point_index) + am_str.slice(point_index + 1, am_str.length);\n            }\n        } else {\n            fraction_size = 0;\n        }\n        if (!am_str.length) {\n            return undefined;\n        }\n        if (am_str.length >= 21) {\n            am_str = am_str.slice(0, am_str.indexOf('.') !== -1 ? (decimal_point == 20 ? 22 : 21) : decimal_point == 20 ? 21 : 20);\n        }\n        if (am_str[am_str.length - 1] === '.') {\n            am_str = am_str.substr(0, am_str.length - 1);\n        }\n        if (fraction_size < CURRENCY_DISPLAY_DECIMAL_POINT) {\n            for (let i = 0; i !== CURRENCY_DISPLAY_DECIMAL_POINT - fraction_size; i++) {\n                am_str = am_str + '0';\n            }\n        }\n        result = new BigNumber(am_str).integerValue();\n    }\n    return result;\n};\n","import { Component, inject } from '@angular/core';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { AssetInfo } from '@api/models/assets.model';\nimport { ZANO_ASSET_INFO, ZanoAssetInfo } from '@parts/data/assets';\nimport { MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IntToMoneyPipeModule } from '@parts/pipes';\n\n@Component({\n    selector: 'app-asset-details',\n    templateUrl: './asset-details.component.html',\n    styleUrls: ['./asset-details.component.scss'],\n    standalone: true,\n    imports: [CommonModule, TranslateModule, IntToMoneyPipeModule, MatDialogModule],\n})\nexport class AssetDetailsComponent {\n    public readonly zanoAssetInfo: ZanoAssetInfo = ZANO_ASSET_INFO;\n\n    public readonly data: { asset_info: AssetInfo; title?: string } = inject(MAT_DIALOG_DATA);\n\n    public readonly variablesService: VariablesService = inject(VariablesService);\n}\n","<h2 mat-dialog-title>{{ data?.title ?? 'ASSETS.MODALS.ASSET_DETAILS.TITLE' | translate }}</h2>\n\n<mat-dialog-content>\n    <ng-container *ngIf=\"data.asset_info as asset_info; else templateEmpty\">\n        <table class=\"rounded-corners\">\n            <tbody>\n                <tr>\n                    <td>{{ 'ASSETS.MODALS.ASSET_DETAILS.LABELS.NAME' | translate }}</td>\n                    <td>{{ asset_info.full_name }}</td>\n                </tr>\n                <tr>\n                    <td>{{ 'ASSETS.MODALS.ASSET_DETAILS.LABELS.TICKER' | translate }}</td>\n                    <td>{{ asset_info.ticker }}</td>\n                </tr>\n                <tr>\n                    <td>{{ 'ASSETS.MODALS.ASSET_DETAILS.LABELS.OWNER' | translate }}</td>\n                    <td (contextmenu)=\"variablesService.onContextMenuOnlyCopy($event, asset_info.owner)\">\n                        {{ asset_info.owner }}\n                    </td>\n                </tr>\n                <tr>\n                    <td>{{ 'ASSETS.MODALS.ASSET_DETAILS.LABELS.ID' | translate }}</td>\n                    <td (contextmenu)=\"variablesService.onContextMenuOnlyCopy($event, asset_info.asset_id)\">\n                        {{ asset_info.asset_id }}\n                    </td>\n                </tr>\n                <tr>\n                    <td>{{ 'ASSETS.MODALS.ASSET_DETAILS.LABELS.CURRENT_SUPPLY' | translate }}</td>\n                    <td>\n                        <ng-container *ngIf=\"asset_info.asset_id !== zanoAssetInfo.asset_id; else zanoCurrentSupply\">\n                            {{ asset_info.current_supply | intToMoney : asset_info.decimal_point }}\n                        </ng-container>\n\n                        <ng-template #zanoCurrentSupply>\n                            <ng-container *ngIf=\"variablesService.zano_current_supply !== undefined; else emptyCurrentSupply\">\n                                {{ variablesService.zano_current_supply | intToMoney : asset_info.decimal_point }}\n                            </ng-container>\n                        </ng-template>\n\n                        <ng-template #emptyCurrentSupply> Unknown </ng-template>\n                    </td>\n                </tr>\n\n                <tr>\n                    <td>{{ 'ASSETS.MODALS.ASSET_DETAILS.LABELS.MAX_SUPPLE' | translate }}</td>\n                    <td>\n                        {{\n                            asset_info.asset_id === zanoAssetInfo.asset_id\n                                ? 'Uncapped'\n                                : (asset_info.total_max_supply | intToMoney : asset_info.decimal_point)\n                        }}\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </ng-container>\n\n    <ng-template #templateEmpty>No data</ng-template>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n    <button class=\"outline big w-100\" mat-dialog-close type=\"button\">\n        {{ 'MODALS.OK' | translate }}\n    </button>\n</mat-dialog-actions>\n","import { Component, inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nexport interface ConfirmModalData {\n    title: string;\n    message?: string;\n    buttons?: Partial<{\n        close: string;\n        submit: string;\n    }>;\n}\n\n@Component({\n    selector: 'app-confirm-modal',\n    templateUrl: './confirm-modal.component.html',\n    styleUrls: ['./confirm-modal.component.scss'],\n})\nexport class ConfirmModalComponent {\n    data: ConfirmModalData = inject(MAT_DIALOG_DATA);\n\n    private _dialogRef: MatDialogRef<ConfirmModalComponent> = inject(MatDialogRef);\n\n    get title(): string {\n        const { title } = this.data;\n        return title;\n    }\n\n    get message(): string {\n        const { message } = this.data;\n        return message;\n    }\n\n    submit(): void {\n        this._dialogRef.close(true);\n    }\n}\n","<mat-dialog-content>\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"1rem\">\n        <mat-icon svgIcon=\"zano-info-v2\"></mat-icon>\n\n        <div fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n            <h3 class=\"title\">{{ title | translate }}</h3>\n            <p class=\"message\">{{ message | translate }}</p>\n        </div>\n    </div>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n    <div fxFlex=\"1 1 auto\" fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\n        <button [mat-dialog-close]=\"false\" class=\"outline big w-100\" type=\"button\">\n            {{ data?.buttons?.close ?? 'MODALS.CANCEL' | translate }}\n        </button>\n        <button appAutofocus (click)=\"submit()\" class=\"primary big w-100\" type=\"button\">\n            {{ data?.buttons?.submit ?? 'MODALS.OK' | translate }}\n        </button>\n    </div>\n</mat-dialog-actions>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { AutoFocusDirective } from '@parts/directives/autofocus.directive';\nimport { ConfirmModalComponent } from '@parts/modals/confirm-modal/confirm-modal.component';\n\n@NgModule({\n    declarations: [ConfirmModalComponent],\n    imports: [CommonModule, TranslateModule, FlexLayoutModule, MatIconModule, MatDialogModule, AutoFocusDirective],\n    exports: [ConfirmModalComponent],\n})\nexport class ConfirmModalModule {}\n","import { Component, inject } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CommonModule } from '@angular/common';\nimport { MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\nimport { FlexModule } from '@angular/flex-layout';\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n    selector: 'app-modal-container',\n    templateUrl: './modal-container.component.html',\n    styleUrls: ['./modal-container.component.scss'],\n    standalone: true,\n    imports: [CommonModule, MatDialogModule, TranslateModule, FlexModule, MatIconModule],\n})\nexport class ModalContainerComponent {\n    public readonly data: { type: 'error' | 'info' | 'success'; message: any } = inject(MAT_DIALOG_DATA);\n}\n","<mat-dialog-content>\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"1rem\">\n        <mat-icon style=\"width: 3rem; height: 3rem\" [svgIcon]=\"'zano-system-modal-' + data.type\"></mat-icon>\n        <div class=\"message-container\">\n            <h3 class=\"title\">{{ 'MODALS.' + data.type.toUpperCase() | translate }}</h3>\n            <p [innerHTML]=\"data.message | translate\" class=\"message\"></p>\n        </div>\n    </div>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"center\">\n    <button class=\"primary max-w-19-rem w-100 big\" mat-dialog-close type=\"button\">\n        {{ 'MODALS.OK' | translate }}\n    </button>\n</mat-dialog-actions>\n","import { Component, HostBinding, Input, NgZone, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { VariablesService } from '../../services/variables.service';\nimport { Wallet } from '@api/models/wallet.model';\nimport { BackendService } from '@api/services/backend.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ModalService } from '../../services/modal.service';\nimport { WalletsService } from '@parts/services/wallets.service';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n    selector: 'app-open-wallet-modal',\n    templateUrl: './open-wallet-modal.component.html',\n    styleUrls: ['./open-wallet-modal.component.scss'],\n})\nexport class OpenWalletModalComponent implements OnInit, OnDestroy {\n    @HostBinding('class.modal-overlay') modalOverlay = true;\n\n    @Input() wallets: any[];\n\n    isWrongPassword$ = new BehaviorSubject<boolean>(false);\n\n    wallet = {\n        name: '',\n        path: '',\n        pass: '',\n        notFound: false,\n        emptyPass: false,\n    };\n\n    constructor(\n        public variablesService: VariablesService,\n        public walletsService: WalletsService,\n        private _backendService: BackendService,\n        private _translateService: TranslateService,\n        private _modalService: ModalService,\n        private _ngZone: NgZone,\n        private _renderer: Renderer2\n    ) {}\n\n    ngOnInit(): void {\n        this._renderer.addClass(document.body, 'no-scroll');\n        this.initializeWallet();\n    }\n\n    ngOnDestroy(): void {\n        this._renderer.removeClass(document.body, 'no-scroll');\n    }\n\n    initializeWallet(): void {\n        if (this.wallets.length) {\n            this.wallet = { ...this.wallets[0], pass: '' };\n        }\n    }\n\n    resetPasswordError(): void {\n        this.isWrongPassword$.next(false);\n    }\n\n    isFormInvalid(): boolean {\n        return this.wallet.notFound || this.isWrongPassword$.value;\n    }\n\n    openWallet(): void {\n        if (!this.wallets.length) {\n            return;\n        }\n\n        this._backendService.openWallet(\n            this.wallet.path,\n            this.wallet.pass,\n            this.variablesService.count,\n            false,\n            this.handleWalletOpening.bind(this)\n        );\n    }\n\n    handleWalletOpening(open_status, open_data, open_error): void {\n        this._ngZone.run(() => {\n            if (open_error === 'WRONG_PASSWORD') {\n                this.handleWrongPassword();\n            } else if (open_error === 'FILE_NOT_FOUND') {\n                this.handleFileNotFound();\n            } else if (open_status || open_error === 'FILE_RESTORED') {\n                this.handleSuccessfulWalletOpen(open_data);\n            }\n        });\n    }\n\n    handleWrongPassword(): void {\n        this._ngZone.run(() => {\n            this.isWrongPassword$.next(true);\n        });\n    }\n\n    handleFileNotFound(): void {\n        this._ngZone.run(() => {\n            this.wallet.notFound = true;\n        });\n\n        const errorMessage = `${this._translateService.instant('OPEN_WALLET.FILE_NOT_FOUND1')}:<br>${\n            this.wallet.path\n        }${this._translateService.instant('OPEN_WALLET.FILE_NOT_FOUND2')}`;\n        this._modalService.prepareModal('error', errorMessage);\n    }\n\n    handleSuccessfulWalletOpen(open_data): void {\n        const walletExists = this.variablesService.wallets.some((wallet) => wallet.address === open_data['wi'].address);\n\n        if (walletExists) {\n            this._modalService.prepareModal('error', 'OPEN_WALLET.WITH_ADDRESS_ALREADY_OPEN');\n            this._backendService.closeWallet(open_data.wallet_id);\n        } else {\n            this.addNewWallet(open_data);\n            this.skipWallet();\n            this.isWrongPassword$.next(false);\n        }\n    }\n\n    addNewWallet(open_data): void {\n        const newWallet = this.createWalletFromData(open_data);\n        this.walletsService.addWallet(newWallet);\n        this._backendService.runWallet(open_data.wallet_id);\n    }\n\n    createWalletFromData(open_data): Wallet {\n        const newWallet = new Wallet(\n            open_data.wallet_id,\n            this.wallet.name,\n            this.wallet.pass,\n            open_data['wi'].path,\n            open_data['wi'].address,\n            open_data['wi'].balance,\n            open_data['wi'].unlocked_balance,\n            open_data['wi'].mined_total,\n            open_data['wi'].tracking_key\n        );\n        newWallet.is_auditable = open_data['wi'].is_auditable;\n        newWallet.is_watch_only = open_data['wi'].is_watch_only;\n        newWallet.currentPage = 1;\n        newWallet.exclude_mining_txs = false;\n\n        if (open_data.recent_history?.history) {\n            newWallet.total_history_item = open_data.recent_history.total_history_items;\n            newWallet.totalPages = Math.ceil(open_data.recent_history.total_history_items / this.variablesService.count);\n            newWallet.pages = this.createPagesArray(newWallet.totalPages);\n            newWallet.prepareHistory(open_data.recent_history.history);\n        } else {\n            newWallet.total_history_item = 0;\n            newWallet.pages = [1];\n            newWallet.totalPages = 1;\n        }\n\n        return newWallet;\n    }\n\n    createPagesArray(totalPages: number): number[] {\n        return totalPages > this.variablesService.maxPages\n            ? Array.from({ length: 5 }, (_, index) => index + 1)\n            : Array.from({ length: totalPages }, (_, index) => index + 1);\n    }\n\n    skipWallet(): void {\n        if (this.wallets.length) {\n            this.wallets.shift();\n            this.initializeWallet();\n        }\n    }\n}\n","<div class=\"modal open-wallet-modal-wrapper scrolled-content\">\n    <div class=\"wrapper w-100\">\n        <h3 class=\"mb-2\">{{ 'OPEN_WALLET.MODAL.TITLE' | translate }}</h3>\n\n        <div class=\"word-break-break-all mb-2\">{{ wallet.name }}</div>\n        <div class=\"word-break-break-all mb-2\">{{ wallet.path }}</div>\n\n        <form (ngSubmit)=\"openWallet()\" class=\"form\" fxLayout=\"column\">\n            <div *ngIf=\"!wallet.notFound\" class=\"form__field\">\n                <label for=\"password\">{{ 'OPEN_WALLET.MODAL.LABEL' | translate }}</label>\n                <input\n                    [(ngModel)]=\"wallet.pass\"\n                    [class.invalid]=\"isWrongPassword$ | async\"\n                    (contextmenu)=\"variablesService.onContextMenuPasteSelect($event)\"\n                    (focusin)=\"resetPasswordError()\"\n                    (keydown)=\"resetPasswordError()\"\n                    class=\"form__field--input\"\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                />\n                <div *ngIf=\"wallet.notFound\" class=\"error\">\n                    {{ 'OPEN_WALLET.MODAL.NOT_FOUND' | translate }}\n                </div>\n                <div *ngIf=\"isWrongPassword$ | async\" class=\"error\">\n                    {{ 'ERRORS.WRONG_PASSWORD' | translate }}\n                </div>\n            </div>\n\n            <div fxLayout=\"row nowrap\" fxLayoutGap=\"1rem\">\n                <button [disabled]=\"isFormInvalid()\" class=\"primary big w-100\" type=\"submit\">\n                    {{ 'OPEN_WALLET.MODAL.OPEN' | translate }}\n                </button>\n                <button (click)=\"skipWallet()\" class=\"outline big w-100\" type=\"button\">\n                    {{ 'OPEN_WALLET.MODAL.SKIP' | translate }}\n                </button>\n            </div>\n        </form>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ContractStatusMessagesPipe } from '@parts/pipes/contract-status-messages-pipe/contract-status-messages.pipe';\n\n@NgModule({\n    declarations: [ContractStatusMessagesPipe],\n    exports: [ContractStatusMessagesPipe],\n    providers: [ContractStatusMessagesPipe],\n    imports: [CommonModule],\n})\nexport class ContractStatusMessagesPipeModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Pipe({\n    name: 'contractStatusMessages',\n})\nexport class ContractStatusMessagesPipe implements PipeTransform {\n    constructor(private translate: TranslateService) {}\n\n    getStateSeller(stateNum: number): string {\n        const state = { part1: '', part2: '' };\n        switch (stateNum) {\n            case 1:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.NEW_CONTRACT');\n                break;\n            case 110:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.IGNORED');\n                break;\n            case 201:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.ACCEPTED');\n                state.part2 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.WAIT');\n                break;\n            case 2:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.WAITING_BUYER');\n                break;\n            case 3:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.COMPLETED');\n                break;\n            case 4:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.NOT_RECEIVED');\n                state.part2 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.NULLIFIED');\n                break;\n            case 5:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.PROPOSAL_CANCEL');\n                break;\n            case 601:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.BEING_CANCELLED');\n                break;\n            case 6:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.CANCELLED');\n                break;\n            case 130:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.IGNORED_CANCEL');\n                break;\n            case 140:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.SELLER.EXPIRED');\n                break;\n        }\n        return state.part1 + (state.part2.length ? '. ' + state.part2 : '');\n    }\n\n    getStateBuyer(stateNum: number): string {\n        const state = { part1: '', part2: '' };\n        switch (stateNum) {\n            case 1:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.WAITING');\n                break;\n            case 110:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.IGNORED');\n                break;\n            case 201:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.ACCEPTED');\n                state.part2 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.WAIT');\n                break;\n            case 2:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.ACCEPTED');\n                break;\n            case 120:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.WAITING_SELLER');\n                break;\n            case 3:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.COMPLETED');\n                break;\n            case 4:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.NOT_RECEIVED');\n                state.part2 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.NULLIFIED');\n                break;\n            case 5:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.WAITING_CANCEL');\n                break;\n            case 601:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.BEING_CANCELLED');\n                break;\n            case 6:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.CANCELLED');\n                break;\n            case 130:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.IGNORED_CANCEL');\n                break;\n            case 140:\n                state.part1 = this.translate.instant('CONTRACTS.STATUS_MESSAGES.BUYER.EXPIRED');\n                break;\n        }\n        return state.part1 + (state.part2.length ? '. ' + state.part2 : '');\n    }\n\n    transform(state: number, is_a?: boolean): any {\n        if (is_a) {\n            return this.getStateBuyer(state);\n        } else {\n            return this.getStateSeller(state);\n        }\n    }\n}\n","export * from './contract-status-messages-pipe.module';\nexport * from './contract-status-messages.pipe';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ContractTimeLeftPipe } from '@parts/pipes/contract-time-left-pipe/contract-time-left.pipe';\n\n@NgModule({\n    declarations: [ContractTimeLeftPipe],\n    exports: [ContractTimeLeftPipe],\n    providers: [ContractTimeLeftPipe],\n    imports: [CommonModule],\n})\nexport class ContractTimeLeftPipeModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { VariablesService } from '../../services/variables.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Pipe({\n    name: 'contractTimeLeft',\n})\nexport class ContractTimeLeftPipe implements PipeTransform {\n    constructor(private service: VariablesService, private translate: TranslateService) {}\n\n    transform(value: any, arg?: any): any {\n        const time = parseInt(((parseInt(value, 10) - this.service.exp_med_ts) / 3600).toFixed(0), 10);\n        const type = arg || 0;\n        if (time === 0) {\n            return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_LESS_ONE');\n        }\n        if (this.service.settings.language === 'en') {\n            if (type === 0) {\n                if (time === 1) {\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_ONE', {\n                        time: time,\n                    });\n                } else {\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_MANY', {\n                        time: time,\n                    });\n                }\n            } else if (type === 1) {\n                if (time === 1) {\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_ONE_RESPONSE', { time: time });\n                } else {\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_MANY_RESPONSE', { time: time });\n                }\n            } else if (type === 2) {\n                if (time === 1) {\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_ONE_WAITING', { time: time });\n                } else {\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_MANY_WAITING', { time: time });\n                }\n            }\n        } else {\n            const rest = time % 10;\n            if (type === 0) {\n                if ((time > 20 && rest === 1) || time === 1) {\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_ONE', {\n                        time: time,\n                    });\n                } else if ((time > 1 && time < 5) || (time > 20 && (rest === 2 || rest === 3 || rest === 4))) {\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_MANY', {\n                        time: time,\n                    });\n                } else {\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_MANY_ALT', { time: time });\n                }\n            } else if (type === 1) {\n                if ((time > 20 && rest === 1) || time === 1) {\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_ONE_RESPONSE', { time: time });\n                } else if ((time > 1 && time < 5) || (time > 20 && (rest === 2 || rest === 3 || rest === 4))) {\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_MANY_RESPONSE', { time: time });\n                } else {\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_MANY_ALT_RESPONSE', { time: time });\n                }\n            } else if (type === 2) {\n                if ((time > 20 && rest === 1) || time === 1) {\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_ONE_WAITING', { time: time });\n                } else if ((time > 1 && time < 5) || (time > 20 && (rest === 2 || rest === 3 || rest === 4))) {\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_MANY_WAITING', { time: time });\n                } else {\n                    return this.translate.instant('CONTRACTS.TIME_LEFT.REMAINING_MANY_ALT_WAITING', { time: time });\n                }\n            }\n        }\n        return null;\n    }\n}\n","export * from './contract-time-left-pipe.module';\nexport * from './contract-time-left.pipe';\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Transaction } from '@api/models/transaction.model';\nimport { Wallet } from '@api/models/wallet.model';\nimport { AmountItems, getAmountItems } from '@parts/functions/get-amount-items';\n\n@Pipe({\n    name: 'getAmountItems',\n    standalone: true,\n})\nexport class GetAmountItemsPipe implements PipeTransform {\n    transform(transaction: Transaction, wallet: Wallet): AmountItems {\n        return getAmountItems(transaction, wallet);\n    }\n}\n","import { inject, Pipe, PipeTransform } from '@angular/core';\nimport { AssetInfo } from '@api/models/assets.model';\nimport { WalletsService } from '@parts/services/wallets.service';\n\n@Pipe({\n    name: 'getAssetInfo',\n    standalone: true,\n})\nexport class GetAssetInfoPipe implements PipeTransform {\n    private walletsService: WalletsService = inject(WalletsService);\n\n    transform(value: AssetInfo['asset_id']): AssetInfo | undefined {\n        return this.walletsService.currentWallet?.allAssetsInfo.find(({ asset_id }) => asset_id === value);\n    }\n}\n","import { inject, Pipe, PipeTransform } from '@angular/core';\nimport { AssetInfo } from '@api/models/assets.model';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { getLogoTemplateByAssetInfo } from '@parts/functions/get-logo-template-by-asset-info';\n\n@Pipe({\n    name: 'getLogoByAssetInfo',\n    standalone: true,\n})\nexport class GetLogoByAssetInfoPipe implements PipeTransform {\n    private _sanitizer: DomSanitizer = inject(DomSanitizer);\n\n    transform(value: AssetInfo): string | SafeHtml {\n        return this._sanitizer.bypassSecurityTrustHtml(getLogoTemplateByAssetInfo(value));\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HistoryTypeMessagesPipe } from '@parts/pipes/history-type-messages-pipe/history-type-messages.pipe';\n\n@NgModule({\n    declarations: [HistoryTypeMessagesPipe],\n    exports: [HistoryTypeMessagesPipe],\n    providers: [HistoryTypeMessagesPipe],\n    imports: [CommonModule],\n})\nexport class HistoryTypeMessagesPipeModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { hasOwnProperty } from '../../functions/has-own-property';\n\n@Pipe({\n    name: 'historyTypeMessages',\n})\nexport class HistoryTypeMessagesPipe implements PipeTransform {\n    constructor(private translate: TranslateService) {}\n\n    transform(item: any): any {\n        if (item.tx_type === 0) {\n            if (item.remote_addresses && item.remote_addresses[0]) {\n                return item.remote_addresses[0];\n            } else {\n                if (item.is_income) {\n                    return this.translate.instant('HISTORY.TYPE_MESSAGES.HIDDEN');\n                } else {\n                    return this.translate.instant('HISTORY.TYPE_MESSAGES.UNDEFINED');\n                }\n            }\n        } else if (item.tx_type === 6 && item.height === 0) {\n            return 'unknown';\n        } else if (item.tx_type === 9) {\n            if (hasOwnProperty(item, 'contract') && item.contract[0].is_a) {\n                return this.translate.instant('HISTORY.TYPE_MESSAGES.COMPLETE_BUYER');\n            } else {\n                return this.translate.instant('HISTORY.TYPE_MESSAGES.COMPLETE_SELLER');\n            }\n        } else {\n            switch (item.tx_type) {\n                // case 0:\n                //   return '';\n                // case 1:\n                //   return '';\n                // case 2:\n                //   return '';\n                // case 3:\n                //   return '';\n                case 4:\n                    return this.translate.instant('HISTORY.TYPE_MESSAGES.CREATE_ALIAS');\n                case 5:\n                    return this.translate.instant('HISTORY.TYPE_MESSAGES.UPDATE_ALIAS');\n                case 6:\n                    return item.employed_entries?.spent?.length\n                        ? this.translate.instant('HISTORY.TYPE_MESSAGES.POS_REWARD')\n                        : this.translate.instant('HISTORY.TYPE_MESSAGES.POW_REWARD');\n                case 7:\n                    if (!item.subtransfers || !item.subtransfers.length) {\n                        return this.translate.instant('HISTORY.TYPE_MESSAGES.SERVICE_TRANSACTIONS');\n                    } else {\n                        return this.translate.instant('HISTORY.TYPE_MESSAGES.CREATE_CONTRACT');\n                    }\n                case 8:\n                    return this.translate.instant('HISTORY.TYPE_MESSAGES.PLEDGE_CONTRACT');\n                // case 9:\n                //   return '';\n                case 10:\n                    return this.translate.instant('HISTORY.TYPE_MESSAGES.NULLIFY_CONTRACT');\n                case 11:\n                    return this.translate.instant('HISTORY.TYPE_MESSAGES.PROPOSAL_CANCEL_CONTRACT');\n                case 12:\n                    return this.translate.instant('HISTORY.TYPE_MESSAGES.CANCEL_CONTRACT');\n            }\n        }\n\n        return this.translate.instant('HISTORY.TYPE_MESSAGES.UNDEFINED');\n    }\n}\n","export * from './history-type-messages-pipe.module';\nexport * from './history-type-messages.pipe';\n","export * from './contract-status-messages-pipe';\nexport * from './contract-time-left-pipe';\nexport * from './history-type-messages-pipe';\nexport * from './int-to-money-pipe';\nexport * from './is-available-alias-name-pipe';\nexport * from './money-to-int-pipe';\nexport * from './safe-html-pipe';\nexport * from './get-asset-info.pipe';\nexport * from './short-string.pipe';\n","export * from './int-to-money-pipe.module';\nexport * from './int-to-money.pipe';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IntToMoneyPipe } from '@parts/pipes/int-to-money-pipe/int-to-money.pipe';\n\n@NgModule({\n    declarations: [IntToMoneyPipe],\n    exports: [IntToMoneyPipe],\n    providers: [IntToMoneyPipe],\n    imports: [CommonModule],\n})\nexport class IntToMoneyPipeModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { VariablesService } from '../../services/variables.service';\nimport { intToMoney } from '@parts/functions/int-to-money';\nimport { BigNumber } from 'bignumber.js';\n\n@Pipe({\n    name: 'intToMoney',\n})\nexport class IntToMoneyPipe implements PipeTransform {\n    constructor(private variablesService: VariablesService) {}\n\n    transform(value: number | string | BigNumber, decimal_point = this.variablesService.decimal_point): any {\n        return intToMoney(value, decimal_point);\n    }\n}\n","export * from './is-available-alias-name-pipe.module';\nexport * from './is-available-alias-name.pipe';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IsAvailableAliasNamePipe } from './is-available-alias-name.pipe';\n\n@NgModule({\n    declarations: [IsAvailableAliasNamePipe],\n    exports: [IsAvailableAliasNamePipe],\n    providers: [IsAvailableAliasNamePipe],\n    imports: [CommonModule],\n})\nexport class IsAvailableAliasNamePipeModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { AliasInfo } from '@api/models/alias.model';\n\n@Pipe({\n    name: 'isAvailableAliasName',\n})\nexport class IsAvailableAliasNamePipe implements PipeTransform {\n    transform(alias: AliasInfo | null | undefined): boolean {\n        return (Boolean(alias) && Boolean(alias.alias) && alias.alias.length >= 1 && alias.alias.length <= 5) || false;\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\n@Pipe({\n    name: 'isVisibleControlError',\n    standalone: true,\n    pure: false,\n})\nexport class IsVisibleControlErrorPipe implements PipeTransform {\n    transform(control: AbstractControl | null): boolean {\n        if (!control) {\n            return false;\n        }\n        return (control.touched || control.dirty) && control.invalid;\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { isInitiator } from '@parts/functions/identify-transaction';\nimport { Transaction } from '@api/models/transaction.model';\n\n@Pipe({\n    name: 'isVisibleFee',\n    standalone: true,\n})\nexport class IsVisibleFeePipe implements PipeTransform {\n    transform(transaction: Transaction): boolean {\n        const { subtransfers } = transaction;\n        const condition1 = subtransfers ? !subtransfers?.every(({ is_income }) => is_income) : false;\n        const condition2 = isInitiator(transaction);\n        return condition1 && condition2;\n    }\n}\n","export * from './money-to-int-pipe.module';\nexport * from './money-to-int.pipe';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MoneyToIntPipe } from '@parts/pipes/money-to-int-pipe/money-to-int.pipe';\n\n@NgModule({\n    declarations: [MoneyToIntPipe],\n    exports: [MoneyToIntPipe],\n    providers: [MoneyToIntPipe],\n    imports: [CommonModule],\n})\nexport class MoneyToIntPipeModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { VariablesService } from '../../services/variables.service';\nimport { moneyToInt } from '@parts/functions/money-to-int';\n\n@Pipe({\n    name: 'moneyToInt',\n})\nexport class MoneyToIntPipe implements PipeTransform {\n    constructor(private variablesService: VariablesService) {}\n\n    transform(value: any): any {\n        return moneyToInt(value, this.variablesService.decimal_point);\n    }\n}\n","export * from './safe-html-pipe.module';\nexport * from './safe-html.pipe';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SafeHTMLPipe } from '@parts/pipes/safe-html-pipe/safe-html.pipe';\n\n@NgModule({\n    declarations: [SafeHTMLPipe],\n    exports: [SafeHTMLPipe],\n    providers: [SafeHTMLPipe],\n    imports: [CommonModule],\n})\nexport class SafeHtmlPipeModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n@Pipe({\n    name: 'safeHTML',\n})\nexport class SafeHTMLPipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {}\n\n    transform(html: string): SafeHtml {\n        return this.sanitizer.bypassSecurityTrustHtml(html);\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'zanoShortString',\n    standalone: true,\n})\nexport class ShortStringPipe implements PipeTransform {\n    transform(value: string | null | undefined, left = 6, right = 6): string | null | undefined {\n        return value && `${value.slice(0, left)}...${value.slice(-right)}`;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { NavigationEnd, Router } from '@angular/router';\n\n@Injectable({ providedIn: 'root' })\nexport class NavigationService {\n    private history: string[] = [];\n\n    constructor(private router: Router, private location: Location) {\n        this.router.events.subscribe((event) => {\n            if (event instanceof NavigationEnd) {\n                this.history.push(event.urlAfterRedirects);\n            }\n        });\n    }\n\n    back(): void {\n        this.history.pop();\n        if (this.history.length > 0) {\n            this.location.back();\n        } else {\n            this.router.navigateByUrl('/').then();\n        }\n    }\n}\n","import { inject, Injectable, NgZone } from '@angular/core';\nimport { ModalContainerComponent } from '../modals/modal-container/modal-container.component';\nimport { MatDialog, MatDialogConfig, MatDialogRef } from '@angular/material/dialog';\nimport { take } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ModalService {\n    private _count = 0;\n\n    private readonly _matDialog: MatDialog = inject(MatDialog);\n\n    private readonly _ngZone: NgZone = inject(NgZone);\n\n    prepareModal(type: 'error' | 'info' | 'success' | string, message: any): void {\n        const config: MatDialogConfig = {\n            data: {\n                type,\n                message,\n            },\n            width: '34rem',\n        };\n\n        this._ngZone.run(() => {\n            const matDialogRef: MatDialogRef<ModalContainerComponent> = this._matDialog.open(ModalContainerComponent, config);\n\n            matDialogRef\n                .afterOpened()\n                .pipe(take(1))\n                .subscribe(() => this._count + 1);\n            matDialogRef\n                .afterClosed()\n                .pipe(take(1))\n                .subscribe(() => this._count - 1);\n        });\n    }\n}\n","import { inject, Injectable, NgZone, OnDestroy } from '@angular/core';\nimport { DeeplinkParams, Wallet } from '@api/models/wallet.model';\nimport { Contact } from '@api/models/contact.model';\nimport { BehaviorSubject, concatMap, from, Observable, scan, Subject } from 'rxjs';\nimport { Idle } from 'idlejs/dist';\nimport { Router } from '@angular/router';\nimport { ContextMenuComponent, ContextMenuService } from '@perfectmemory/ngx-contextmenu';\nimport { BigNumber } from 'bignumber.js';\nimport { AliasInfoList } from '@api/models/alias.model';\nimport { distinctUntilChanged, filter, map, takeUntil } from 'rxjs/operators';\nimport { Dialog } from '@angular/cdk/dialog';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AssetBalance, AssetInfo, VerifiedAssetInfoWhitelist } from '@api/models/assets.model';\nimport { CurrentPriceForAssets } from '@api/models/api-zano.models';\nimport { ApiService } from '@api/services/api.service';\nimport { WrapInfo } from '@api/models/wrap-info';\nimport { MAX_COMMENT_LENGTH, MAX_WALLET_NAME_LENGTH } from '@parts/data/constants';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VariablesService implements OnDestroy {\n    disable_price_fetch$ = new BehaviorSubject<boolean>(false);\n\n    visibilityBalance$ = new BehaviorSubject<boolean>(true);\n\n    zano_current_supply = undefined;\n\n    rpc_port!: number;\n\n    is_remote_node = false;\n\n    use_debug_mode$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n    info$: BehaviorSubject<any> = new BehaviorSubject<any>({});\n\n    is_hardfok_active$: Observable<boolean> = this.info$.pipe(\n        map((info) => {\n            return Boolean(info?.['is_hardfok_active']?.[4]);\n        }),\n        distinctUntilChanged()\n    );\n\n    stop_paginate = {};\n\n    sync_started = false;\n\n    decimal_point = 12;\n\n    appPass = '';\n\n    appLogin = false;\n\n    readonly defaultTicker = 'ZANO';\n\n    opening_wallet: Wallet;\n\n    exp_med_ts = 0;\n\n    net_time_delta_median = 0;\n\n    height_app = 0;\n\n    height_max = 0;\n\n    downloaded = 0;\n\n    total = 0;\n\n    last_build_available = '';\n\n    last_build_displaymode = 0;\n\n    daemon_state = 3;\n\n    daemon_state$: BehaviorSubject<number> = new BehaviorSubject<number>(this.daemon_state);\n\n    deeplink$: BehaviorSubject<string | null> = new BehaviorSubject<string | null>(null);\n\n    sendActionData$: BehaviorSubject<DeeplinkParams> = new BehaviorSubject<DeeplinkParams>({});\n\n    sync = {\n        progress_value: 0,\n        progress_value_text: '0',\n        blocks: {\n            current: 0,\n            max: 0,\n        },\n    };\n\n    public sync_wallets: { [wallet_id: number]: boolean } = {};\n\n    download = {\n        progress_value: 0,\n        progress_value_text: '0',\n    };\n\n    // Avoid of execute function before callback complete\n    get_recent_transfers = false;\n\n    default_fee = '0.01';\n\n    default_fee_big: BigNumber = new BigNumber('10000000000');\n\n    // (0.1 + fee) = 0.11 ZANO\n    default_price_alias: BigNumber = BigNumber.sum('100000000000', this.default_fee_big);\n\n    settings = {\n        currency: 'usd',\n        appLockTime: 15,\n        appLog: 0,\n        scale: '10px',\n        appUseTor: false,\n        visibilityBalance: true,\n        language: 'en',\n        default_path: '/',\n        viewedContracts: [],\n        notViewedContracts: [],\n        zanoCompanionForm: {\n            zanoCompation: false,\n            secret: '',\n        },\n        wallets: [],\n        isDarkTheme: true,\n        filters: {\n            stakingFilters: null,\n        },\n        localBlacklistsOfVerifiedAssetsByWallets: {},\n    };\n\n    isDarkTheme$ = new BehaviorSubject(true);\n\n    count = 40;\n\n    maxPages = 5;\n\n    testnet = false;\n\n    networkType: 'mainnet' | 'testnet' = 'mainnet';\n\n    wallets: Array<Wallet> = [];\n\n    current_wallet: Wallet;\n\n    currentPriceForAssets: CurrentPriceForAssets = {};\n\n    currentPriceForAssets$: BehaviorSubject<CurrentPriceForAssets> = new BehaviorSubject({});\n\n    all_aliases: AliasInfoList = [];\n\n    all_aliases_loaded = false;\n\n    maxWalletNameLength: number = MAX_WALLET_NAME_LENGTH;\n\n    maxCommentLength: number = MAX_COMMENT_LENGTH;\n\n    dataIsLoaded = false;\n\n    contacts: Array<Contact> = [];\n\n    pattern = '^[a-zA-Z0-9_.\\\\]*|~!?@#$%^&+{}()<>:;\"\\'-=/,[\\\\\\\\]*$';\n\n    after_sync_request: any = {};\n\n    getExpMedTsEvent = new BehaviorSubject(null);\n\n    getHeightAppEvent = new BehaviorSubject(null);\n\n    getHeightMaxEvent = new BehaviorSubject(null);\n\n    getDownloadedAppEvent = new BehaviorSubject(null);\n\n    getTotalEvent = new BehaviorSubject(null);\n\n    currentWalletChangedEvent = new BehaviorSubject<Wallet>(null);\n\n    refreshStakingEvent$: Subject<void> = new Subject<void>();\n\n    verifiedAssetInfoWhitelist: VerifiedAssetInfoWhitelist = [];\n\n    get verifiedAssetIdWhitelist(): string[] {\n        return this.verifiedAssetInfoWhitelist.map(({ asset_id }: AssetInfo): string => asset_id);\n    }\n\n    private _dialog: Dialog = inject(Dialog);\n\n    private _matDialog: MatDialog = inject(MatDialog);\n\n    idle = new Idle().whenNotInteractive().do(async () => {\n        if (this.appPass === '') {\n            this.stopCountdown();\n        } else {\n            await this.ngZone.run(async () => {\n                this.stopCountdown();\n                this.appPass = '';\n                this.appLogin = false;\n                this._dialog.closeAll();\n                this._matDialog.closeAll();\n                await this.router.navigate(['/login'], {\n                    queryParams: { type: 'auth' },\n                });\n            });\n        }\n    });\n\n    allContextMenu: ContextMenuComponent<any>;\n\n    onlyCopyContextMenu: ContextMenuComponent<any>;\n\n    pasteSelectContextMenu: ContextMenuComponent<any>;\n\n    wrap_info$: BehaviorSubject<WrapInfo | null> = new BehaviorSubject<WrapInfo | null>(null);\n\n    is_wrap_info_service_inactive$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\n\n    private _destroy$: Subject<void> = new Subject<void>();\n\n    constructor(\n        private router: Router,\n        private ngZone: NgZone,\n        private _apiZanoService: ApiService,\n        private contextMenuService: ContextMenuService<any>\n    ) {\n        this.visibilityBalance$.pipe(takeUntil(this._destroy$)).subscribe({\n            next: (visibilityBalance) => {\n                this.settings.visibilityBalance = visibilityBalance;\n            },\n        });\n    }\n\n    ngOnDestroy(): void {\n        this._destroy$.next();\n        this._destroy$.complete();\n    }\n\n    get hasAppPass(): boolean {\n        return Boolean(this.appPass);\n    }\n\n    get isCurrentWalletSync(): boolean {\n        if (this.current_wallet) {\n            const { wallet_id } = this.current_wallet;\n            return this.sync_wallets[wallet_id] || false;\n        }\n        return false;\n    }\n\n    get isCurrentWalletLoaded(): boolean {\n        if (this.current_wallet) {\n            const { loaded } = this.current_wallet;\n            return loaded;\n        }\n        return false;\n    }\n\n    get walletNamesForComparisons(): string[] {\n        return this.wallets.map(({ name }) => name) ?? [];\n    }\n\n    setExpMedTs(timestamp: number): void {\n        if (timestamp !== this.exp_med_ts) {\n            this.exp_med_ts = timestamp;\n            this.getExpMedTsEvent.next(timestamp);\n        }\n    }\n\n    setHeightApp(height: number): void {\n        if (height !== this.height_app) {\n            this.height_app = height;\n            this.getHeightAppEvent.next(height);\n        }\n    }\n\n    setHeightMax(height: number): void {\n        if (height !== this.height_max) {\n            this.height_max = height;\n            this.getHeightMaxEvent.next(height);\n        }\n    }\n\n    setDownloadedBytes(bytes: number): void {\n        if (bytes !== this.downloaded) {\n            this.downloaded = this.bytesToMb(bytes);\n            this.getDownloadedAppEvent.next(bytes);\n        }\n    }\n\n    setTotalBytes(bytes: number): void {\n        if (bytes !== this.total) {\n            this.total = this.bytesToMb(bytes);\n            this.getTotalEvent.next(bytes);\n        }\n    }\n\n    setCurrentWallet(id): void {\n        this.wallets.forEach((wallet) => {\n            if (wallet.wallet_id === id) {\n                this.current_wallet = wallet;\n                this.currentWalletChangedEvent.next(wallet);\n            }\n        });\n    }\n\n    getWallet(id): Wallet | null {\n        for (let i = 0; i < this.wallets.length; i++) {\n            if (this.wallets[i].wallet_id === id) {\n                return this.wallets[i];\n            }\n        }\n        return null;\n    }\n\n    getNotLoadedWallet(): Wallet | null {\n        for (let i = 0; i < this.wallets.length; i++) {\n            if (!this.wallets[i].loaded) {\n                return this.wallets[i];\n            }\n        }\n        return null;\n    }\n\n    startCountdown(): void {\n        this.idle.within(this.settings.appLockTime).start();\n    }\n\n    stopCountdown(): void {\n        this.idle.stop();\n    }\n\n    restartCountdown(): void {\n        if (Boolean(this.settings.appLockTime)) {\n            this.idle.within(this.settings.appLockTime).restart();\n        } else {\n            this.stopCountdown();\n        }\n    }\n\n    bytesToMb(bytes): number {\n        return Number((bytes / Math.pow(1024, 2)).toFixed(1));\n    }\n\n    onContextMenu($event: any): void {\n        $event.target['contextSelectionStart'] = $event.target['selectionStart'];\n        $event.target['contextSelectionEnd'] = $event.target['selectionEnd'];\n        if (\n            $event.target &&\n            ($event.target['nodeName'].toUpperCase() === 'TEXTAREA' || $event.target['nodeName'].toUpperCase() === 'INPUT') &&\n            !$event.target['readOnly']\n        ) {\n            this.contextMenuService.show(this.allContextMenu, {\n                x: $event.x,\n                y: $event.y,\n                value: $event.target,\n            });\n            $event.preventDefault();\n            $event.stopPropagation();\n        }\n    }\n\n    onContextMenuOnlyCopy($event: any, copyText?: string): void {\n        $event.preventDefault();\n        $event.stopPropagation();\n        this.contextMenuService.show(this.onlyCopyContextMenu, {\n            value: copyText,\n            x: $event.x,\n            y: $event.y,\n        });\n    }\n\n    onContextMenuPasteSelect($event: any): void {\n        $event.target['contextSelectionStart'] = $event.target['selectionStart'];\n        $event.target['contextSelectionEnd'] = $event.target['selectionEnd'];\n\n        console.warn($event.target);\n        console.warn($event.target['disabled']);\n\n        if (\n            $event.target &&\n            ($event.target['nodeName'].toUpperCase() === 'TEXTAREA' || $event.target['nodeName'].toUpperCase() === 'INPUT') &&\n            !$event.target['readOnly']\n        ) {\n            this.contextMenuService.show(this.pasteSelectContextMenu, {\n                x: $event.x,\n                y: $event.y,\n                value: $event.target,\n            });\n            $event.preventDefault();\n            $event.stopPropagation();\n        }\n    }\n\n    loadCurrentPriceForAllAssets(): void {\n        const wallets: Wallet[] = this.wallets;\n\n        if (!wallets.length) {\n            return;\n        }\n\n        wallets.forEach((wallet: Wallet) => {\n            const { balances } = wallet;\n            this.loadCurrentPriceForAssets(balances);\n        });\n    }\n\n    loadCurrentPriceForAssets(balances: AssetBalance[]): void {\n        const observables = balances.map(({ asset_info: { asset_id } }: AssetBalance) =>\n            this._apiZanoService.getCurrentPriceForAsset(asset_id)\n        );\n\n        from(observables)\n            .pipe(\n                concatMap((observable) => observable),\n                filter(({ success }) => success),\n                scan((acc, value) => {\n                    const { asset_id, data, success } = value;\n\n                    if (!success) {\n                        return acc;\n                    }\n\n                    if (typeof data === 'object' && data.usd === undefined && data.usd_24h_change === undefined) {\n                        return acc;\n                    }\n\n                    return { ...acc, [asset_id]: { data, success } };\n                }, <CurrentPriceForAssets>{})\n            )\n            .subscribe({\n                next: (currentPriceForAssets: CurrentPriceForAssets) => {\n                    const prevCurrentPriceForAssets: CurrentPriceForAssets = this.currentPriceForAssets;\n                    const newCurrentPriceForAssets = { ...prevCurrentPriceForAssets, ...currentPriceForAssets };\n\n                    this.currentPriceForAssets = newCurrentPriceForAssets;\n                    this.currentPriceForAssets$.next(newCurrentPriceForAssets);\n                },\n            });\n    }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { BackendService } from '@api/services/backend.service';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { defaultAssetsInfoWhitelist, ResponseGetWalletInfo, Wallet } from '@api/models/wallet.model';\nimport { Router } from '@angular/router';\nimport { ParamsCallRpc, ResponseCallRpc } from '@api/models/call_rpc.model';\nimport { AssetsWhitelistGetResponseData, VerifiedAssetInfoWhitelist } from '@api/models/assets.model';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ResultAliasByAddress } from '@api/models/rpc.models';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class WalletsService {\n    get wallets(): Wallet[] {\n        return this._variablesService.wallets;\n    }\n\n    set wallets(value) {\n        this._variablesService.wallets = value ?? [];\n    }\n\n    get currentWallet(): Wallet | null | undefined {\n        return this._variablesService.current_wallet;\n    }\n\n    set currentWallet(value) {\n        this._variablesService.current_wallet = value;\n    }\n\n    get opened_wallet_items(): string[] {\n        const items = new Set([]);\n\n        this.wallets.forEach(({ address, alias_info_list }: Wallet) => {\n            if (alias_info_list?.length > 0) {\n                alias_info_list.filter(Boolean).forEach((alias_info) => {\n                    if (alias_info.alias) {\n                        items.add('@' + alias_info.alias);\n                    } else if (alias_info.address) {\n                        items.add(alias_info.address);\n                    } else {\n                        items.add(address);\n                    }\n                });\n            } else {\n                items.add(address);\n            }\n        });\n\n        return [...items];\n    }\n\n    constructor(\n        private _backendService: BackendService,\n        private _variablesService: VariablesService,\n        private _translateService: TranslateService,\n        private _router: Router,\n        private _ngZone: NgZone\n    ) {}\n\n    addWallet(wallet: Wallet): void {\n        const { staking, address } = wallet;\n        const {\n            verifiedAssetInfoWhitelist,\n            settings: { localBlacklistsOfVerifiedAssetsByWallets },\n        } = this._variablesService;\n\n        if (staking) {\n            const message = this._translateService.instant('STAKING.WALLET_STAKING_ON', { value: wallet.alias_info?.alias ?? wallet.name });\n            this._backendService.show_notification('Wallet staking on', message);\n        }\n\n        if (localBlacklistsOfVerifiedAssetsByWallets[address]) {\n            wallet.localBlacklistVerifiedAssets$.next(localBlacklistsOfVerifiedAssetsByWallets[address]);\n        }\n\n        this._variablesService.wallets.push(wallet);\n        this.updateWalletInfo(wallet);\n        this.loadAliasInfoList(wallet);\n        this.setVerifiedAssetInfoWhitelist(verifiedAssetInfoWhitelist);\n    }\n\n    loadAssetsInfoWhitelist(wallet: Wallet): void {\n        const { wallet_id } = wallet;\n        const params: ParamsCallRpc = {\n            jsonrpc: '2.0',\n            id: 0,\n            method: 'assets_whitelist_get',\n            params: {},\n        };\n        this._backendService.call_wallet_rpc([wallet_id, params], (status, response_data: AssetsWhitelistGetResponseData) => {\n            this._ngZone.run(() => {\n                const { result } = response_data;\n                const assetsInfoWhitelist = { ...defaultAssetsInfoWhitelist, ...result };\n\n                wallet.assetsInfoWhitelist = assetsInfoWhitelist;\n                wallet.assetsInfoWhitelist$.next(assetsInfoWhitelist);\n            });\n        });\n    }\n\n    loadAliasInfoList(wallet: Wallet): void {\n        const params = {\n            id: 0,\n            jsonrpc: '2.0',\n            method: 'get_alias_by_address',\n            params: wallet.address,\n        };\n        this._backendService.call_rpc(params, (status: boolean, response_data: ResponseCallRpc<ResultAliasByAddress>) => {\n            this._ngZone.run(() => {\n                wallet.alias_info_list = response_data?.result?.alias_info_list ?? [];\n            });\n        });\n    }\n\n    loadAliasInfoListForWallets(): void {\n        this.wallets.forEach((wallet: Wallet) => {\n            this.loadAliasInfoList(wallet);\n        });\n    }\n\n    setVerifiedAssetInfoWhitelist(assets: VerifiedAssetInfoWhitelist): void {\n        for (const wallet of this.wallets) {\n            wallet.verificationAssetsInfoWhitelist$.next(assets);\n        }\n    }\n\n    getWalletById(wallet_id: number): Wallet | undefined {\n        const { wallets } = this._variablesService;\n        return wallets.find((w) => w.wallet_id === wallet_id);\n    }\n\n    getWalletByAddress(address: string): Wallet | undefined {\n        const { wallets } = this._variablesService;\n        return wallets.find((w) => w.address === address);\n    }\n\n    updateWalletInfo(wallet: Wallet): void {\n        const { wallet_id } = wallet;\n\n        const callback: (status: boolean, response_data: ResponseGetWalletInfo) => void = (status, response_data) => {\n            this._ngZone.run(() => {\n                if (status) {\n                    const { balances } = response_data;\n                    wallet.balances = balances;\n\n                    this._variablesService.loadCurrentPriceForAssets(wallet.balances);\n                }\n            });\n        };\n\n        this._backendService.getWalletInfo(wallet_id, callback);\n\n        this.loadAssetsInfoWhitelist(wallet);\n    }\n\n    closeWallet(wallet_id: number): void {\n        const callback = async (): Promise<void> => {\n            this.wallets = this.wallets.filter((w) => w.wallet_id !== wallet_id);\n\n            await this._ngZone.run(async () => {\n                let url = '/';\n                if (this.wallets.length > 0) {\n                    this.currentWallet = this.wallets[0];\n                    url = '/wallet/';\n                }\n                if (this._variablesService.appPass) {\n                    this._backendService.storeSecureAppData();\n                }\n                await this._router.navigate([url]);\n            });\n        };\n\n        this._backendService.closeWallet(wallet_id, callback);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\ntype TLoaderId = 'fullScreen';\n\ninterface TDataLoader {\n    state: boolean;\n    message: string;\n}\n\ntype TDataLoaders = {\n    [key in TLoaderId]: TDataLoader;\n};\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ZanoLoadersService {\n    private _loaders$ = new BehaviorSubject<TDataLoaders>({\n        fullScreen: { state: false, message: 'Loading' },\n    });\n\n    getState(id: TLoaderId): Observable<boolean> {\n        return this._loaders$.pipe(map((loader) => loader[id].state));\n    }\n\n    getMessage(id: TLoaderId): Observable<string> {\n        return this._loaders$.pipe(map((loader) => loader[id].message));\n    }\n\n    open(id: TLoaderId, message = 'Loading'): void {\n        this._loaders$.next({\n            ...this._loaders$.value,\n            [id]: {\n                state: true,\n                message,\n            },\n        });\n    }\n\n    close(id: TLoaderId): void {\n        this._loaders$.next({\n            ...this._loaders$.value,\n            [id]: {\n                ...this._loaders$.value[id],\n                state: false,\n            },\n        });\n    }\n}\n","export const MIMETypes: string[] = [\n    '.rar',\n    '.txt',\n    '.xls',\n    '.xlsx',\n    '.zip',\n    '.png',\n    '.pdf',\n    '.csv',\n    '.doc',\n    '.docx',\n    '.jar',\n    '.jpeg',\n    '.jpg',\n    '.js',\n    '.json',\n    '.mp3',\n    '.mp4',\n    '.mpeg',\n    '.aac',\n    '.abw',\n    '.arc',\n    '.avif',\n    '.avi',\n    '.azw',\n    '.bin',\n    '.bmp',\n    '.bz',\n    '.bz2',\n    '.cda',\n    '.csh',\n    '.css',\n    '.dll',\n    '.exe',\n    '.eot',\n    '.epub',\n    '.gz',\n    '.gif',\n    '.htm',\n    '.html',\n    '.ico',\n    '.ics',\n    '.jsonld',\n    '.mid',\n    '.midi',\n    '.mjs',\n    '.mpkg',\n    '.odp',\n    '.ods',\n    '.odt',\n    '.oga',\n    '.ogv',\n    '.ogx',\n    '.opus',\n    '.otf',\n    '.php',\n    '.ppt',\n    '.pptx',\n    '.pdb',\n    '.dat',\n    '.rtf',\n    '.sh',\n    '.svg',\n    '.tar',\n    '.tif',\n    '.tiff',\n    '.ts',\n    '.ttf',\n    '.vsd',\n    '.wav',\n    '.weba',\n    '.webm',\n    '.webp',\n    '.woff',\n    '.woff2',\n    '.xhtml',\n    '.xml',\n    '.xul',\n    '.3gp',\n    '.3g2',\n    '.7z',\n];\n","export const generateRandomString = (length = 40): string => {\n    const array: Uint8Array = new Uint8Array(length);\n    window.crypto.getRandomValues(array);\n\n    const regularArray: number[] = Array.from(array);\n\n    return btoa(String.fromCharCode.apply(null, regularArray));\n};\n","import { ValidationErrors } from '@angular/forms';\n\nexport interface ZanoValidationErrors extends ValidationErrors {\n    errorText: string;\n}\n\nexport const wrongAssetId: ZanoValidationErrors = {\n    errorText: 'ASSETS.FORM.ERRORS.WRONG_ASSET_ID',\n};\n\nexport const wrongPassword: ZanoValidationErrors = {\n    errorText: 'Incorrect password',\n};\n\nexport const insufficientFunds: ZanoValidationErrors = {\n    errorText: 'ERRORS.INSUFFICIENT_FUNDS',\n};\n\nexport const assetHasNotBeenAddedToWallet: ZanoValidationErrors = {\n    errorText: 'ERRORS.ASSET_HAS_NOT_BEEN_ADDED_TO_WALLET',\n};\n\nexport const notFileZanoWallet: ZanoValidationErrors = {\n    errorText: 'ERRORS.NOT_FILE_ZANO_WALLET',\n};\n","import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { notFileZanoWallet, ZanoValidationErrors } from '@parts/utils/zano-errors';\nimport { MIMETypes } from '@parts/utils/MIME-types';\nimport { BigNumber } from 'bignumber.js';\nimport { intToMoney } from '@parts/functions/int-to-money';\nimport { WrapInfo } from '@api/models/wrap-info';\n\nexport const REG_EXP_HEX = /^[a-f0-9]{64}$/i;\nexport const REG_EXP_ALIAS_NAME = /^@?[a-z\\d.-]{2,25}$/;\nexport const REG_EXP_REGISTER_ALIAS_NAME = /^@?[a-z\\d.-]{6,25}$/;\nexport const REG_EXP_PASSWORD = /^[A-Za-z0-9!@#$%^&*()_+\\-={}\\[\\]|:;\"'<>,.?/~`]{1,40}$/;\n\nexport class ZanoValidators {\n    static hash({ value }: AbstractControl): ValidationErrors | null {\n        return REG_EXP_HEX.test(value) ? null : { invalidHash: true };\n    }\n\n    static formMatch(firstControlName: string, secondControlName: string, nameErrorKey = 'mismatch'): ValidatorFn {\n        return (abstractControl: AbstractControl): ValidationErrors | null =>\n            abstractControl.get(firstControlName).value === abstractControl.get(secondControlName).value ? null : { [nameErrorKey]: true };\n    }\n\n    static duplicate(valuesForComparisons: string | string[]): ValidatorFn {\n        return ({ value }: AbstractControl): ValidationErrors | null => {\n            const errorObject = { duplicate: true };\n            let error = null;\n\n            if (typeof value === 'string' && value === valuesForComparisons) {\n                error = errorObject;\n            }\n\n            if (Array.isArray(valuesForComparisons) && valuesForComparisons.includes(value)) {\n                error = errorObject;\n            }\n\n            return error;\n        };\n    }\n\n    static zeroValue(control: AbstractControl): ValidationErrors | null {\n        const value = control.value;\n        const isZero = new BigNumber(value).eq(0);\n\n        return isZero ? { zero: true } : null;\n    }\n\n    static greaterMax(maxValue: string | number | BigNumber, decimalPoint: number) {\n        return (control: AbstractControl): ValidationErrors | null => {\n            const max = new BigNumber(intToMoney(maxValue, decimalPoint));\n            const amount = new BigNumber(control.value);\n\n            return amount.isGreaterThan(max) ? { greater_max: { max: max.toString() } } : null;\n        };\n    }\n\n    static lessMin(minValue: string | BigNumber): ValidatorFn {\n        return (control: AbstractControl): ValidationErrors | null => {\n            const value = new BigNumber(control.value);\n            const min = new BigNumber(minValue);\n\n            return value.isLessThan(min) ? { less_min: true } : null;\n        };\n    }\n}\n\nexport const filePathWalletValidator = (path: string): ZanoValidationErrors | null => {\n    if (!(path && path.trim().length)) {\n        return null;\n    }\n\n    const positionLastSlash = path.lastIndexOf('/');\n    const fileName = path.slice(positionLastSlash + 1);\n\n    if (!(fileName && fileName.trim().length)) {\n        return null;\n    }\n\n    if (fileName) {\n        let index = 0;\n        while (index < MIMETypes.length) {\n            if (fileName.includes(MIMETypes[index])) {\n                return notFileZanoWallet;\n            }\n            index++;\n        }\n    }\n\n    return null;\n};\n\nexport function validateWrapInfo(data: WrapInfo): boolean {\n    if (typeof data !== 'object' || data === null) {\n        return false;\n    }\n\n    if (typeof data.unwraped_coins_left !== 'string') {\n        return false;\n    }\n\n    if (typeof data.tx_cost !== 'object' || data.tx_cost === null) {\n        return false;\n    }\n\n    if (typeof data.tx_cost.usd_needed_for_erc20 !== 'string') {\n        return false;\n    }\n\n    if (typeof data.tx_cost.zano_needed_for_erc20 !== 'string') {\n        return false;\n    }\n\n    return true;\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { VariablesService } from '@parts/services/variables.service';\nimport { PaginationStore } from './pagination.store';\nimport * as _ from 'lodash';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PaginationService {\n    constructor(private variables: VariablesService, private ngZone: NgZone, private paginationStore: PaginationStore) {}\n\n    paginate(currentPage = 1): void {\n        if (currentPage < 1) {\n            currentPage = 1;\n        } else if (currentPage > this.variables.current_wallet.totalPages) {\n            currentPage = this.variables.current_wallet.totalPages;\n        }\n        let startPage: number, endPage: number;\n        if (this.variables.current_wallet.totalPages <= this.variables.maxPages) {\n            startPage = 1;\n            endPage = this.variables.current_wallet.totalPages;\n        } else {\n            const maxPagesBeforeCurrentPage = Math.floor(this.variables.maxPages / 2);\n            const maxPagesAfterCurrentPage = Math.ceil(this.variables.maxPages / 2) - 1;\n            if (currentPage <= maxPagesBeforeCurrentPage) {\n                startPage = 1;\n                this.variables.current_wallet.totalPages > this.variables.maxPages\n                    ? (endPage = this.variables.maxPages)\n                    : (endPage = this.variables.current_wallet.totalPages);\n            } else if (currentPage + maxPagesAfterCurrentPage >= this.variables.current_wallet.totalPages) {\n                startPage = this.variables.current_wallet.totalPages - this.variables.maxPages + 1;\n                endPage = this.variables.current_wallet.totalPages;\n            } else {\n                startPage = currentPage - maxPagesBeforeCurrentPage;\n                endPage = currentPage + maxPagesAfterCurrentPage;\n            }\n        }\n        this.ngZone.run(() => {\n            this.variables.current_wallet.pages = Array.from(Array(endPage + 1 - startPage).keys()).map((i) => startPage + i);\n        });\n    }\n\n    getOffset(walletID): number {\n        const mining = this.variables.current_wallet.exclude_mining_txs;\n        const currentPage = this.variables.current_wallet.currentPage;\n        let offset = (currentPage - 1) * this.variables.count;\n        if (!mining) {\n            return offset || 0;\n        }\n        const value = this.paginationStore.value;\n        const pages = value.filter((item) => item.walletID === walletID);\n        if (pages && pages.length > 0) {\n            const max = _.maxBy(pages, 'page');\n            const isForward = this.paginationStore.isForward(pages, currentPage);\n            if (isForward) {\n                offset = max.offset || 0;\n            } else {\n                const index = pages.findIndex((item) => item.page === currentPage);\n                offset = pages[index].offset || 0;\n            }\n        }\n        return offset;\n    }\n\n    calcPages(data): void {\n        if (data.total_history_items && data && data.history) {\n            this.variables.current_wallet.totalPages = Math.ceil(data.total_history_items / this.variables.count);\n            this.variables.current_wallet.totalPages > this.variables.maxPages\n                ? (this.variables.current_wallet.pages = new Array(5).fill(1).map((value, index) => value + index))\n                : (this.variables.current_wallet.pages = new Array(this.variables.current_wallet.totalPages)\n                      .fill(1)\n                      .map((value, index) => value + index));\n        } else if (this.variables.current_wallet.restore) {\n            this.variables.current_wallet.totalPages = Math.ceil((data.history?.length ?? 0) / this.variables.count);\n            this.variables.current_wallet.totalPages > this.variables.maxPages\n                ? (this.variables.current_wallet.pages = new Array(5).fill(1).map((value, index) => value + index))\n                : (this.variables.current_wallet.pages = new Array(this.variables.current_wallet.totalPages)\n                      .fill(1)\n                      .map((value, index) => value + index));\n        }\n    }\n\n    prepareHistory(data, status): void {\n        if (status && data && data.total_history_items) {\n            this.variables.current_wallet.history.splice(0, this.variables.current_wallet.history.length);\n            this.ngZone.run(() => {\n                this.paginate(this.variables.current_wallet.currentPage);\n                if (data.history.length !== 0) {\n                    this.variables.current_wallet.restore = false;\n                    this.variables.current_wallet.total_history_item = data.total_history_items;\n                    this.variables.current_wallet.prepareHistory(data.history);\n                    if (this.variables.current_wallet.currentPage === 1 && data.unconfirmed) {\n                        this.variables.current_wallet.prepareHistory(data.unconfirmed.sort((a, b) => a.timestamp - b.timestamp));\n                    }\n                }\n            });\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport * as _ from 'lodash';\n\nexport interface Pages {\n    page: number;\n    offset: number;\n    walletID: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class PaginationStore {\n    private subject = new BehaviorSubject<Pages[] | null>(null);\n\n    get value(): Pages[] | null {\n        return this.subject.value;\n    }\n\n    isForward(pages, currentPage): boolean {\n        const max = _.maxBy(pages, 'page');\n        return !max || max.page < currentPage || max.page === currentPage;\n    }\n\n    setPage(pageNumber: number, offset: number, walletID: number): void {\n        let newPages: Pages[] = [];\n        const pages = this.subject.getValue();\n        if (pages && pages.length > 0) {\n            newPages = pages.slice(0);\n        }\n        newPages.push({ page: pageNumber, offset, walletID });\n        this.subject.next(newPages);\n    }\n}\n","import { distinctUntilChanged, map } from 'rxjs/operators';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Wallet } from '@api/models/wallet.model';\nimport { Injectable } from '@angular/core';\n\nexport interface Sync {\n    sync: boolean;\n    wallet_id: number;\n}\n\nexport enum StateKeys {\n    wallets = 'wallets',\n    sync = 'sync',\n}\n\nexport interface State {\n    [StateKeys.wallets]: Wallet[] | null | undefined;\n    [StateKeys.sync]: Sync[] | null | undefined;\n}\n\nconst initialState: State = {\n    wallets: undefined,\n    sync: undefined,\n};\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class Store {\n    private subject = new BehaviorSubject<State>(initialState);\n    private store = this.subject.asObservable().pipe(distinctUntilChanged());\n\n    get state(): State {\n        return this.subject.value;\n    }\n\n    select<T>(name: StateKeys): Observable<T> {\n        return this.store.pipe(map((state) => state[name])) as unknown as Observable<T>;\n    }\n\n    set(name: StateKeys, value: any): void {\n        this.subject.next({ ...this.state, [name]: value });\n    }\n}\n","export const materialZanoIcons = [\n    'zano-arrow-left',\n    'zano-arrow-right',\n    'zano-balance',\n    'zano-block-sync',\n    'zano-burn',\n    'zano-check',\n    'zano-check-circle',\n    'zano-check-shield',\n    'zano-close',\n    'zano-close-v2',\n    'zano-contacts',\n    'zano-contracts',\n    'zano-copy',\n    'zano-custom-asset',\n    'zano-delete',\n    'zano-dropdown-arrow-down',\n    'zano-edit',\n    'zano-emit',\n    'zano-export',\n    'zano-fire',\n    'zano-hide-balance',\n    'zano-history',\n    'zano-info',\n    'zano-info-v2',\n    'zano-logo',\n    'zano-logout',\n    'zano-plus',\n    'zano-question',\n    'zano-receive',\n    'zano-regenerate',\n    'zano-row-options',\n    'zano-send',\n    'zano-settings',\n    'zano-show-balance',\n    'zano-system-modal-error',\n    'zano-system-modal-info',\n    'zano-system-modal-success',\n    'zano-staking',\n    'zano-secured',\n    'zano-swap',\n    'zano-update',\n    'zano-wallet-settings',\n    'zano-attention',\n    'zano-circle-arrow-right',\n    'zano-crown',\n];\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'lodash';\n\nexport const buildTime = '2024-11-29T13:48:44.519Z';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n"],"names":["NgZone","Observable","Subject","JSONBigNumber","BigNumber","ParamsType","getParamsType","value","array","Array","isArray","object","Object","keys","includes","convertersObjectForTypes","string","stringify","map","v","convertorParams","type","StatusCurrentActionState","Commands","BackendService","constructor","translate","variablesService","modalService","moneyToIntPipe","ngZone","bigNumberParser","key","val","_a","name","indexOf","toNumber","i","length","Debug","message","console","error","warn","log","eventSubscribe","command","callback","on_core_event","backendObject","connect","str","parse","initService","observer","backendLoaded","window","QWebChannel","qt","webChannelTransport","channel","objects","mediator_object","next","webkitLaunchedScript","runCommand","webkit_launched_script","quitRequest","on_request_quit","getAppData","get_app_data","storeAppData","wallets","settings","forEach","wallet","push","path","localBlacklistsOfVerifiedAssetsByWallets","reduce","acc","address","localBlacklistVerifiedAssets$","localBlacklistVerifiedAssets","store_app_data","getSecureAppData","pass","get_secure_app_data","setMasterPassword","set_master_password","checkMasterPassword","check_master_password","getIsDisabledNotifications","params","get_is_disabled_notifications","setIsDisabledNotifications","state","set_is_disabled_notifications","storeSecureAppData","contacts","staking","contact","notes","data","store_secure_app_data","JSON","appPass","dataStore","backendCallback","printLog","msgOrObj","msg","e","print_log","log_level","appLog","dropSecureAppData","drop_secure_app_data","haveSecureAppData","have_secure_app_data","saveFileDialog","caption","fileMask","default_path","dir","filemask","default_dir","show_savefile_dialog","openFileDialog","show_openfile_dialog","storeFile","buff","store_to_file","loadFile","load_from_file","push_offer","generateWallet","generate_wallet","exportWalletHistory","json_string","export_wallet_history","openWallet","txs_to_return","testEmpty","open_wallet","closeWallet","wallet_id","close_wallet","getSmartWalletInfo","seed_password","get_smart_wallet_info","getSeedPhraseInfo","param","get_seed_phrase_info","runWallet","run_wallet","isValidRestoreWalletText","is_valid_restore_wallet_text","restoreWallet","seed_phrase","seed_pass","restore_wallet","sendMoney","asyncCall","transfer","setupJwtWalletRpc","secret","setup_jwt_wallet_rpc","zanoCompanionForm","validateAddress","validate_address","setClipboard","set_clipboard","getClipboard","get_clipboard","createProposal","title","comment","a_addr","b_addr","to_pay","a_pledge","b_pledge","time","payment_id","parseInt","details","t","c","transform","expiration_period","fee","default_fee_big","b_fee","create_proposal","getContracts","get_contracts","acceptProposal","contract_id","accept_proposal","releaseProposal","release_type","release_contract","requestCancelContract","request_cancel_contract","acceptCancelContract","accept_cancel_contract","getMiningHistory","get_mining_history","startPosMining","start_pos_mining","stopPosMining","stop_pos_mining","openUrlInBrowser","url","open_url_in_browser","start_backend","node","host","port","configure_for_remote_node","remote_node_host","remote_node_port","getDefaultFee","get_default_fee","setBackendLocalization","stringsArray","strings","language_title","set_localization_strings","registerAlias","alias","reward","tracking_key","request_alias_registration","updateAlias","replace","request_alias_update","getAllAliases","get_all_aliases","getAliasInfoByName","get_alias_info_by_name","getAliasInfoByAddress","get_alias_info_by_address","getAliasCoast","get_alias_coast","resyncWallet","id","resync_wallet","getRecentTransfers","offset","count","exclude_mining_txs","get_recent_transfers","getPoolInfo","get_tx_pool_info","getVersion","get_version","status","version","errorVersion","get_network_type","status_network","errorType","isRemnoteNodeModePreconfigured","is_remnotenode_mode_preconfigured","setLogLevel","level","set_log_level","async_call","job_id","asyncCall2a","async_call_2a","dispatchAsyncCallResult","dispatch_async_call_result","json_resp","asyncCommandResults","response","group","groupEnd","run","setTimeout","dispatchAsyncCallResult$","handleCurrentActionState","handle_current_action_state","currentActionState","handleCurrentActionState$","setEnableTor","set_enable_tor","show_notification","getOptions","get_options","disable_price_fetch","use_debug_mode","rpc_port","disable_price_fetch$","use_debug_mode$","addCustomAssetId","add_custom_asset_id","removeCustomAssetId","remove_custom_asset_id","getWalletInfo","get_wallet_info","call_rpc","call_wallet_rpc","informerRun","error_translate","instant","default_fee","currency","defaultTicker","prepareModal","commandDebug","result","debug","_send_params","_result","response_data","error_code","resultStr","Result","core_busy","Status","undefined","res_error_code","current_wallet_id","current_wallet","Action","i0","factory","providedIn","Renderer2","StateKeys","interval","of","catchError","retry","startWith","switchMap","takeUntil","paths","pathsChildrenAuth","hasOwnProperty","Breakpoints","AppComponent","http","renderer","backendService","router","intToMoneyPipe","store","dialog","matDialog","zanoLoadersService","_apiService","_walletsService","_breakpointObserver","Map","XSmall","Small","Medium","Large","XLarge","_setTranslate","_setResponseClasses","translateUsed","language","ngOnInit","subscribe","initMessage","st2","dd2","quit_requested","onQuitRequest","closeAll","needOpenWallets","daemon_state","saveFunction","recursionCloseWallets","lastIndex","splice","update_wallet_status","wallet_state","is_mining","getWallet","loaded","balances","mined_total","minied_total","alias_available","is_alias_operations_available","has_bare_unspent_outputs","wallet_sync_progress","progress","sync_started","sync_wallets","addToStore","update_daemon_state","daemon_network_state","setExpMedTs","net_time_delta_median","last_build_available","last_build_displaymode","setHeightApp","height","setHeightMax","max_net_seen_height","setDownloadedBytes","downloaded_bytes","setTotalBytes","download_total_data_size","daemon_state$","max","current","return_val","Math","floor","sync","progress_value","progress_value_text","blocks","toFixed","download","firstOnlineState","loadAliasInfoListForWallets","status_fee","data_fee","money_transfer","ti","tr_info","history","tx_type","refreshStakingEvent$","tr_exists","excluded_history","some","elem","tx_hash","currentPage","prepareHistory","restore","total_history_item","totalPages","ceil","maxPages","pages","fill","index","exp_med_ts","height_app","contract","contracts","is_a","cancel_expiration_time","expiration_time","timestamp","searchResult2","notViewedContracts","find","j","viewedContracts","searchResult3","searchResult4","searchResult","is_new","findContract","prop","handle_deeplink_click","deeplink$","money_transfer_cancel","removeFromHistory","error_tr","amount","events","method","all_aliases_loaded","newAlias","detail","all_aliases","wallet1","getWalletByAddress","loadAliasInfoList","findAlias","wallet2","old_address","wallet3","intervalUpdateContractsState","setInterval","expMedTsEvent","getExpMedTsEvent","newTimestamp","isDarkTheme$","visibilityBalance$","isDarkTheme","visibilityBalance","appUseTor","scale","setStyle","document","documentElement","setAttribute","use","navigate","auth","noWallet","then","statusPass","queryParams","appLogin","getInfo","_startWrapInfoPolling","is_remote_node","_getZanoCurrentSupply","updateTime","pipe","_destroy$","loadCurrentPriceForAllAssets","ngOnDestroy","complete","clearInterval","unsubscribe","aliases","filter","Boolean","sort","a","b","boolean","item","set","testnet","networkType","_loadVerifiedAssetInfoWhitelist","getVerifiedAssetInfoWhitelist","assets","verifiedAssetInfoWhitelist","setVerifiedAssetInfoWhitelist","jsonrpc","info$","flags","zano_current_supply","addLangs","setDefaultLang","observe","query","breakpoints","currentScreenSize","displayNameMap","get","body","classList","remove","values","add","getWrapInfo","is_wrap_info_service_inactive$","is_wrap_info_service_inactive","wrap_info_error","wrap_info","wrap_info$","selectors","decls","vars","consts","template","inject","TranslateService","CREATE_NEW_WALLET_HELP_PAGE","filePathWalletValidator","AddWalletComponent","translateService","file_status","file_data","positionLastSlash","lastIndexOf","new_default_path","slice","text","errorText","openInBrowser","ctx","FormBuilder","Validators","Wallet","BehaviorSubject","REG_EXP_PASSWORD","ZanoValidators","LoginComponent","walletsService","route","backend","fb","password","nonNullable","control","pattern","confirmation","validators","formMatch","destroy$","onSubmitCreatePass","regForm","valid","dataIsLoaded","appLockTime","startCountdown","onSkipCreatePass","resetJwtWalletRpc","zanoCompation","resetLoading$","onSubmitAuthPass","submitLoading$","authForm","prevUrl","setAuthPassError","wrong_password","getData","isEmptyObject","getWalletData","walletData","openWallets","runWallets","wallet_index","open_status","open_data","open_error","new_wallet","balance","unlocked_balance","tracking_hey","is_auditable","is_watch_only","recent_history","total_history_items","addWallet","run_status","errors","controls","setErrors","NonNullableFormBuilder","VariablesService","ModalService","Router","WalletsService","CreateWalletComponent","routerLink","required","duplicate","walletNamesForComparisons","confirm","savedWalletName","createForm","substr","createWallet","loading$","selectedPath","getRawValue","generate_status","generate_data","errorCode","run_data","setCurrentWallet","errorTranslationKey","selectWalletLocation","patchValue","delay","DeeplinkComponent","notFileZanoWallet","wrongPassword","OpenWalletComponent","maxLength","maxWalletNameLength","filePath","openWalletForm","filename","markAsTouched","openStatus","openData","exists","open_from_exist","scaleItems","generateRandomString","debounceTime","ctx_r30","ctx_r7","SettingsComponent","compose","new_password","new_confirmation","label","disabled","hasAppPass","translationKey","setValue","emitEvent","currentBuild","currentNotificationsState","valueChanges","generateSecret","copySecret","isSecretWasCopied","secretWasCopiedTimeout","clearTimeout","copyBuildVersion","isBuildVersionWasCopied","buildVersionWasCopiedTimeout","regenerateSecret","setScale","onSubmitChangePass","changeForm","enable","onSave","reset","toggleNotifications","toggleUseTor","ifSaved","onLockChange","restartCountdown","onLogChange","onLanguageChange","onCurrencyChange","showPrice","toggleDarkTheme","AssetDetailsComponent","ConfirmModalComponent","LOCKED_BALANCE_HELP_PAGE","IntToMoneyPipe","ZANO_ASSET_INFO","MatDialog","intToMoney","$event","ctx_r0","ctx_r1","AssetsComponent","itemsPerPage","isShowPagination","paginatePipeArgs","_listenChangeWallet","getFiatValue","priceData","currentPriceForAssets","asset_info","asset_id","fiatPrice","fiat_prices","_b","total","decimal_point","fiatValue","multipliedBy","decimalPlaces","_c","getFiatPrice","currentPrice","toUpperCase","showChange","change","usd_24h_change","changeClass","trackByAssets","trackByPages","assetDetails","config","_matDialog","open","beforeRemoveAsset","full_name","_translateService","afterClosed","confirmed","_removeAsset","verifiedAssetIdWhitelist","transfer_form_value","isVerifiedAsset","addAssetToLocalBlacklistVerifiedAssets","_backendService","_ngZone","currentWallet","updateWalletInfo","getBalanceTooltip","tooltip","createElement","scrollWrapper","unlocked","ticker","available","innerText","availableB","_intToMoneyPipe","appendChild","locked","lockedB","minus","link","innerHTML","addEventListener","isShowDeleteAsset","currentWalletChangedEvent","isWalletReady","isWalletLoaded","isDaemonReady","isWalletUsable","navigateToSend","asset","_router","insufficientFunds","moneyToInt","MAT_DIALOG_DATA","MatDialogRef","MAXIMUM_VALUE","BurnCustomAssetComponent","_fb","prepared_amount","assetBalance","getBalanceByAssetId","asset_not_found","maximum_amount_by_decimal_point","isGreaterThan","greater_max","preparedUnlocked","submit","form","burn_amount","toString","matDialogRef","close","EmitCustomAssetComponent","total_max_supply","current_supply","prepared_total_max_supply","prepared_current_supply","plus","greater_than_total_max_supply","destinations","REG_EXP_HEX","UpdateCustomAssetComponent","owner","test","hex_not_valid","assign","address_not_valid","hasError","asset_descriptor","ConfirmCreateCustomAssetComponent","take","TransactionDetailsForCustomAssetsComponent","CreateNewAssetComponent","minLength","min","meta_info","hidden_supply","isLessThan","greater_than_max","disableClose","countDestination","destinationAmount","halfDestinationAmount","div","eq","CommonModule","IsVisibleControlErrorPipe","LoaderComponent","LowerCaseDirective","MatAutocompleteModule","MatOptionModule","ReactiveFormsModule","ShortStringPipe","TranslateModule","merge","tap","CdkVirtualScrollViewport","ScrollingModule","_r14","ctx_r4","vm_r1","_r2","AddressFieldComponent","_wallets_service","opened_wallet_items","variables_service","alias_info","address_items$","control_ref","condition","startsWith","lower_case_disabled$","loading_address_items$","_opened_wallet_items","_alias_items","statusChanges","updateAddressErrorMessage","pasteListenAddressField","event","preventDefault","clipboardData","toLowerCase","trackByFn","error_messages","openAutocomplete","cdkVirtualScrollViewPort","scrollToIndex","checkViewportSize","viewQuery","i1","i2","i4","i5","i6","styles","ElementRef","EventEmitter","BLOCK_EXPLORER_TN_TX_URL_PREFIX","BLOCK_EXPLORER_TX_URL_PREFIX","successfulStatuses","STATE_SENDING","STATE_SENT_SUCCESS","STATE_INITIALIZING","STATE_DOWNLOADING_CONSENSUS","STATE_MAKING_TUNNEL_A","STATE_MAKING_TUNNEL_B","STATE_CREATING_STREAM","STATE_SUCCESS","failedStatuses","STATE_SEND_FAILED","STATE_FAILED","SendDetailsModalComponent","currentActionState$","currentActionStates","currentActionStates$","isSentSuccess","isSentFailed","isDetailsNotEmpty","responseData$","addClass","actionState","success","removeClass","toggleDetails","stateDetails$","scrollToBottomDetailsList","trackBy","isSuccess","action","isFailed","elDetailsList","nativeElement","scrollTop","scrollHeight","hash","REG_EXP_ALIAS_NAME","validateWrapInfo","ApiService","destinationControl_r5","_r15","ctx_r3","DEFAULT_SEND_MONEY_PARAMS","is_currency_input_mode","is_visible_wrap_info","alias_address","mixin","lock_time","push_payer","hide_receiver","DEFAULT_PRICE_INFO","SendComponent","_createForm","formValue","isVisibleWrapInfoByDestinations","is_submit_disabled","is_current_wallet_loaded","condition1","invalid","condition2","condition3","_subscribeToIsWrapInfoServiceInactive","updateValueAndValidity","beforeSubmit","is_send_modal_state","_backend_service","getTransferParams","_ng_zone","is_send_details_modal_state","convertToCurrencyAmount","price_info","currency_price","dividedBy","prepareTransferDestinationsFormValueToTransferDestination","handleConfirmed","handeCloseSendDetailsModal","addDestination","_createDestinationFromGroup","removeDestination","removeAt","maxCommentLength","init_transfer_form_value","history_state","history_asset","destination","wallet_id_control","asset_id_control","destinations_control","comment_control","mixin_control","lock_time_control","fee_control","greaterMax","lessMin","push_payer_control","hide_receiver_control","_listenSendActionData","_saveSendMoneyParams","_formListeners","markAllAsTouched","_validateAddress","parent","is_visible_wrap_info_control","_setError","_clearError","_validateAlias","alias_not_valid","alias_address_control","alias_not_found","errorKey","_validateAddressOrAlias","_subscribeToAssetIdChanges","_subscribeToFormChanges","_subscribeToDescriptionsChanges","disable","total_destinations_amount_and_fee","assetId","_api_service","getCurrentPriceForAsset","priceInfo","price_info$","sendActionData$","comments","hide_sender","is_visible_additional_options_state","address_control","bind","amount_control","zeroValue","is_currency_input_mode_control","wrapInfo","amountBigNumber","maxAllowed","wrap_info_null","wrap_info_invalid","unwraped","unwraped_coins_left","needed","tx_cost","zano_needed_for_erc20","great_than_unwraped_coins","less_than_zano_needed","ChangeDetectorRef","RouterLinkWithHref","BreadcrumbsComponent","DefaultImgModule","InputValidateModule","FormsModule","IntToMoneyPipeModule","MoneyToIntPipeModule","NgSelectModule","assetHasNotBeenAddedToWallet","MatIconModule","GetLogoByAssetInfoPipe","_r33","ctx_r24","_r22","CreateSwapComponent","receiverAddress","isVisibleErrorByControl","dirty","touched","isVisibleErrorByForm","reverse","sending","receiving","updateReceiverAddressErrorMessage","errorMessages","pasteListenReceiverAddressField","lowerCaseDisabled$","sendingAsset","getAssetInfoByAssetId","receivingAsset","params2","proposal","to_finalizer","to_initiator","mixins","fee_paid_by_a","aliasAddress","navigateByUrl","hex_raw_proposal","errorRpc","balances$","sendingAssetsInfo$","receivingAssetsInfo$","sendingDecimalPoint$","receivingDecimalPoint$","addressItems$","loadingAddressItems$","_openedWalletItems","_aliasItems","zero","preparedAmount","valid_status","_cdr","markForCheck","detectChanges","alias_status","alias_data","sameAssetsId","_setSendingAssetIdFromHistoryState","i3","i8","i9","distinctUntilChanged","ExportHistoryModalComponent","AddCustomTokenComponent","NavigationCancel","NavigationEnd","NavigationError","NavigationStart","BreakpointObserver","objTabs","icon","hidden","send","receive","swap","indicator","WalletComponent","breakpointObserver","matches","walletLoaded","createTabs","setDisabledTabs","is_hardfok_active$","setHiddenTabs","isShowMigrateAlert","navigationInterceptor","loader","conditionForHiding","tabs","onKeyPressed","walletSyncVisible","onKeyUpPressed","settingsButtonInterval","settingsButtonDisabled","select","in_progress","updateWalletStatus","resyncCurrentWallet","addCustomToken","exportHistory","ids","tab","hostBindings","MatTooltipModule","VisibilityBalanceButtonComponent","standalone","features","OpenWalletModalComponent","_modalService","_renderer","notFound","emptyPass","initializeWallet","resetPasswordError","isWrongPassword$","isFormInvalid","handleWalletOpening","handleWrongPassword","handleFileNotFound","handleSuccessfulWalletOpen","errorMessage","walletExists","addNewWallet","skipWallet","newWallet","createWalletFromData","createPagesArray","from","_","shift","hostVars","concatMap","scan","Idle","Dialog","MAX_COMMENT_LENGTH","MAX_WALLET_NAME_LENGTH","_apiZanoService","contextMenuService","info","sum","filters","stakingFilters","whenNotInteractive","do","stopCountdown","_dialog","isCurrentWalletSync","isCurrentWalletLoaded","getHeightAppEvent","height_max","getHeightMaxEvent","bytes","downloaded","bytesToMb","getDownloadedAppEvent","getTotalEvent","getNotLoadedWallet","idle","within","start","stop","restart","Number","pow","onContextMenu","target","show","allContextMenu","x","y","stopPropagation","onContextMenuOnlyCopy","copyText","onlyCopyContextMenu","onContextMenuPasteSelect","pasteSelectContextMenu","loadCurrentPriceForAssets","observables","observable","usd","prevCurrentPriceForAssets","newCurrentPriceForAssets","currentPriceForAssets$","defaultAssetsInfoWhitelist","_variablesService","items","Set","alias_info_list","loadAssetsInfoWhitelist","assetsInfoWhitelist","assetsInfoWhitelist$","verificationAssetsInfoWhitelist$","getWalletById","w"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}